{"version":3,"sources":["webpack:///C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js","webpack:///../es2015/.internal/bundled/xlsx/xlsx.mjs","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/process/browser.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","Object","defineProperty","__webpack_exports__","Buffer","process","__webpack_require__","parse_xlscfb","parse_zip","readSync","readFileSync","writeSync","writeFileSync","writeFileAsync","writeSyncXLSX","writeFileSyncXLSX","utils","set_fs","set_cptable","__stream","SSF","CFB","$cptable","XLSX","version","current_codepage","current_ansi","VALID_ANSI","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","indexOf","set_cp","reset_cp","char_codes","data","o","len","length","charCodeAt","utf16leread","String","fromCharCode","join","utf16beread","debom","c1","c2","slice","_getchar","x","_getansi","cptable","decode","cpdoit","DENSE","DIF_XL","Base64_map","Base64_encode","input","c3","e1","e2","e3","e4","charAt","Base64_decode","replace","has_buf","versions","node","Buffer_from","nbfs","from","buf","enc","bind","buf_utf16le","toString","new_raw_buf","alloc","Uint8Array","Array","new_unsafe_buf","allocUnsafe","s2a","split","map","s2ab","ArrayBuffer","view","a2s","isArray","ab2a","Error","bconcat","bufs","concat","isBuffer","maxlen","set","apply","call","chr0","chr1","_strrev","pad0","v","t","fill","pad_","rpad_","p2_32","pad0r","round","pad0r1","pad0r2","SSF_isgeneral","days","months","table_fmt","3","4","9","10","11","12","13","14","15","16","17","18","19","20","21","22","37","38","39","40","45","46","47","48","49","56","SSF_default_map","5","6","7","8","23","24","25","26","27","28","29","30","31","50","51","52","53","54","55","57","58","59","60","61","62","67","68","70","71","72","73","74","75","76","78","79","80","81","82","SSF_default_str","63","64","65","66","41","42","43","44","SSF_frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","q","SSF_parse_date_code","opts","b2","date","toPrecision","n","Number","SSF_normalize_xl_unsafe","time","dow","dout","out","T","u","y","H","M","S","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","SSF_fix_hijri","SSF_strip_decimal","SSF_general_num","V","LOG10E","SSF_normalize_exp","w","toFixed","toExponential","SSF_small_exp","substr","SSF_large_exp","toUpperCase","SSF_general","SSF_format","datenum","SSF_write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","r","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","SSF_abstime","fmt_is_date","cfregex2","chkcond","thresh","parseFloat","choose_fmt","f","in_str","SSF_split_fmt","l","lat","m1","m2","dateNF","table","flen","dt","lst","hr","toLowerCase","ssm","_dt","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","eval_fmt","SSF_load","undefined","SSF_load_table","tbl","make_ssf","SSF_init_table","format","load","_table","load_table","parse_date_code","is_date","get_table","SSFImplicit","32","33","34","35","36","dateNFregex","bad_formats","d.m","SSF__load","_fs","CRC32","T0","Int32Array","signed_crc_table","TT","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","fs","dirname","p","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","sz1","sz2","usz","csz","get_fs","parse","file","options","root","di","row","test","mboundary","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","check_get_mver","header","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","push","sector_list","sl","chkd","buf_chain","modulus","k","seen","addr","nodes","__toBuffer","make_sector_list","name","Paths","files","mini","minifat_store","pl","namelen","__utf16le","color","R","clsid","state","start","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","new_buf","__readUInt32LE","cfb","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","fullPaths","create","HEADER_CLSID","sort","Z","namecmp","elt","_write","_opts","fileType","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_deflateRawSync","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","console","error","copy","_zlib","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","deflateRawSync","_deflate","CLEN_ORDER","LEN_LN","DST_LN","bit_swap_8","use_typed_arrays","bitswap8","bit_swap_n","b","rev","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","a","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","boff","write_stored","addrs","hash","mlen","len_eb","dst_eb","write_huff_fixed","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","woff","OL","max_len_1","max_len_2","bits","code","dst","inflate","warn_or_throw","wrn","msg","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","cfb_add","unsafe","ContentTypeMap","htm","xml","gif","jpg","png","mso","thmx","sh33tj5","ctype","ext","text","encoded","si","end","tmp","fdata","fname","cte","trim","oi","parse_quoted_printable","fpath","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read_file","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","blobify","a2u","write_dl","Deno","TextEncoder","encode","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","body","appendChild","click","removeChild","b64","Base64_encode_arr","$","File","Folder","open","encoding","close","keys","ks","o2","prototype","hasOwnProperty","evert_key","obj","key","K","evert","evert_num","dnthresh","UTC","dnthresh1","dnthresh2","res","getTime","numdate","setTime","parse_isodur","sec","pdre1","pdre2","pdre3","parseDate","cc2str","arr","debomit","TextDecoder","€","‚","ƒ","„","…","†","‡","ˆ","‰","Š","‹","Œ","Ž","‘","’","“","”","•","–","—","˜","™","š","›","œ","ž","Ÿ","dup","JSON","stringify","fuzzynum","isFinite","wt","FDRE1","FDRE2","FDISO","utc_append_works","valueOf","lower_months","fuzzydate","local_to_utc","lower","lnos","fuzzytime1","fuzzytime2","getYear","split_regex","safe_split_regex","re","def","utc_to_local","utc","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","local","getMilliseconds","remove_doctype","index","str_match_ng","ei","str_remove_ng","last","xml_boundary"," ","\t","\r","\n",">","str_match_xml","tag","sf","et","str_match_xml_ns","str_match_xml_ns_cache","RegExp","lastIndex","exec","str_match_xml_ns_g","str_remove_xml_ns_g","str_remove_xml_ns_cache","str_match_xml_ig","getdatastr","asNodeBuffer","asBinary","_data","getContent","getdatabin","safegetzipfile","zip","g","getzipfile","getzipdata","safe","getdata","getzipstr","zipentries","zip_add_file","widx","ridx","utf8decode","zip_new","zip_read","resolve_path","result","target","step","XML_HEADER","attregexg","tagregex1","tagregex","nsregex","nsregex2","parsexmltag","skip_root","skip_LC","z","eq","quot","strip_ns","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","unescapexml","encregex","coderegex","xlsx","raw_unescapexml","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","parsexmlbool","utf8reada","orig","utf8readb","ww","utf8readc","utf8corpus","utf8read","htmldecode","entities","vtvregex","vtmregex","parseVector","matches","baseType","WTF","forEach","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","xlml_normalize","xlmlregex","XMLNS","CORE_PROPS","CUST_PROPS","EXT_PROPS","CT","RELS","TCMNT","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","XMLNS_main","XLMLNS","html","___toBuffer","___utf16le","__readUInt16LE","___hexlify","__hexlify","___utf8","__readUInt8","__utf8","___lpstr","__lpstr","___cpstr","__cpstr","___lpwstr","__lpwstr","___lpp4","__lpp4","___8lpp4","__8lpp4","___double","read_double_le","__double","is_buf","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","this","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cpp","bs","av","write_double_le","hexstr","fld","pos","parsenoop","recordhopper","cb","tmpbyte","cntbyte","RT","XLSBRecordEnum","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","encode_cell","fix_col","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","unfix_row","decode_col","colstr","unfix_col","col","decode_cell","decode_range","encode_range","cs","ce","fix_range","a1","formula_quote_sheet_name","sname","safe_decode_range","safe_format_cell","XF","numFmtId","format_cell","BErr","sheet_to_workbook","sheet","sheets","SheetNames","Sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__Rstr","__C","nullError","sheetStubs","cellDates","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","theme","nTS","tint","rgb","parse_ClipboardFormatOrString","VT_I2","VT_I4","VT_VARIANT","VT_USTR","VT_CUSTOM","DocSummaryPIDDSI","2147483648","2147483651","1919054434","SummaryPIDSI","CountryEnum","84","86","90","105","213","216","218","351","354","358","420","886","961","962","963","964","965","966","971","972","974","981","65535","XLSFillPattern","XLSIcv","rgbify","RBErr","#NULL!","#DIV/0!","#VALUE!","#REF!","#NAME?","#NUM!","#N/A","#GETTING_DATA","#WTF?","XLSLblBuiltIn","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.sheet.macroEnabled.main+xml","application/vnd.ms-excel.sheet.binary.macroEnabled.main","application/vnd.ms-excel.addin.macroEnabled.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml","application/vnd.ms-excel.worksheet","application/vnd.ms-excel.binIndexWs","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml","application/vnd.ms-excel.chartsheet","application/vnd.ms-excel.macrosheet+xml","application/vnd.ms-excel.macrosheet","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml","application/vnd.ms-excel.dialogsheet","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml","application/vnd.ms-excel.sharedStrings","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml","application/vnd.ms-excel.styles","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml","application/vnd.ms-excel.comments","application/vnd.ms-excel.threadedcomments+xml","application/vnd.ms-excel.person+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-office.chartex+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","metadata","styles","write_ct","type2ct","evert_arr","xmlns","xmlns:xsd","xmlns:xsi","Extension","ContentType","f1","PartName","bookType","f2","f3","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","CMNT","SST","STY","THEME","CHART","CHARTEX","CS","WS","DS","MS","IMG","DRAW","XLMETA","PEOPLE","CONN","VBA","get_rels_path","parse_rels","currentFilePath","rels","!id","rel","Type","Target","Id","TargetMode","canonictarget","write_rels","rid","add_rels","rId","relobj","targetmode","CT_ODS","write_rdf_type","write_rdf_has","write_meta_ods","wb","parse_core_props","cur","cp_doit","write_core_props","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","Props","CreatedDate","xsi:type","ModifiedDate","PseudoPropsPairs","load_props_pairs","HP","TOP","props","hp","parts","Worksheets","NamedRanges","DefinedNames","Chartsheets","ChartNames","write_ext_props","W","Application","xmlns:vt","custregex","write_cust_props","pid","write_vt","fmtid","evert_XLMLDPM","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","xlml_set_prop","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_VtHeadingPair","headingString","parse_TypedPropertyValue","parse_dictionary","CodePage","dict","parse_BLOB","bytes","ret","Size","parse_ClipboardData","parse_VtUnalignedString","cElements","parse_VtVecHeadingPairValue","parse_VtVecLpwstrValue","parse_VtVecUnalignedLpstrValue","write_TypedPropertyValue","write_FILETIME","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","hdr","piao","prop","pr","pio","unshift","pinfo","parse_PropertySetStream","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet1","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","parse_Bes","write_Bes","parse_ShortXLUnicodeString","cch","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","width","cRun","write_XLUnicodeRichExtendedString","xlstr","otext","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkMoniker","extra","parse_URLMoniker","cAnti","preamble","ansiPath","parse_FileMoniker","parse_HyperlinkString","write_HyperlinkString","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_XTI","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_Ref","parse_FtCmo","ot","id","parse_FtSkip","FtTab","cf","fSharedNote","parse_BOF","BIFFVer","write_BOF","write_BoundSheet8","hs","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","write_Format","b5","parse_BIFF2Format","parse_Dimensions","write_XF","ixfeP","style","write_BIFF3XF","xf","write_BIFF4XF","write_BoolErr","os","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","udfName","parse_AddinUdf","Name","parse_Lbl","chKey","cce","itab","npflen","rgce","rgcb","parse_Rgce","parse_RgbExtra","parse_NameParsedFormula","parse_ExternSheet","parse_BIFF5ExternSheet","parse_Array","ref","parse_ArrayParsedFormula","write_NOTE_BIFF2","parse_BIFF5OT","cchName","write_HLink","hl","O","hashidx","F","Pretarget","write_Hyperlink","write_HLinkTooltip","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","level","parse_Blank","parse_Scl","parse_String","write_BIFF2Cell","ifmt","DBF_SUPPORTED_VERSIONS","DBF","dbf_codepage_map","100","101","102","103","104","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","87","88","89","108","135","dbf_reverse_map","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","codepage","fields","field","hend","hi","lo","sheetRows","dbf_to_aoa","wch","_RLEN","?","","to_workbook","to_sheet","from_sheet","old_cp","aoa","sheet_to_json","headers","cols","hcnt","coltypes","colwidths","coldecimals","guess","_guess","hf","_f","hb","rout","_n","_l","_s","SYLK","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","B ","!","\"","#","(","%","'","H ","+",";","<","=","{","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","encode_sylk_str","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","Workbook","WBProps","Names","rstr","record","d1904","nn","Sheet","Ref","rc_to_a1","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","cell_t","cmnt","cellText","shrbase","shift_formula_str","F_seen","hidden","hpt","hpx","pt2px","process_col","write_ws_cell_sylk","a1_to_rc","write_ws_cmnt_sylk","aoasht","sylk_to_aoa","outwb","_formats","RS","rec","wpx","width2px","px2char","write_ws_cols_sylk","rows","px2pt","write_ws_rows_sylk","DIF","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","make_value","make_value_str","_DIF_XL","ETH","eth_to_sheet","eth_to_aoa","sep","meta","coord","sheet_to_eth_data","PRN","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","dsv_to_sheet_str","FS","sepcc","startcc","_re","dateNF_regex","finish_cell","fuzzyfmla","news","Y","datestr","timestr","dateNF_fix","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","firstbyte","WK_","lotushopper","Enum","WK1Enum","LOTUS_DATE_FMTS","lotus_to_workbook_buf","next_n","sidx","snames","realnames","sdata","refguess","lastcell","FMTS","QPWNFTable","book_append_sheet","CC","fmtidx","delta","newcell","parse_qpw_str","qpw_to_workbook_buf","vers","qpro","works","works2","tmpcell","WK3Enum","osheets","rnames","!ref","parse_cell","get_wk1_fmt","write_LABEL","write_INTEGER","write_NUMBER","wk1_parse_rc","FuncTab","83","109","111","BinOpTab","parse_cell_3","write_LABEL_16","wsidx","parse_NUMBER_17","v1","v2","write_NUMBER_17","log2","parse_NUMBER_27","parse_SHEETNAMECS","write_XFORMAT_SHEETNAME","argc","argL","argR","args","wk1_fmla_to_csf","21506","142","147","153","154","155","156","174","175","176","184","185","187","188","195","205","206","207","208","256","259","260","261","262","263","265","266","267","268","270","271","384","389","390","393","396","512","514","513","516","517","640","641","642","643","644","645","646","647","648","658","659","660","661","662","665","666","768","772","1537","1600","1602","1793","1794","1795","1796","1920","2048","2049","2052","2688","10998","12849","28233","28484","288","304","320","sheet_to_wk1","write_biff_rec","write_BOF_WK1","write_RANGE","max_R","book_to_wk3","wscnt","write_BOF_WK3","parse_rs","parse_r","rpr","font","pass","shadow","outline","strike","uval","family","valign","parse_rpr","rregex","rend","rs","filter","rs_to_html","nlregex","r_to_html","terms","intro","outro","align","parse_rpr2","sitregex","sirregex","parse_si","cellHTML","sstr1","sstr2","straywsregex","write_BrtSSTItem","write_sst_bin","sst","Count","Unique","write_BrtBeginSst","_JS2ANSI","parse_CRYPTOVersion","Major","Minor","parse_DataSpaceMapEntry","comps","parse_Primary","U","parse_TransformInfoHeader","ename","cmode","parse_EncryptionHeader","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","parse_EncryptionVerifier","Salt","Verifier","VerifierHash","parse_EncryptionInfo","verifier","parse_EncInfoStd","parse_EncInfoExt","KeyData","encryptedHmacKey","encryptedHmacValue","encs","uri","parse_EncInfoAgl","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordByte","PasswordDecoded","crypto_CreateXorArray_Method1","PadArray","InitialCode","XorMatrix","XorRor","byte1","byte2","Byte","Ror","password","Temp","PasswordLastChar","PadIndex","XorKey","CurrentElement","Char","CreateXorKey_Method1","Index","ObfuscationArray","crypto_MakeXorDecryptor","XorArrayIndex","XorArray","Data","Value","crypto_DecryptData_Method1","parse_FilePassHeader","Info","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4Header","EncryptionHeader","EncryptionVerifier","parse_RC4CryptoHeader","rtf_to_sheet_str","rowtf","rtfre","last_index","rtf_to_workbook","rtf_to_sheet","rgb2Hex","rgb_tint","hex","hsl","G","H6","L2","rgb2HSL","hex2RGB","X","h6","hsl2RGB","DEF_MDW","MAX_MDW","MIN_MDW","MDW","px","char2width","chr","cycle_width","collw","find_mdw_colw","_MDW","coll","customWidth","PPI","pt","XLMLPatternTypeMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinHorzCross","cellXF_uint","cellXF_bool","parse_sty_xml","themes","NumberFmt","formatCode","parse_numFmts","Fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","themeElements","clrScheme","parse_fonts","Fills","patternType","bgColor","fgColor","parse_fills","Borders","border","diagonalUp","diagonalDown","parse_borders","CellXf","alignment","vertical","horizontal","textRotation","indent","wrapText","parse_cellXfs","write_sty_xml","NF","count","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","grbit","write_FontFlags","sss","charset","rev_XLSBFillPTNames","XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_BrtBorder","write_STYLES_bin","xfId","builtinId","write_BrtStyle","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","XLSXThemeClrScheme","parse_themeElements","lastClr","parse_clrScheme","parse_theme_xml","write_theme","Themes","themeXLSX","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","parse_ColorTheme","parse_ExtProp","extType","parse_XFExtGradient","update_xfext","xfext","xfe","write_xlmeta_bin","write_BrtMdtinfo","write_BrtBeginEsfmd","cm","write_BrtBeginEsmdb","mdb","write_BrtMdb","write_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","_shapeid","_comments","joinstyle","gradientshapeok","o:connecttype","coordsize","o:spt","fillopts","color2","angle","fillxml","fillcolor","strokecolor","on","obscured","write_vml_comment","sheet_insert_comments","threaded","people","comment","author","write_comments_xml","iauthor","ID","lastauthor","ts","tcnt","write_tcmnt_xml","carr","rootid","tcopts","tcid","parentId","personId","write_people_xml","person","displayName","userId","providerId","parse_BrtCommentAuthor","write_BrtCommentAuthor","write_comments_bin","_ia","write_BrtBeginComment","CT_VBA","VBAFMTS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","shift_formula_xlsx","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_PtgAttrBaxcel","bitSemi","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","parse_PtgExtraArray","parse_PtgElfLoc","fQuoted","parse_RgceElfLoc","parse_PtgElfNoop","parse_PtgElfLel","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","110","91","92","93","Ptg18","coltype","Ptg19","bitIf","bitGoto","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","make_3d_range","get_ixti_raw","supbooks","XTI","SID","get_ixti","ixtiraw","stringify_formula","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","ixtidata","lp","rp","sharedf","parsedf","fnd","arrayf","_left","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","write_Formula","o1","write_FormulaValue","o3","bf","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","write_XLSBFormulaNum","oint","num","write_XLSBNameParsedFormula","write_XLSBFormulaBool","write_XLSBFormulaErr","write_XLSBFormulaRef","_str","write_XLSBFormulaRange","lastbang","write_XLSBFormulaArea3D","write_XLSBFormulaRef3D","write_XLSBFormulaRangeWS","write_XLSBFormulaRefErr3D","postamble","write_XLSBFormulaStr","85","94","95","112","113","114","115","116","117","118","119","127","131","132","133","137","138","139","140","143","144","145","146","148","149","159","164","166","167","168","169","170","171","172","173","189","190","191","192","193","194","196","197","198","199","209","210","211","212","214","215","217","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","269","272","273","274","276","277","278","279","280","281","282","283","284","285","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","355","356","370","373","374","375","376","377","378","379","380","381","382","383","385","386","388","391","392","394","395","397","398","399","400","412","413","414","415","416","417","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","518","519","520","521","522","523","545","546","547","548","549","620","621","653","667","673","753","755","808","141","157","158","160","165","179","180","181","182","183","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","264","275","286","287","294","299","300","301","303","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","353","357","359","360","361","362","363","364","365","366","367","368","369","371","372","387","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","ods_to_csf_formula","csf_to_ods_formula","ods_to_csf_3D","csf_to_ods_3D","_ssfopts","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","outlineLevel","default_margins","margins","mode","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","safe_format","fillid","raw_rgb","check_ws","mergecregex","hlinkregex","dimregex","colregex","afregex","marginregex","sheetprregex","parse_ws_xml","data1","data2","mtch","sheetPr","parse_ws_xml_sheetpr","parse_ws_xml_sheetpr2","nodim","parse_ws_xml_dim","svs","Views","sviewregex","zoomScale","zoom","rightToLeft","RTL","parse_ws_xml_sheetviews","columns","seencol","coli","colm","colM","parse_ws_xml_cols","parse_ws_xml_data","afilter","parse_ws_xml_autofilter","merges","_merge","hlink","location","Rel","tooltip","rng","parse_ws_xml_hlinks","margin","parse_ws_xml_margins","tmpref","codeName","CodeName","sheetprot_deffalse","sheetprot_deftrue","write_ws_xml_cell","oldt","oldv","_vv","bookSST","Strings","revStrings","display","cellregex","rowregex","refregex","sstr","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","rstarti","outa","ht","rslice","cellFormula","___f","_tag","xlmeta","Cell","_r","write_ws_xml","xmlns:r","rdata","_drawing","needed","vbaraw","cname","outlineprops","summaryBelow","summaryRight","above","write_ws_xml_sheetpr","sview","workbookViewId","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","params","height","_cell","customHeight","write_ws_xml_data","write_ws_xml_protection","write_ws_xml_autofilter","relc","write_ws_xml_margins","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","ncolspan","lcs","caddr","first","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","write_BrtCellError","ncell","write_BrtShortError","parse_BrtShortReal","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","last_seen","write_BrtShortIsst","write_BrtCellIsst","write_BrtShortSt","write_BrtCellSt","write_BrtShortRk","write_BrtCellRk","write_BrtShortReal","write_BrtCellReal","write_BrtShortBool","write_BrtCellBool","write_BrtShortBlank","write_BrtCellBlank","write_MERGECELLS","write_BrtBeginMergeCells","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_BrtCellIgnoreEC","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_BrtSheetProtection","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_BrtMargins","write_LEGACYDRAWING","parse_chart","csheet","!type","nc","cache","nf","parse_Cache","WBPropsDef","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","defaults","push_defaults","parse_wb_defaults","CalcPr","WBView","badchars","check_ws_name","check_wb","N","codes","cn","check_wb_names","dn","wbnsregex","write_BrtBundleSh","Hidden","iTabID","strRelID","parse_BrtFRTArchID$","ArchID","write_BOOKVIEWS","vistab","write_BrtBookView","write_BRTNAMES","dname","Comment","write_BrtName","write_EXTERNALS_xlsb","write_SELF_EXTERNS_xlsb","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","write_BUNDLESHS","parse_wb","Ptg","parse_wb_bin","dnstart","localSheetId","parse_wb_xml","parse_ws","ai","af","vm","RR","aii","_d","relId","rfx","parse_ws_bin","parse_cs","!drawel","!rel","parse_cs_bin","parse_cs_xml","parse_sty","parse_sty_bin","parse_sst","parse_sst_bin","uniqueCount","parse_sst_xml","parse_cmnt","authors","parse_comments_bin","commentList","authtag","cmnttag","authorId","guid","textMatch","parse_comments_xml","parse_cc","parse_cc_bin","parse_cc_xml","parse_xlink","parse_xlink_bin","parse_xlmeta","Types","metatype","parse_xlmeta_bin","lastmeta","offsets","parse_xlmeta_xml","XLMLFormatMap","attregexg2","attregex2","xlml_parsexmltag","words","xlml_parsexmltagobj","xlml_set_custprop","Custprops","oval","safe_format_xlml","xlml_format","process_style_xlml","stag","Interior","I","Pattern","parse_xlml_data","csty","sid","StyleID","interiors","ssid","Parent","Formula","ArrayRange","xlml_prefix_dname","xlml_clean_comment","parse_xlml_xml","Rn","opening","ishtml","_o","html_to_sheet","book_new","html_to_workbook","General Number","General Date","Long Date","Medium Date","Short Date","Long Time","Medium Time","Short Time","Currency","Fixed","Standard","Percent","Scientific","Yes/No","True/False","On/Off","sheetnames","cursheet","sheetname","dtag","didx","fidx","pidx","cstys","wsprops","raw_Rn3","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","AutoFitHeight","Height","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","parse_fods","Margin","pagemargins","Top","Left","Right","Bottom","bookSheets","bookProps","parse_xlml","fix_read_opts","write_props_xlml","xlml_write_docprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","mi","escapexlml","_v","xlml_unfixstr","write_ws_xlml_comment","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","write_wb_xlml","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","parse_compobj","AnsiUserType","AnsiClipboardFormat","parse_ClipboardFormatOrAnsiString","Reserved1","UnicodeClipboardFormat","parse_ClipboardFormatOrUnicodeString","Reserved2","CONTINUE_RT","slurp","RecordType","insitu","nextrt","XLSRecordEnum","ll","safe_format_xf","make_cell","parse_workbook","rngC","rngR","temp_val","country","Directory","last_formula","cur_sheet","Preamble","last_cell","XFs","palette","biff4w","get_rgb","addcell","file_depth","xfd","icvFore","icvBack","process_cell_style","afi","rrtabid","lastuser","winlocked","wtf","last_lbl","last_RT","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","Date1904","WriteProtect","cpval","CalcRefMode","FullCalc","fDialog","fBelow","fRight","ExternCount","tmpri","1033","1024","1280","1536","biffguess","fakebs8","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","Encryption","Metadata","Country","PSCLSID","SI","DSI","UDI","CompObj","WorkbookP","bookVBA","newcfb","newpath","make_vba_xls","DocSummary","Summary","HeadingPairs","TitlesOfParts","parse_xls_props","bookFiles","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","DocSummaryRE","SummaryRE","CEntries2","write_xls_props","vba","fill_vba_xls","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","parse_BrtColor","ixfeParent","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","fAlwaysCalc","486","487","488","490","492","496","497","498","499","500","501","502","503","504","505","506","507","508","515","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","649","650","651","652","654","655","656","657","663","664","668","669","671","672","674","675","676","677","678","679","680","681","1025","1026","1027","1028","1029","1030","1031","1032","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2050","2051","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","4096","4097","5002","5003","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090","5092","5093","5094","5095","5096","5097","5099","idObj","parse_NoteSh","verificationBytes","parse_XORObfuscation","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_BIFF5Obj","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","parse_CellStyleXF","cmcs","ucnt","extsst","dsst","ctab","virtPath","rgst","texts","accel","parse_ControlInfo","cchText","sVer","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_Hyperlink","xnum","1212","cUse","parse_SharedParsedFormula","wzTooltip","2059","2061","2062","2063","2064","2066","2146","2147","2148","2149","2150","2151","2152","2154","2155","2156","2161","2162","2164","2165","2166","2167","2168","2169","2170","2171","2172","cxfs","crc","2173","cexts","2174","2175","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2194","2195","2196","cchComment","2197","2198","themeXML","2199","2200","2201","2202","2203","2204","2205","2206","2207","2211","parse_frtHeader","2212","2213","2214","2215","4098","4099","4102","4103","4105","4106","4107","4108","4109","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4132","4133","4134","4135","4146","4147","4148","4149","4154","4156","4157","4158","4159","4160","4161","4163","4164","area","4165","4166","4168","4170","4171","4174","4175","4176","4177","4187","4188","4189","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","bestart","env","lcb","2157","2163","2177","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2262","29282","write_BIFF2BERR","write_comments_biff2","write_ws_biff2_cell","_BIFF2FmtTable","write_BIFF2INT","write_BIFF2NUM","write_BIFF2LABEL","write_biff2_buf","_Fonts","write_ws_biff2","write_BIFF2Format","write_BIFF4Format","write_BIFF2XF","b8oid","b8ocnts","write_FONTS_biff8","write_Font","write_ws_cols_biff8","write_ColInfo","write_ws_biff8_cell","write_Number","write_LabelSst","b8","write_Label","write_ws_biff8","_WB","_sheet","MAX_ROWS","guts","write_Guts","write_Dimensions","_oasc","notes","baseid","ci","oasc","oact","txo","cont","conf","notesh","write_comments_biff8","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","write_Window1","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","write_Country","acc","write_MsoDrawingGroup","write_biff_continue","write_SST","blen","fix_write_opts","write_biff8_buf","mtch2","hd","midx","colspan","rowspan","_t","make_html_row","editable","HTML_BEGIN","HTML_END","make_html_preamble","sheet_to_html","sheet_add_dom","tagName","or_R","or_C","is_dom_element_hidden","elts","hasAttribute","getAttribute","innerHTML","Aelts","getElementsByTagName","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","parse_text_p","fixed","parse_ods_styles","_nfm","number_format_map","NFtag","tNF","etpos","tidx","parse_content_xml","nfidx","sheetag","rowtag","ctag","textp","textpidx","oldtextp","oldtextpidx","textR","oldtextR","row_ol","mrange","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","rptR","rpt","annotag","xlmlidx","styletag","nrange","ptp","parse_ods","FEtag","parse_manifest","Styles","write_styles_ods","master_styles","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_number_format_ods","nopts","style:name","number:min-integer-digits","number:min-numerator-digits","number:max-denominator-value","number:denominator-value","number:decimal-places","number:min-decimal-places","has_time","np","write_names_ods","scoped","namei","odsref","table:name","table:cell-range-address","table:base-cell-address","write_content_ods","write_text_p","span","null_cell_xml","write_ws","nfs","ods","ROWS","_Fref","text_p","_tgt","xlink:href","acreator","apayload","aprops","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","cidx","colobj","nfi","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","u8_to_dataview","array","DataView","byteOffset","byteLength","u8str","u8","stru8","u8concat","u8a","popcnt","parse_varint49","ptr","varint","write_varint49","parse_packed_varints","write_packed_varints","nums","varint_to_i32","i32","parse_shallow","write_shallow","proto","item","mappa","parse_iwa_file","_a","messages","merge","write_iwa_file","ias","ia","midata","aipayload","mid","parse_snappy_chunk","chunks","clen","u8i","decompress_iwa_file","compress_iwa_file","frame","numbers_lut_new","rsst","ofmt","nfmt","fmla","ferr","numbers_format_cell","_b","_c","ver","dur","dstyle","dmin","dmax","autodur","dstr","zstr","parse_new_storage","lut","dv","getUint32","doff","zidx","d128","ieee","exp","mantissa","readDecimal128LE","getFloat64","rts","cmntidx","iwa","replies","reply","iwa_to_s5s_comment","write_new_storage","setFloat64","writeDecimal128LE","irsst","findIndex","setUint32","s5s","s5s_to_iwa_comment","write_old_storage","parse_cell_storage","parse_old_storage","parse_TSP_Reference","write_TSP_Reference","numbers_add_oref","orefs","numbers_del_oref","parse_TST_TableDataList","pb","le","rtp","rtpref","mtype","tswpsa","richtext","sfields","smartfields","_a2","_b2","objtype","parse_TSD_CommentStorageArchive","_e","_g","_h","_i","csp","as","asp","pi","parse_TST_Tile","_k","_m","used_storage_u8","used_storage","wide_offsets","used_storage_offsets","getUint16","parse_TST_TileRowInfo","nrows","reduce","parse_TST_TableInfoArchive","tableref","dws","store","tile","kv","tl","ref2","mtype2","_tile","parse_TST_TableModelArchive","parse_TN_DocumentArchive","root2","parse_TN_SheetArchive","parse_numbers_iwa","indices","packets","packet","docroot","iwam","write_TST_TileRowInfo","wide","tri","new_7","new_4","last_offset","cell_storage","_dv","_last_offset","_cell_storage","celload","_celload","setUint16","write_iwam","get_unique_msgid","dep","dependents","write_TSP_Color_RGB","Float32Array","get_author_color","random","write_numbers_iwa","numbers","deps","mess","build_numbers_deps","numbers_iwa_find","sheetrefs","sheetref","newsheetref","remap","numbers_iwa_doit","arch","doc","tiaref","sheetroot","sa","drawables","tia","mlist","numbers_meta_add_dep","tmaref","tiaroot","da","dap","oldtmaref","tma","tmaroot","uuid","new_uuid","srrta","hsoa","hsa","hseadata","hsea","oldref","newref","newloc","numbers_add_meta","row_headers","tspref","tiles","tst","oldtileref","newtileref","oldtile","numbers_add_ws","wsname","sheetidx","rootref","tmafile","trunc","R_","LUT","row_header_ref","rowhead","_x","base_bucket","R2","_bucket","col_header_ref","colhead","rbtree","tilestore","tileref","save_token","mlst","parentidx","mm","parent","numbers_meta_del_dep","ntiles","newtileid","tiledata","USE_WIDE_ROWS","tilerow","newtile","tilecontent","mergeid","sstref","sstroot","sstdata","rsstref","rsstroot","rsstdata","style_indices","tswpsaid","tswpsarefs","newhlinkid","numbers_add_msg","smartfield","rtpaid","cmntref","cmntroot","cmntdata","aaaid2","csaid2","aaaid","csaid","write_numbers_tma","write_numbers_ws","newid","dep2","fix_opts_func","safe_parse_wbrels","wbrels","get_sheet_type","parse_sheet_legacy_drawing","draw","aidx","ObjectType","ws_get_cell_stub","parse_vml","safe_parse_sheet","relsPath","sheetRels","stype","dfile","drelsp","chartp","parse_drawing","crelsp","parse_ms","parse_ds","tcomments","parse_tcmnt_xml","strip_front_slash","_zip","getzipbin","index_zip","Bun","binname","dir","threadedcomments","links","coreprops","extprops","custprops","calcchains","drawings","TODO","ctext","calcchain","parse_ct","link","propdata","parse_ext_props","toks","warn","parse_cust_props","bookDeps","wbsheets","wbext","wbrelsi","wbrelsfile","displayname","parse_people_xml","nmode","wsloop","snjseen","snj","Deps","bin","parse_xlsxcfb","parse_DataSpaceVersionInfo","dsm","parse_DataSpaceMap","seds","parse_DataSpaceDefinition","einfo","decrypt_agile","decrypt_std76","write_zip_xlsx","foo","vbafmt","_sn","wsrels","need_vml","needtc","rId1","sitag","write_sst_xml","write_names","workbookPr","sheetId","write_wb_xml","write_xlmeta_xml","read_plaintext","main","read_utf16","utf16lereadu","read_prn","infile","read_binary","bstrify","ab","vu","read_cfb","OLD_WTF","read_wb_ID","read_zip","read_plaintext_raw","write_cfb_ctr","write_zip_xlsb","write_zip_denouement","oopts","ftype","nodebuffer","string","generate","encrypt_agile","write_string_type","bom","write_stxt_type","Base64_encode_pass","write_binary_type","write_zip_typeXLSX","sheet_to_txt","sheet_to_csv","sheet_to_rtf","write_cfb_type","write_zip_type","resolve_book_type","xls","slk","socialcalc","Sh33tJS","_cb","Function","make_json_row","defval","isempty","enumerable","__rowNum__","rawNumbers","outi","counter","header_cnt","skipHidden","blankrows","qreg","make_csv_row","txt","datarow","forceQuotes","strip","sheet_add_json","js","skipHeader","ROW","JS","RC","roll","cell_set_hyperlink","_Readable","split_cell","sheet_new","json_to_sheet","table_to_sheet","table_to_book","sheet_to_formulae","cmds","sheet_to_row_object_array","sheet_get_cell","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","dynamic","rngstr","wsr","SHEET_VISIBLE","SHEET_HIDDEN","SHEET_VERY_HIDDEN","to_json","stream","objectMode","_read","to_html","to_csv","BOM","set_readable","readFile","writeXLSX","writeFileXLSX","module","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","TypeError","fromArrayLike","fromArrayBuffer","isEncoding","actual","fromString","checked","isnan","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","typedArraySupport","poolSize","_augment","Symbol","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","output"],"mappings":"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SACA,SACA,MACA,IACA,SACA,SACA,MAEA,QACA,MACA,IACA,QACA,QACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,MACA,SAEA,IACA,SACA,SACA,MACA,QACA,QACA,MACA,IACA,MACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,SACA,QACA,QAGA,EACA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,KAKAxG,IACAzhC,EAAA,SACA6I,EAAA,UACArB,GAAA,UACAuB,GAAA,QACAM,GAAA,SACA+M,GAAA,QACA5K,GAAA,OACAC,GAAA,gBACAvK,IAAA,SAGAgnC,IACAC,SAAA,EACAC,UAAA,EACAC,UAAA,GACAC,QAAA,GACAC,SAAA,GACAC,QAAA,GACAC,OAAA,GACAC,gBAAA,GACAC,QAAA,KAGAC,IACA,yBACA,kBACA,mBACA,gBACA,iBACA,iBACA,mBACA,qBACA,iBACA,kBACA,sBACA,wBACA,oBACA,yBAOAC,IAEAC,6EAAA,YACAC,uDAAA,YACAC,0DAAA,YACAC,uDAAA,YACAC,gFAAA,YAGAC,4EAAA,SACAC,qCAAA,SACAC,sCAAA,OAGAC,6EAAA,SACAC,sCAAA,SAGAC,0CAAA,SACAC,sCAAA,SACAC,0CAAA,OACAC,sCAAA,OAGAC,8EAAA,UACAC,uCAAA,UAGAC,gFAAA,OACAC,yCAAA,OAGAC,yEAAA,SACAC,kCAAA,SAGAC,6DAAA,YACAC,sEAAA,YACAC,wEAAA,WAGAC,wEAAA,OACAC,6EAAA,OAGAC,2EAAA,WACAC,oCAAA,WACAC,gDAAA,mBACAC,sCAAA,SAGAC,gFAAA,WACAC,yCAAA,WAGAC,sCAAA,OACAC,6EAAA,OAGAC,oEAAA,OAGAC,gDAAA,OAGAC,2CAAA,OAGAC,wCAAA,OAGAC,qCAAA,aACAC,4EAAA,aAGAC,8EAAA,OAGAC,oCAAA,OACAC,wCAAA,OAGAC,4CAAA,OAGA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AA,QACAC,IAAA,QACAC,IAAA,YACAC,IAAA,UACAp1B,IAAA,aACAC,IAAA,aACA1iD,IAAA,WACA00D,IAAA,QACAC,IAAA,UACAC,IAAA,WACAC,IAAA,QACAijB,IAAA,SACAC,IAAA,OACAC,IAAA,OACAC,IAAA,UACApyC,IAAA,YACAqyC,IAAA,MACAC,IAAA,OACAryC,IAAA,OACAuyC,IAAA,UACAC,IAAA,UACAkM,IAAA,QACAvkF,IAAA,MACAs4E,IAAA,OACAC,IAAA,UACAC,IAAA,SACAC,IAAA,WACAC,IAAA,SACAC,IAAA,aACAC,IAAA,OACA4L,IAAA,OACAC,IAAA,OACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,gBACAC,IAAA,WACA9kF,IAAA,aACA+kF,IAAA,cACAnM,IAAA,gBACAoM,IAAA,kBACAC,IAAA,gBACApM,IAAA,WACAqM,IAAA,OACAC,IAAA,QACAC,IAAA,aACAC,IAAA,KACAC,IAAA,QACAtM,IAAA,SACAC,IAAA,YACAC,IAAA,cACAC,IAAA,iBACAl5E,IAAA,OACA20D,IAAA,gBACA2wB,IAAA,WACAC,IAAA,cACA3wB,IAAA,WACAC,IAAA,iBACAC,IAAA,aACAC,IAAA,YACAC,IAAA,eACAwwB,IAAA,eACAvwB,IAAA,cACAC,IAAA,aACAC,IAAA,cACAC,IAAA,eACA+jB,IAAA,SACA9jB,IAAA,WACAC,IAAA,UACA8jB,IAAA,UACAC,IAAA,YACAC,IAAA,UACAmM,IAAA,SACAlM,IAAA,SACAC,IAAA,aACAC,IAAA,YACAC,IAAA,OACAC,IAAA,YACAC,IAAA,QACAC,IAAA,OACAC,IAAA,SACAC,IAAA,YACAC,IAAA,QACA0L,IAAA,YACAC,IAAA,WACAxtB,IAAA,UACA8hB,IAAA,cACAC,IAAA,cACAC,IAAA,SACAC,IAAA,eACAC,IAAA,WACAuL,IAAA,YACAtL,IAAA,UACAC,IAAA,WACAC,IAAA,cACAC,IAAA,MACAoL,IAAA,SACAC,IAAA,UACAC,IAAA,QACArL,IAAA,UACAsL,IAAA,UACA5tB,IAAA,WACAuiB,IAAA,WACAC,IAAA,UACAC,IAAA,SACAC,IAAA,QACAC,IAAA,WACAC,IAAA,QACAC,IAAA,YACAC,IAAA,UACAC,IAAA,MACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACA2K,IAAA,OACA1K,IAAA,QACAC,IAAA,UACAnjB,IAAA,UACAojB,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,QACAC,IAAA,QACAqK,IAAA,QACAC,IAAA,WACArK,IAAA,aACAsK,IAAA,cACArK,IAAA,OACAsK,IAAA,WACAC,IAAA,OACAC,IAAA,gBACAC,IAAA,YACAxK,IAAA,cACAyK,IAAA,QACAxK,IAAA,iBACAC,IAAA,kBACAwK,IAAA,kBACAC,IAAA,iBACAxK,IAAA,UACAC,IAAA,UACAC,IAAA,WACAuK,IAAA,QACAC,IAAA,UACAC,IAAA,aACAC,IAAA,eACAC,IAAA,oBACA1K,IAAA,QACAz2C,IAAA,UACA02C,IAAA,aACA0K,IAAA,eACAnhD,IAAA,QACA02C,IAAA,cACAC,IAAA,cACAyK,IAAA,WACAnhD,IAAA,eACAohD,IAAA,YACAC,IAAA,WACAC,IAAA,WACAC,IAAA,OACAC,IAAA,OACAC,IAAA,UACAC,IAAA,QACAC,IAAA,SACAC,IAAA,OACAC,IAAA,WACAC,IAAA,gBACAnL,IAAA,YACAoL,IAAA,kBACAC,IAAA,eACApL,IAAA,gBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,cACAC,IAAA,WACAC,IAAA,MACAC,IAAA,YACAC,IAAA,aACAC,IAAA,qBACAC,IAAA,mBACA9nB,IAAA,UACA+nB,IAAA,UACAC,IAAA,UACAyK,IAAA,UACAxK,IAAA,UACAhoB,IAAA,UACAC,IAAA,UACAgoB,IAAA,UACAC,IAAA,UACAhoB,IAAA,UACAioB,IAAA,UACAC,IAAA,UACAjoB,IAAA,QACAkoB,IAAA,QACAC,IAAA,UACAC,IAAA,QACAC,IAAA,SACAiK,IAAA,OACAC,IAAA,SACAC,IAAA,UACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,aACAC,IAAA,cAC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AA,OACA1hC,EAAA0hC,MAAA,GAAAK,KAAA,EACA,MAEA,kBACA,0BAEA,sBACA,oBAGA,4BAGA,gBACA,gBACA,uBACA,0BAEA,eACA,YACA,kBACA,YACA,YACA,WACA,aACA,aACA,gBACA,eACA,qBACA,sBACA,uBACA,uBACA,2BACA,yBACA,qBACA,iBACA,oBACA,wBACA,gBACA,qBACA,qBACA,qBACA,oBACA,eACA,eACA,gBACA,qBACA,WACA,kBACA,gBACA,gBACA,kBACA,sBACA,sBACA,sBACA,sBACA,4BACA,uBACA,oBACA,0BACA,+BACA+R,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAA1N,OAAA,EACA,MACA,oBACA,2BACA,+BACA,kCACA0N,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAAlU,MAAA,EACA,MACA,oBACA,wBACA,uBACA,qBACA,0BACA,oBACA,0BACA,iBACA,oBACA,gBACA,4BACA,QAAA1uE,IAAA,EACK,MAGL,yCAAAohF,EAAA,IACA,2BACA,gCACA,uBACA,eACA,iBACA,kBACA,iBACA,6BACA,uBACA,eACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,uBACA,WACA,eACA,eACA,iBACA,6BACA,eACA,gBACA,oBACA,iBACA,0BACA,aACA,eACA,gBACA,oBACA,eACA,wBACA,qBACA,kBACA,qBACA,kBACA,kBACA,sBACA,yBACA,wBACA,2BACA,4BACA,wBACA,QAAAphF,IAAA,EACK,MAGL,wBAAAohF,EAAA,IACA,gBACA,eACA,gBACA,eACA,eACA,aACA,mBACA,QAAAphF,IAAA,EACK,MAGL,wBAAAohF,EAAA,IACA,uBACA,0BACA,oBACA,yBACA,QAAAphF,IAAA,EACK,MAGL,wBAAAohF,EAAA,IACA,SACA,qBACA,wBACA,kBACA,gBACA,yBACA,qBACA,gBACA,iBACA,iBACA,kBACA,kBACA,eACA,aACA,iBACA,qBACA,yBACA,yBACA,aACA,aACA,cACA,wBACA,2BACA,qBACA,gBACA,iBACA,UACA,YACA,qBACA,sBAC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AhxC,GAAAvzD,GAAAgnE,EAAA,8BACA,oBAAuCz9C,IAAAg7E,EAAA,IAClC,MAAA7+H,IACL,MAEA,WAEA,mBACA,qBACA,WACA,kBAGA,mBACA,eAEA,gBACA,0BACA,yBACA,mBACA,oBACA,sBAGA,aACA,iBACA,gBACA,uBACA,sBAEA,8BACA,8BACA,kCAGA,uBACA,sBACA,sBACA,mBACA,sBACA,mBACA,2BACA,iBACA,qBACA,wBACA,oBACA,kBACA,yBACA,qBACA,+BACA,kBACA,sBACA,cACA,gBACA,oBACA,iBAGA,qBACA,MAEA,sBACA,oBACA,iBACA,gBACA,yBACA,mBACA,uBACA,qBAIA,kBAIA,kBACA,iBACA,WAGA,wBACA,gBACA,gBACA,8BAGA,uBACA,wBACA,qBACA,uBACA,uBACA,2BACA,0BACA,yBACA,wBACA,8BACA,2BACA,6BACA,iCACA,wBACA,uBACA,8BAIA,WACA,MAGA,2BACA,0BACA,eACA,iBAGA,iBACA,qBAEA,QACA,SAAAshG,EAAA,IAEA,KADAs9B,EAAAtkG,GAAAgnE,EAAA,QACA/wE,KAAA,MACAquG,EAAAzpF,OAAA/Z,GAAAwjG,EAAAruG,aAA0CquG,EAAAruG,KAC1C,KAAAquG,EAAAzpF,OAAAzuC,OAAA,IAAAk4H,EAAAzpF,OAAA3wC,QAAA,SACAq6H,EAAAhxC,GAAA+wC,EAAAzpF,OAAA1vC,MAAA,IACAm5H,EAAAzpF,OAAA,IAAA0pF,EAAA,OAAAA,EAAA,IACMD,EAAAzpF,OAAAzhC,MAAA,iBAAAkrH,EAAAzpF,OAAAypF,EAAAzpF,OAAA1vC,MAAA,IAEN,MAGA,uBACA,6BACA,yCACA,eAAA67F,EAAA,IACA,UACA,eACA,aACA,WACA,gBACA,YACA,aACA,aACA,YACA,WACA,SACA,SACA,MACA,WAAA3xF,EAAAstB,IAAA,UAAA10B,MAAA+4F,IAGA,IAAAjxF,IACA20B,SACAD,aACAiqB,SAAA7b,GAGA,OADAxjC,EAAAq1F,mBAAA30F,GAAA20B,OACA30B,GAGA,SAAAovH,GAAA3mG,EAAAnpB,GACAA,QACAkpB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","file":"deps/xlsx.js","sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js\n// module id = 1x5Z\n// module chunks = 71c9 bf3e","/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.20.2';\nvar current_codepage = 1200, current_ansi = 1252;\n/*:: declare var cptable:any; */\n/*global cptable:true, window */\nvar $cptable;\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n\t0:    1252, /* ANSI */\n\t1:   65001, /* DEFAULT */\n\t2:   65001, /* SYMBOL */\n\t77:  10000, /* MAC */\n\t128:   932, /* SHIFTJIS */\n\t129:   949, /* HANGUL */\n\t130:  1361, /* JOHAB */\n\t134:   936, /* GB2312 */\n\t136:   950, /* CHINESEBIG5 */\n\t161:  1253, /* GREEK */\n\t162:  1254, /* TURKISH */\n\t163:  1258, /* VIETNAMESE */\n\t177:  1255, /* HEBREW */\n\t178:  1256, /* ARABIC */\n\t186:  1257, /* BALTIC */\n\t204:  1251, /* RUSSIAN */\n\t222:   874, /* THAI */\n\t238:  1250, /* EASTEUROPE */\n\t255:  1252, /* OEM */\n\t69:   6969  /* MISC */\n}/*:any*/);\n\nvar set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16lereadu(data/*:Uint8Array*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data[2*i] + (data[2*i+1]<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data/*:string*/)/*:string*/ {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\nvar _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\n\nfunction set_cptable(cptable) {\n\t$cptable = cptable;\n\tset_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\n\tdebom = function(data/*:string*/) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return $cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x/*:number*/)/*:string*/ {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn $cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n\t_getansi = function _ga2(x/*:number*/)/*:string*/ {\n\t\treturn $cptable.utils.decode(current_ansi, [x])[0];\n\t};\n\tcpdoit();\n}\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_pass(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    if (c1 > 255)\n      c1 = 95;\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    if (c2 > 255)\n      c2 = 95;\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    if (c3 > 255)\n      c3 = 95;\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_arr(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input[i++];\n    e1 = c1 >> 2;\n    c2 = input[i++];\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input[i++];\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  if (input.slice(0, 5) == \"data:\") {\n    var i = input.slice(0, 1024).indexOf(\";base64,\");\n    if (i > -1)\n      input = input.slice(i + 8);\n  }\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length; ) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/(function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();\n\nvar Buffer_from = /*#__PURE__*/(function() {\n\tif(typeof Buffer !== 'undefined') {\n\t\tvar nbfs = !Buffer.from;\n\t\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\t\treturn nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t}\n\treturn function() {};\n})();\nvar buf_utf16le = /*#__PURE__*/(function() {\n\tif(typeof Buffer === 'undefined') return false;\n\tvar x = Buffer_from([65,0]);\n\tif(!x) return false;\n\tvar o = x.toString(\"utf16le\");\n\treturn o.length == 1;\n})();\n\n\nfunction new_raw_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s/*:string*/)/*:any*/ {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s/*:string*/)/*:any*/ {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data/*:any*/)/*:string*/ {\n\tif(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join(\"\");\n\tvar o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data/*:Array<number>*/)/*:Uint8Array*/ {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n\t/*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n\tvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nvar bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {\n\tif(typeof Uint8Array !== \"undefined\") {\n\t\tvar i = 0, maxlen = 0;\n\t\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\t\tvar o = new Uint8Array(maxlen);\n\t\tvar len = 0;\n\t\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n\t\t\tlen = bufs[i].length;\n\t\t\tif(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);\n\t\t\telse if(typeof bufs[i] == \"string\") o.set(new Uint8Array(s2a(bufs[i])), maxlen);\n\t\t\telse o.set(new Uint8Array(bufs[i]), maxlen);\n\t\t}\n\t\treturn o;\n\t}\n\treturn [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));\n};\n\nfunction utf8decode(content/*:string*/) {\n\tvar out = [], widx = 0, L = content.length + 250;\n\tvar o = new_raw_buf(content.length + 255);\n\tfor(var ridx = 0; ridx < content.length; ++ridx) {\n\t\tvar c = content.charCodeAt(ridx);\n\t\tif(c < 0x80) o[widx++] = c;\n\t\telse if(c < 0x800) {\n\t\t\to[widx++] = (192|((c>>6)&31));\n\t\t\to[widx++] = (128|(c&63));\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64;\n\t\t\tvar d = content.charCodeAt(++ridx)&1023;\n\t\t\to[widx++] = (240|((c>>8)&7));\n\t\t\to[widx++] = (128|((c>>2)&63));\n\t\t\to[widx++] = (128|((d>>6)&15)|((c&3)<<4));\n\t\t\to[widx++] = (128|(d&63));\n\t\t} else {\n\t\t\to[widx++] = (224|((c>>12)&15));\n\t\t\to[widx++] = (128|((c>>6)&63));\n\t\t\to[widx++] = (128|(c&63));\n\t\t}\n\t\tif(widx > L) {\n\t\t\tout.push(o.slice(0, widx));\n\t\t\twidx = 0;\n\t\t\to = new_raw_buf(65535);\n\t\t\tL = 65530;\n\t\t}\n\t}\n\tout.push(o.slice(0, widx));\n\treturn bconcat(out);\n}\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x/*:string*/)/*:string*/ { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = /*#__PURE__*/Math.pow(2,32);\nfunction pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days/*:Array<Array<string> >*/ = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months/*:Array<Array<string> >*/ = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction SSF_init_table(t/*:any*/) {\n\tif(!t) t = {};\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\treturn t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n\t0:  'General',\n\t1:  '0',\n\t2:  '0.00',\n\t3:  '#,##0',\n\t4:  '#,##0.00',\n\t9:  '0%',\n\t10: '0.00%',\n\t11: '0.00E+00',\n\t12: '# ?/?',\n\t13: '# ??/??',\n\t14: 'm/d/yy',\n\t15: 'd-mmm-yy',\n\t16: 'd-mmm',\n\t17: 'mmm-yy',\n\t18: 'h:mm AM/PM',\n\t19: 'h:mm:ss AM/PM',\n\t20: 'h:mm',\n\t21: 'h:mm:ss',\n\t22: 'm/d/yy h:mm',\n\t37: '#,##0 ;(#,##0)',\n\t38: '#,##0 ;[Red](#,##0)',\n\t39: '#,##0.00;(#,##0.00)',\n\t40: '#,##0.00;[Red](#,##0.00)',\n\t45: 'mm:ss',\n\t46: '[h]:mm:ss',\n\t47: 'mmss.0',\n\t48: '##0.0E+0',\n\t49: '@',\n\t56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n\t5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40\n\n\t23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0\n\n\t27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14\n\n\t50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14\n\t55: 14, 56: 14, 57: 14, 58: 14,\n\t59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4\n\n\t67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10\n\t69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14\n\t72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17\n\t76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22\n\t79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47\n\t82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction SSF_frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction SSF_normalize_xl_unsafe(v/*:number*/)/*:number*/ {\n\tvar s = v.toPrecision(16);\n\tif(s.indexOf(\"e\") > -1) {\n\t\tvar m = s.slice(0, s.indexOf(\"e\"));\n\t\tm = m.indexOf(\".\") > -1 ? m.slice(0, (m.slice(0,2) == \"0.\" ? 17 : 16)) : (m.slice(0,15) + fill(\"0\", m.length - 15));\n\t\treturn m + s.slice(s.indexOf(\"e\"));\n\t}\n\tvar n = s.indexOf(\".\") > -1 ? s.slice(0, (s.slice(0,2) == \"0.\" ? 17 : 16)) : (s.slice(0,15) + fill(\"0\", s.length - 15));\n\treturn Number(n);\n}\n\nfunction SSF_parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {\n\tif(v > 2958465 || v < 0) return null;\n\tv = SSF_normalize_xl_unsafe(v);\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = SSF_fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o/*:string*/)/*:string*/ {\n\treturn (o.indexOf(\".\") == -1) ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o/*:string*/)/*:string*/ {\n\tif(o.indexOf(\"E\") == -1) return o;\n\treturn o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/,\"$1E\").replace(/(E[+-])(\\d)$/,\"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v/*:number*/)/*:string*/ {\n\tvar w = (v<0?12:11);\n\tvar o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v/*:number*/)/*:string*/ {\n\tvar o = SSF_strip_decimal(v.toFixed(11));\n\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n}\n\nfunction SSF_general_num(v/*:number*/)/*:string*/ {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = SSF_small_exp(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = SSF_large_exp(v);\n\n\treturn SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v/*:any*/, opts/*:any*/) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return SSF_format(14, datenum(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\n\nfunction SSF_fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n\t\t\t/*::if(!ss0) ss0 = 0; */\n\t\t\tif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+(ss0 == 0 ? Math.round(val.S+val.u) : val.S); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s/*:string*/)/*:string*/ {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\n\nfunction write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\n\nfunction write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\)[^)]*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str/*:string*/)/*:string*/ {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val/*:number*/, d/*:number*/)/*:number*/ {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val/*:number*/, d/*:number*/)/*:number*/ {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val/*:number*/)/*:string*/ {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(/*::(*/r/*::||[\"\"])*/[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\to = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\t\treturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt/*:string*/)/*:Array<string>*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\n\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt/*:string*/)/*:boolean*/ {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(SSF_abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=SSF_parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(SSF_abstime)) {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) { ss0=Math.max(ss0,ssm[0].length-1); bt = 4;}\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'e': lst=out[i].t; break;\n\t\t\tcase 'M': lst=out[i].t; if(bt < 2) bt = 2; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tvar _dt;\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = SSF_parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tswitch(ss0) {\n\t\t\t\tcase 1: dt.u = Math.round(dt.u * 10)/10; break;\n\t\t\t\tcase 2: dt.u = Math.round(dt.u * 100)/100; break;\n\t\t\t\tcase 3: dt.u = Math.round(dt.u * 1000)/1000; break;\n\t\t\t}\n\t\t\tif(dt.u >=   1) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = SSF_parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n\t\t\t\t/*::if(!dt) throw \"unreachable\"; */\n\t\t\t\tout[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\n\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f/*:string*/, v/*:any*/) {\n\tvar fmt = SSF_split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction SSF_format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);\n\tif(v instanceof Date) v = datenum(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(SSF_isgeneral(f[1])) return SSF_general(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt/*:string*/, idx/*:?number*/)/*:number*/ {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tfor(var i = 0; i < 0x0188; ++i) {\n/*::if(typeof idx != 'number') return 0x188; */\n\t\t\tif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tif(idx < 0) idx = 0x187;\n\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\ttable_fmt[idx] = fmt;\n\treturn idx;\n}\nfunction SSF_load_table(tbl/*:SSFTable*/)/*:void*/ {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\n\nfunction make_ssf() {\n\ttable_fmt = SSF_init_table();\n}\n\nvar SSF = {\n\tformat: SSF_format,\n\tload: SSF_load,\n\t_table: table_fmt,\n\tload_table: SSF_load_table,\n\tparse_date_code: SSF_parse_date_code,\n\tis_date: fmt_is_date,\n\tget_table: function get_table() { return SSF._table = table_fmt; }\n};\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n}/*:any*/);\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {\n\tvar fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\tdateNFregex.lastIndex = 0;\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tdateNFregex.lastIndex = 0;\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\n/* table of bad formats written by third-party tools */\nvar bad_formats = {\n\t\"d.m\": \"d\\\\.m\" // Issue #2571 Google Sheets writes invalid format 'd.m', correct format is 'd\".\"m' or 'd\\\\.m'\n};\n\nfunction SSF__load(fmt, idx) {\n\treturn SSF_load(bad_formats[fmt] || fmt, idx);\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/(function() {\nvar CRC32 = {};\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table()/*:any*/ {\n\tvar c = 0, table/*:Array<number>*/ = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' && typeof table.subarray == \"function\" ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\nreturn CRC32;\n})();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/(function _CFB(){\nvar exports/*:CFBModule*/ = /*::(*/{}/*:: :any)*/;\nexports.version = '1.2.2';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l/*:string*/, r/*:string*/)/*:number*/ {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms/*:number*/ = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd/*:number*/ = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob/*:CFBlob*/)/*:any*/ {\n\tprep_blob(blob, 0);\n\tvar o = /*::(*/{}/*:: :any)*/;\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t} break;\n\t\t\t/* ZIP64 Extended Information Field */\n\t\t\tcase 0x0001: {\n\t\t\t\tvar sz1 = blob.read_shift(4), sz2 = blob.read_shift(4);\n\t\t\t\tp.usz = (sz2 * Math.pow(2,32) + sz1);\n\t\t\t\tsz1 = blob.read_shift(4); sz2 = blob.read_shift(4);\n\t\t\t\tp.csz = (sz2 * Math.pow(2,32) + sz1);\n\t\t\t\t// NOTE: volume fields are skipped\n\t\t\t} break;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs/*:: = require('fs'); */;\nfunction get_fs() { return fs || (fs = _fs); }\nfunction parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header/*:RawBytes*/ = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt/*:number*/ = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nif(dir_start < sector_list.length) sector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver/*:number*/ = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors/*:Array<RawBytes>*/ = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0)/*:any*/);\n\treturn (bconcat(o).slice(0, entry.size)/*:any*/);\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {\n\tvar q/*:number*/ = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tif(cnt >= 1) sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {\n\tvar buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {\n\tvar sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);\n\tvar chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]/*:Array<number>*/);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o/*:CFBEntry*/ = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename/*:string*/, options/*:CFBReadOpts*/) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n\t\tcase \"base64\": /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n\t\tcase \"binary\": /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n\t}\n\treturn parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n}\n\nfunction init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data/*:Array<[string, CFBEntry]>*/ = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\twhile(!s) {\n\t\t\twhile(dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t}/*:any*/)]);\n\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\n\t\t\tdad = dirname(data[i][0]);\n\t\t\ts = fullPaths[dad];\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w/*:number*/)/*:void*/ {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j/*:number*/ = 0, flen/*:number*/ = 0;\n\tvar file/*:CFBEntry*/ = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm/*:string*/ = (i === 0 && _opts.root) || file.name;\n\t\tif(_nm.length > 31) {\n\t\t\tconsole.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0,31));\n\t\t\t_nm = _nm.slice(0, 31);\n\t\t}\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {\n\tvar UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k/*:boolean*/ = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath/*:string*/ = path.toUpperCase();\n\tvar w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {\n\tget_fs();\n\tvar o = _write(cfb, options);\n\t/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n\tfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o/*:RawBytes*/)/*:string*/ {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz/*:number*/) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens/*:Array<number>*/ = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens/*:Array<number>*/ = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = /*#__PURE__*/(function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff/*:number*/) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes/*:Array<number>*/ = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz/*:number*/) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tvar blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\t/* ZIP64 lengths */\n\t\tif(EF && EF[0x0001]) {\n\t\t\tif((EF[0x0001]||{}).usz) usz = EF[0x0001].usz;\n\t\t\tif((EF[0x0001]||{}).csz) csz = EF[0x0001].csz;\n\t\t}\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif((ef[0x0001]||{}).usz) _usz = ef[0x0001].usz;\n\t\tif((ef[0x0001]||{}).csz) _csz = ef[0x0001].csz;\n\t\tif(EF) {\n\t\t\tif((EF[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t\t\tif((EF[0x0001]||{}).usz) _usz = ef[0x0001].usz;\n\t\t\tif((EF[0x0001]||{}).csz) _csz = ef[0x0001].csz;\n\t\t}\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\t//var _crc32 = CRC32.buf(data, 0);\n\t//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o/*:CFBlob*/ = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = typeof fi.content == \"string\" ? CRC32.bstr(fi.content, 0) : CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);\n\n\t\tvar outbuf = typeof fi.content == \"string\" ? s2a(fi.content) : fi.content/*::||[]*/;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n}/*:any*/);\n\nfunction get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr/*:string*/)/*:string*/ {\n\tvar data = Base64_encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text/*:string*/)/*:string*/ {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o/*:Array<string>*/ = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^([^:]*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64_decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts/*:?any*/)/*:CFBContainer*/ {\n\tvar o/*:CFBContainer*/ = ({}/*:any*/);\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath/*:string*/ = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2}/*:any*/);\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\n\t/*:: if(!file) throw new Error(\"unreachable\"); */\n\tfile.content = (content/*:any*/);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nvar _fs;\nfunction set_fs(fs) { _fs = fs; }\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname/*:string*/, payload/*:any*/, enc/*:?string*/) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tif(typeof Deno !== 'undefined') {\n\t\t/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n\t\tif(enc && typeof payload == \"string\") switch(enc) {\n\t\t\tcase \"utf8\": payload = new TextEncoder(enc).encode(payload); break;\n\t\t\tcase \"binary\": payload = s2ab(payload); break;\n\t\t\t/* TODO: binary equivalent */\n\t\t\tdefault: throw new Error(\"Unsupported encoding \" + enc);\n\t\t}\n\t\treturn Deno.writeFileSync(fname, payload);\n\t}\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\n\t/*:: declare var IE_SaveFile: any; */\n\tif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n\t\t/*:: declare var navigator: any; */\n\t\tif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n\t\t/*:: declare var saveAs: any; */\n\t\tif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\n\t\t\t/*:: declare var chrome: any; */\n\t\t\tif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true });\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */\n\t\t\t\ta.download = fname; a.href = url; document.body.appendChild(a); a.click();\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */ document.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t} else if(typeof URL !== 'undefined' && !URL.createObjectURL && typeof chrome === 'object') {\n\t\t\t/* manifest v3 extensions -- no URL.createObjectURL */\n\t\t\tvar b64 = \"data:application/octet-stream;base64,\" + Base64_encode_arr(new Uint8Array(blobify(data)));\n\t\t\treturn chrome.downloads.download({ url: b64, filename: fname, saveAs: true });\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || e.message.indexOf(\"onstruct\") == -1) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path/*:string*/) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\tif(typeof Deno !== 'undefined') return Deno.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || e.message.indexOf(\"onstruct\") == -1) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o/*:any*/)/*:Array<any>*/ {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj/*:any*/, key/*:string*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj/*:any*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj/*:any*/)/*:EvertNumType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj/*:any*/)/*:EvertArrType*/ {\n\tvar o/*:EvertArrType*/ = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar dnthresh  = /*#__PURE__*/Date.UTC(1899, 11, 30, 0, 0, 0); // -2209161600000\nvar dnthresh1 = /*#__PURE__*/Date.UTC(1899, 11, 31, 0, 0, 0); // -2209075200000\nvar dnthresh2 = /*#__PURE__*/Date.UTC(1904, 0, 1, 0, 0, 0); // -2209075200000\nfunction datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tvar res = (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n\tif(date1904) { res -= 1462; return res < -1402 ? res - 1 : res; }\n\treturn res < 60 ? res - 1 : res;\n}\nfunction numdate(v/*:number*/)/*:Date|number*/ {\n\tif(v >= 60 && v < 61) return v;\n\tvar out = new Date();\n\tout.setTime((v>60 ? v : (v+1)) * 24 * 60 * 60 * 1000 + dnthresh);\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\n/* Blame https://bugs.chromium.org/p/v8/issues/detail?id=7863 for the regexide */\nvar pdre1 = /^(\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // HH:MM[:SS[.UUU]]\nvar pdre2 = /^(\\d+)-(\\d+)-(\\d+)$/; // YYYY-mm-dd\nvar pdre3 = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // YYYY-mm-dd(T or space)HH:MM[:SS[.UUU]], sans \"Z\"\n/* parses a date string as a UTC date */\nfunction parseDate(str/*:string*/, date1904/*:boolean*/)/*:Date*/ {\n\tif(str instanceof Date) return str;\n\tvar m = str.match(pdre1);\n\tif(m) return new Date((date1904 ? dnthresh2 : dnthresh1) + ((parseInt(m[1], 10)*60 + parseInt(m[2], 10))*60 + (m[3] ? parseInt(m[3].slice(1), 10) : 0))*1000 + (m[4] ? parseInt((m[4]+\"000\").slice(1,4), 10) : 0));\n\tm = str.match(pdre2);\n\tif(m) return new Date(Date.UTC(+m[1], +m[2]-1, +m[3], 0, 0, 0, 0));\n\t/* TODO: 1900-02-29T00:00:00.000 should return a flag to treat as a date code (affects xlml) */\n\tm = str.match(pdre3);\n\tif(m) return new Date(Date.UTC(+m[1], +m[2]-1, +m[3], +m[4], +m[5], ((m[6] && parseInt(m[6].slice(1), 10))|| 0), ((m[7] && parseInt((m[7] + \"0000\").slice(1,4), 10))||0)));\n\tvar d = new Date(str);\n\treturn d;\n}\n\nfunction cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {\n\tif(has_buf && Buffer.isBuffer(arr)) {\n\t\tif(debomit && buf_utf16le) {\n\t\t\t// TODO: temporary patch\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n\t\t\tif(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n\t\t}\n\t\treturn arr.toString(\"binary\");\n\t}\n\n\tif(typeof TextDecoder !== \"undefined\") try {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n\t\t\tif(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n\t\t}\n\t\tvar rev = {\n\t\t\t\"\\u20ac\": \"\\x80\", \"\\u201a\": \"\\x82\", \"\\u0192\": \"\\x83\", \"\\u201e\": \"\\x84\",\n\t\t\t\"\\u2026\": \"\\x85\", \"\\u2020\": \"\\x86\", \"\\u2021\": \"\\x87\", \"\\u02c6\": \"\\x88\",\n\t\t\t\"\\u2030\": \"\\x89\", \"\\u0160\": \"\\x8a\", \"\\u2039\": \"\\x8b\", \"\\u0152\": \"\\x8c\",\n\t\t\t\"\\u017d\": \"\\x8e\", \"\\u2018\": \"\\x91\", \"\\u2019\": \"\\x92\", \"\\u201c\": \"\\x93\",\n\t\t\t\"\\u201d\": \"\\x94\", \"\\u2022\": \"\\x95\", \"\\u2013\": \"\\x96\", \"\\u2014\": \"\\x97\",\n\t\t\t\"\\u02dc\": \"\\x98\", \"\\u2122\": \"\\x99\", \"\\u0161\": \"\\x9a\", \"\\u203a\": \"\\x9b\",\n\t\t\t\"\\u0153\": \"\\x9c\", \"\\u017e\": \"\\x9e\", \"\\u0178\": \"\\x9f\"\n\t\t};\n\t\tif(Array.isArray(arr)) arr = new Uint8Array(arr);\n\t\treturn new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function(c) { return rev[c] || c; });\n\t} catch(e) {}\n\n\tvar o = [], i = 0;\n\t// this cascade is for the browsers and runtimes of antiquity (and for modern runtimes that lack TextEncoder)\n\ttry {\n\t\tfor(i = 0; i < arr.length - 65536; i+=65536) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 65536)));\n\t\to.push(String.fromCharCode.apply(0, arr.slice(i)));\n\t} catch(e) { try {\n\t\t\tfor(; i < arr.length - 16384; i+=16384) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 16384)));\n\t\t\to.push(String.fromCharCode.apply(0, arr.slice(i)));\n\t\t} catch(e) {\n\t\t\tfor(; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nfunction dup(o/*:any*/)/*:any*/ {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s/*:string*/)/*:number*/ {\n\tvar v/*:number*/ = Number(s);\n\tif(!isNaN(v)) return isFinite(v) ? v : NaN;\n\tif(!/\\d/.test(s)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(]([^()]*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\n\n/* NOTE: Chrome rejects bare times like 1:23 PM */\nvar FDRE1 = /^(0?\\d|1[0-2])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))\\s+([ap])m?$/;\nvar FDRE2 = /^([01]?\\d|2[0-3])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))$/;\nvar FDISO = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)(\\.\\d+)?[Z]?$/; // YYYY-mm-dd(T or space)HH:MM:SS[.UUU][Z]\n\n/* TODO: 1904 adjustment */\nvar utc_append_works = new Date(\"6/9/69 00:00 UTC\").valueOf() == -17798400000;\nfunction fuzzytime1(M) /*:Date*/ {\n\tif(!M[2]) return new Date(Date.UTC(1899,11,31,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), 0, 0, 0));\n\tif(M[3]) {\n\t\t\tif(M[4]) return new Date(Date.UTC(1899,11,31,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], +M[4], parseFloat(M[3])*1000));\n\t\t\telse return new Date(Date.UTC(1899,11,31,(M[7] == \"p\" ? 12 : 0), +M[1], +M[2], parseFloat(M[3])*1000));\n\t}\n\telse if(M[5]) return new Date(Date.UTC(1899,11,31, (+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));\n\telse return new Date(Date.UTC(1899,11,31,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], 0, 0));\n}\nfunction fuzzytime2(M) /*:Date*/ {\n\tif(!M[2]) return new Date(Date.UTC(1899,11,31,+M[1], 0, 0, 0));\n\tif(M[3]) {\n\t\t\tif(M[4]) return new Date(Date.UTC(1899,11,31,+M[1], +M[2], +M[4], parseFloat(M[3])*1000));\n\t\t\telse return new Date(Date.UTC(1899,11,31,0, +M[1], +M[2], parseFloat(M[3])*1000));\n\t}\n\telse if(M[5]) return new Date(Date.UTC(1899,11,31, +M[1], +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));\n\telse return new Date(Date.UTC(1899,11,31,+M[1], +M[2], 0, 0));\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s/*:string*/)/*:Date*/ {\n\t// See issue 2863 -- this is technically not supported in Excel but is otherwise useful\n\tif(FDISO.test(s)) return s.indexOf(\"Z\") == -1 ? local_to_utc(new Date(s)) : new Date(s);\n\tvar lower = s.toLowerCase();\n\tvar lnos = lower.replace(/\\s+/g, \" \").trim();\n\tvar M = lnos.match(FDRE1);\n\tif(M) return fuzzytime1(M);\n\tM = lnos.match(FDRE2);\n\tif(M) return fuzzytime2(M);\n\tM = lnos.match(pdre3);\n\tif(M) return new Date(Date.UTC(+M[1], +M[2]-1, +M[3], +M[4], +M[5], ((M[6] && parseInt(M[6].slice(1), 10))|| 0), ((M[7] && parseInt((M[7] + \"0000\").slice(1,4), 10))||0)));\n\tvar o = new Date(utc_append_works && s.indexOf(\"UTC\") == -1 ? s + \" UTC\": s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tif(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n\t\tlower = lower.replace(/[^a-z]/g,\"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,\"\");\n\t\tif(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n\t} else if(lower.replace(/[ap]m?/, \"\").match(/[a-z]/)) return n;\n\tif(y < 0 || y > 8099 || s.match(/[^-0-9:,\\/\\\\\\ ]/)) return n;\n\treturn o;\n}\n\nvar split_regex = /*#__PURE__*/(function() {\n\tvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n\treturn function split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {\n\t\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\t\tvar p = str.split(re), o = [p[0]];\n\t\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\t\treturn o;\n\t};\n})();\n\nfunction utc_to_local(utc) {\n\treturn new Date(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate(), utc.getUTCHours(), utc.getUTCMinutes(), utc.getUTCSeconds(), utc.getUTCMilliseconds());\n}\nfunction local_to_utc(local) {\n\treturn new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds(), local.getMilliseconds()));\n}\n\nfunction remove_doctype(str) {\n\tvar preamble = str.slice(0, 1024);\n\tvar si = preamble.indexOf(\"<!DOCTYPE\");\n\tif(si == -1) return str;\n\tvar m = str.match(/<[\\w]/);\n\tif(!m) return str;\n\treturn str.slice(0, si) + str.slice(m.index);\n}\n\n/* str.match(/<!--[\\s\\S]*?-->/g) --> str_match_ng(str, \"<!--\", \"-->\") */\nfunction str_match_ng(str, s, e) {\n  var out = [];\n\n  var si = str.indexOf(s);\n  while(si > -1) {\n    var ei = str.indexOf(e, si + s.length);\n\t\tif(ei == -1) break;\n\n\t\tout.push(str.slice(si, ei + e.length));\n\t\tsi = str.indexOf(s, ei + e.length);\n\t}\n\n  return out.length > 0 ? out : null;\n}\n\n/* str.replace(/<!--[\\s\\S]*?-->/g, \"\") --> str_remove_ng(str, \"<!--\", \"-->\") */\nfunction str_remove_ng(str, s, e) {\n  var out = [], last = 0;\n\n  var si = str.indexOf(s);\n\tif(si == -1) return str;\n  while(si > -1) {\n\t\tout.push(str.slice(last, si));\n    var ei = str.indexOf(e, si + s.length);\n\t\tif(ei == -1) break;\n\n\t\tif((si = str.indexOf(s, (last = ei + e.length))) == -1) out.push(str.slice(last));\n\t}\n\n  return out.join(\"\");\n}\n\n/* str.match(/<tag\\b[^>]*?>([\\s\\S]*?)</tag>/) --> str_match_xml(str, \"tag\") */\nvar xml_boundary = { \" \": 1, \"\\t\": 1, \"\\r\": 1, \"\\n\": 1, \">\": 1 };\nfunction str_match_xml(str, tag) {\n\tvar si = str.indexOf('<' + tag), w = tag.length + 1, L = str.length;\n\twhile(si >= 0 && si <= L - w && !xml_boundary[str.charAt(si + w)]) si = str.indexOf('<' + tag, si+1);\n\tif(si === -1) return null;\n\tvar sf = str.indexOf(\">\", si + tag.length);\n\tif(sf === -1) return null;\n\tvar et = \"</\" + tag + \">\";\n\tvar ei = str.indexOf(et, sf);\n\tif(ei == -1) return null;\n\treturn [str.slice(si, ei + et.length), str.slice(sf + 1, ei)];\n}\n\n/* str.match(/<(?:\\w+:)?tag\\b[^<>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/) --> str_match_xml(str, \"tag\") */\nvar str_match_xml_ns = /*#__PURE__*/(function() {\n\tvar str_match_xml_ns_cache = {};\n\treturn function str_match_xml_ns(str, tag) {\n\t\tvar res = str_match_xml_ns_cache[tag];\n\t\tif(!res) str_match_xml_ns_cache[tag] = res = [\n\t\t\tnew RegExp('<(?:\\\\w+:)?'+tag+'\\\\b[^<>]*>', \"g\"),\n\t\t\tnew RegExp('</(?:\\\\w+:)?'+tag+'>', \"g\")\n\t\t];\n\t\tres[0].lastIndex = res[1].lastIndex = 0;\n\t\tvar m = res[0].exec(str);\n\t\tif(!m) return null;\n\t\tvar si = m.index;\n\t\tvar sf = res[0].lastIndex;\n\t\tres[1].lastIndex = res[0].lastIndex;\n\t\tm = res[1].exec(str);\n\t\tif(!m) return null;\n\t\tvar ei = m.index;\n\t\tvar ef = res[1].lastIndex;\n\t\treturn [str.slice(si, ef), str.slice(sf, ei)];\n\t};\n})();\n\n/* str.match(/<(?:\\w+:)?tag\\b[^<>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/g) --> str_match_xml_ns_g(str, \"tag\") */\nvar str_match_xml_ns_g = /*#__PURE__*/(function() {\n\tvar str_match_xml_ns_cache = {};\n\treturn function str_match_xml_ns(str, tag) {\n\t\tvar out = [];\n\t\tvar res = str_match_xml_ns_cache[tag];\n\t\tif(!res) str_match_xml_ns_cache[tag] = res = [\n\t\t\tnew RegExp('<(?:\\\\w+:)?'+tag+'\\\\b[^<>]*>', \"g\"),\n\t\t\tnew RegExp('</(?:\\\\w+:)?'+tag+'>', \"g\")\n\t\t];\n\t\tres[0].lastIndex = res[1].lastIndex = 0;\n\t\tvar m;\n\t\twhile((m = res[0].exec(str))) {\n\t\t\tvar si = m.index;\n\t\t\tres[1].lastIndex = res[0].lastIndex;\n\t\t\tm = res[1].exec(str);\n\t\t\tif(!m) return null;\n\t\t\tvar ef = res[1].lastIndex;\n\t\t\tout.push(str.slice(si, ef));\n\t\t\tres[0].lastIndex = res[1].lastIndex;\n\t\t}\n\t\treturn out.length == 0 ? null : out;\n\t};\n})();\nvar str_remove_xml_ns_g = /*#__PURE__*/(function() {\n\tvar str_remove_xml_ns_cache = {};\n\treturn function str_remove_xml_ns_g(str, tag) {\n\t\tvar out = [];\n\t\tvar res = str_remove_xml_ns_cache[tag];\n\t\tif(!res) str_remove_xml_ns_cache[tag] = res = [\n\t\t\tnew RegExp('<(?:\\\\w+:)?'+tag+'\\\\b[^<>]*>', \"g\"),\n\t\t\tnew RegExp('</(?:\\\\w+:)?'+tag+'>', \"g\")\n\t\t];\n\t\tres[0].lastIndex = res[1].lastIndex = 0;\n\t\tvar m;\n\t\tvar si = 0, ef = 0;\n\t\twhile((m = res[0].exec(str))) {\n\t\t\tsi = m.index;\n\t\t\tout.push(str.slice(ef, si));\n\t\t\tef = si;\n\t\t\tres[1].lastIndex = res[0].lastIndex;\n\t\t\tm = res[1].exec(str);\n\t\t\tif(!m) return null;\n\t\t\tef = res[1].lastIndex;\n\t\t\tres[0].lastIndex = res[1].lastIndex;\n\t\t}\n\t\tout.push(str.slice(ef));\n\t\treturn out.length == 0 ? \"\" : out.join(\"\");\n\t};\n})();\n\n/* str.match(/<(?:\\w+:)?tag\\b[^>]*?>([\\s\\S]*?)<\\/(?:\\w+:)?tag>/gi) --> str_match_xml_ns_ig(str, \"tag\") */\nvar str_match_xml_ig = /*#__PURE__*/(function() {\n\tvar str_match_xml_ns_cache = {};\n\treturn function str_match_xml_ns(str, tag) {\n\t\tvar out = [];\n\t\tvar res = str_match_xml_ns_cache[tag];\n\t\tif(!res) str_match_xml_ns_cache[tag] = res = [\n\t\t\tnew RegExp('<'+tag+'\\\\b[^<>]*>', \"ig\"),\n\t\t\tnew RegExp('</'+tag+'>', \"ig\")\n\t\t];\n\t\tres[0].lastIndex = res[1].lastIndex = 0;\n\t\tvar m;\n\t\twhile((m = res[0].exec(str))) {\n\t\t\tvar si = m.index;\n\t\t\tres[1].lastIndex = res[0].lastIndex;\n\t\t\tm = res[1].exec(str);\n\t\t\tif(!m) return null;\n\t\t\tvar ef = res[1].lastIndex;\n\t\t\tout.push(str.slice(si, ef));\n\t\t\tres[0].lastIndex = res[1].lastIndex;\n\t\t}\n\t\treturn out.length == 0 ? null : out;\n\t};\n})();\nfunction getdatastr(data)/*:?string*/ {\n\tif(!data) return null;\n\tif(data.content && data.type) return cc2str(data.content, true);\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\tif(data.content && data.type) return data.content;\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file/*:string*/) {\n\tvar k = zip.FullPaths || keys(zip.files);\n\tvar f = file.toLowerCase().replace(/[\\/]/g, '\\\\'), g = f.replace(/\\\\/g,'\\/');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].replace(/^Root Entry[\\/]/,\"\").toLowerCase();\n\t\tif(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file/*:string*/) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdatabin(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipbin(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = zip.FullPaths || keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n\treturn o.sort();\n}\n\nfunction zip_add_file(zip, path, content) {\n\tif(zip.FullPaths) {\n\t\tif(typeof content == \"string\") {\n\t\t\tvar res;\n\t\t\tif(has_buf) res = Buffer_from(content);\n\t\t\t/* TODO: investigate performance in Edge 13 */\n\t\t\t//else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n\t\t\telse res = utf8decode(content);\n\t\t\treturn CFB.utils.cfb_add(zip, path, res);\n\t\t}\n\t\tCFB.utils.cfb_add(zip, path, content);\n\t}\n\telse zip.file(path, content);\n}\n\nfunction zip_new() { return CFB.utils.cfb_new(); }\n\nfunction zip_read(d, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": return CFB.read(d, { type: \"base64\" });\n\t\tcase \"binary\": return CFB.read(d, { type: \"binary\" });\n\t\tcase \"buffer\": case \"array\": return CFB.read(d, { type: \"buffer\" });\n\t}\n\tthrow new Error(\"Unrecognized type \" + o.type);\n}\n\nfunction resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {\n\tif(path.charAt(0) == \"/\") return path.slice(1);\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/\\s([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1=/<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?<>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\"<>\\s=]+))*\\s*[\\/\\?]?>/mg, tagregex2 = /<[^<>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {\n\tvar z = ({}/*:any*/);\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i].slice(1);\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tif(!skip_LC) z[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tif(!skip_LC) z[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml/*:StringConv*/ = /*#__PURE__*/(function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig, coderegex = /_x([\\da-fA-F]{4})_/ig;\n\tfunction raw_unescapexml(text/*:string*/)/*:string*/ {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn raw_unescapexml(s.slice(0, i)) + s.slice(i+9,j) + raw_unescapexml(s.slice(j+3));\n\t}\n\treturn function unescapexml(text/*:string*/, xlsx/*:boolean*/) {\n\t\tvar out = raw_unescapexml(text);\n\t\treturn xlsx ? out.replace(/\\r\\n/g, \"\\n\") : out;\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f\\uFFFE-\\uFFFF]/g;\nfunction escapexml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text/*:string*/)/*:string*/{ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr/*:StringConv*/ = /*#__PURE__*/(function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };\n})();\nfunction xlml_unfixstr(str/*:string*/)/*:string*/ { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); }\n\n/* note: xsd:boolean valid values: true / 1 / false / 0 */\nfunction parsexmlbool(value/*:any*/)/*:boolean*/ {\n\tswitch(value) {\n\t\tcase 1: case true:  case '1': case 'true':  return true;\n\t\tcase 0: case false: case '0': case 'false': return false;\n\t\t//default: throw new Error(\"Invalid xsd:boolean \" + value);\n\t}\n\treturn false;\n}\n\nfunction utf8reada(orig/*:string*/)/*:string*/ {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n}\n\nfunction utf8readb(data) {\n\tvar out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\tfor(i = 0; i < data.length; i+=j) {\n\t\tj = 1;\n\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\telse { j = 4;\n\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t}\n\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t}\n\treturn out.slice(0,k).toString('ucs2');\n}\n\nfunction utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }\n\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && (/*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\n\nvar utf8write/*:StringConv*/ = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); } : function(orig/*:string*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\nvar htmldecode/*:{(s:string):string}*/ = /*#__PURE__*/(function() {\n\tvar entities/*:Array<[RegExp, string]>*/ = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]]; });\n\treturn function htmldecode(str/*:string*/)/*:string*/ {\n\t\tvar o = str\n\t\t\t\t// Remove new lines and spaces from start of content\n\t\t\t\t.replace(/^[\\t\\n\\r ]+/, \"\")\n\t\t\t\t// Remove new lines and spaces from end of content\n\t\t\t\t.replace(/(^|[^\\t\\n\\r ])[\\t\\n\\r ]+$/,\"$1\")\n\t\t\t\t// Added line which removes any white space characters after and before html tags\n\t\t\t\t.replace(/>\\s+/g,\">\").replace(/\\b\\s+</g,\"<\")\n\t\t\t\t// Replace remaining new lines and spaces with space\n\t\t\t\t.replace(/[\\t\\n\\r ]+/g, \" \")\n\t\t\t\t// Replace <br> tags with new lines\n\t\t\t\t.replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\")\n\t\t\t\t// Strip HTML elements\n\t\t\t\t.replace(/<[^<>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^<\"'>]*)>([\\s\\S]*)</;\nfunction parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {\n\tvar h = parsexmltag(data);\n\n\tvar matches/*:Array<string>*/ = str_match_xml_ns_g(data, h.baseType)||[];\n\tvar res/*:Array<any>*/ = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x/*:string*/) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f/*:string*/,g/*:string*/)/*:string*/ { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d/*:Date*/, t/*:?boolean*/)/*:string*/ { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s, xlsx/*:?boolean*/)/*:string*/ {\n\tswitch(typeof s) {\n\t\tcase 'string':\n\t\t\tvar o = writextag('vt:lpwstr', escapexml(s));\n\t\t\tif(xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n\t\t\treturn o;\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nfunction xlml_normalize(d)/*:string*/ {\n\tif(has_buf &&/*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags, ODS uses invalid XML */\nvar xlmlregex = /<([\\/]?)([^\\s?><!\\/:\"]*:|)([^\\s?<>:\\/\"]+)(?:\\s+[^<>=?\"'\\s]+=\"[^\"]*?\")*\\s*[\\/]?>/mg;\n\nvar XMLNS = ({\n\tCORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n\tCUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n\tEXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n\tCT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n\tRELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n\tTCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n}/*:any*/);\n\nvar XMLNS_main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n}/*:any*/);\nfunction read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar ___toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;\n\nvar ___utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar __utf16le = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;\n\nvar ___hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar __hexlify = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;\n\nvar ___utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar __utf8 = has_buf ? function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;\n\nvar ___lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpstr = ___lpstr;\n\nvar ___cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __cpstr = ___cpstr;\n\nvar ___lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpwstr = ___lpwstr;\n\nvar ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __lpp4 = ___lpp4;\n\nvar ___8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = ___8lpp4;\n\nvar ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};\nvar __double = ___double;\n\nvar is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n\nif(has_buf/*:: && typeof Buffer !== 'undefined'*/) {\n\t__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\nif(typeof $cptable !== 'undefined') cpdoit();\n\nvar __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };\nvar __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {\n\tvar o=\"\", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)  && buf_utf16le) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof $cptable !== 'undefined') {\n\t\t\t\to = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\n\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\tfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs' || f == 'cpstr') {\n\t\tif(typeof $cptable !== 'undefined' && current_ansi == 874) {\n\t\t\t/* TODO: use tables directly, don't encode */\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) {\n\t\t\t\tvar cpp = $cptable.utils.encode(current_ansi, val.charAt(i));\n\t\t\t\tthis[this.l + i] = cpp[0];\n\t\t\t}\n\t\t\tsize = val.length;\n\t\t} else if(typeof $cptable !== 'undefined' && f == 'cpstr') {\n\t\t\tcpp = $cptable.utils.encode(current_codepage, val);\n\t\t\t/* replace null bytes with _ when relevant */\n      if(cpp.length == val.length) for(i = 0; i < val.length; ++i) if(cpp[i] == 0 && val.charCodeAt(i) != 0) cpp[i] = 0x5F;\n      if(cpp.length == 2 * val.length) for(i = 0; i < val.length; ++i) if(cpp[2*i] == 0 && cpp[2*i+1] == 0 && val.charCodeAt(i) != 0) cpp[2*i] = 0x5F;\n\t\t\tfor(i = 0; i < cpp.length; ++i) this[this.l + i] = cpp[i];\n\t\t\tsize = cpp.length;\n\t\t} else {\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\t\tsize = val.length;\n\t\t}\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tvar end/*:number*/ = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else /*:: if(typeof val === 'number') */ switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos/*:number*/)/*:void*/ {\n\tblob.l = pos;\n\tblob.read_shift = /*::(*/ReadShift/*:: :any)*/;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }\n\nfunction new_buf(sz/*:number*/)/*:Block*/ {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = R.f && R.f(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array()/*:BufArray*/ {\n\tvar bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {\n\t\tvar o/*:Block*/ = (new_buf(sz)/*:any*/);\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf/*:Block*/ = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\t// workaround for new Buffer(3).slice(0,0) bug in bun 0.1.3\n\t\tif(curbuf.l) {\n\t\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\t}\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz/*:number*/)/*:Block*/ {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn bconcat(bufs);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);\n}\n\nfunction write_record(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/) {\n\tvar t/*:number*/ = +type, l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(/*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {\n\tif(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(!c.cRel && c.cRel != null) s = fix_col(s);\n\tif(!c.rRel && c.rRel != null) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts)/*:string*/ {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row/*:number*/)/*:string*/ { return \"\" + (row + 1); }\nfunction fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error(\"invalid column \" + col); var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\nfunction decode_cell(cstr/*:string*/)/*:CellAddress*/ {\n\tvar R = 0, C = 0;\n\tfor(var i = 0; i < cstr.length; ++i) {\n\t\tvar cc = cstr.charCodeAt(i);\n\t\tif(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);\n\t\telse if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n\t}\n\treturn { c: C - 1, r:R - 1 };\n}\nfunction encode_cell(cell/*:CellAddress*/)/*:string*/ {\n\tvar col = cell.c + 1;\n\tvar s=\"\";\n\tfor(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;\n\treturn s + (cell.r + 1);\n}\nfunction decode_range(range/*:string*/)/*:Range*/ {\n\tvar idx = range.indexOf(\":\");\n\tif(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };\n\treturn { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\n/*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n\t\treturn encode_range(cs.s, cs.e);\n\t}\n/*:: if((cs instanceof Range)) throw \"unreachable\"; */\n\tif(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));\n\tif(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));\n/*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n/*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n\treturn cs == ce ? cs : cs + \":\" + ce;\n}\nfunction fix_range(a1/*:string*/)/*:string*/ {\n\tvar s = decode_range(a1);\n\treturn \"$\" + encode_col(s.s.c) + \"$\" + encode_row(s.s.r) + \":$\" + encode_col(s.e.c) + \"$\" + encode_row(s.e.r);\n}\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname.replace(/'/g, \"''\") + \"'\";\n\treturn sname;\n}\n\nfunction safe_decode_range(range/*:string*/)/*:Range*/ {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\t++i;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell/*:Cell*/, v/*:any*/) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(cell.t == \"e\") return BErr[cell.v] || cell.v;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_new(opts) {\n\tvar out = {};\n\tvar o = opts || {};\n\tif(o.dense) out[\"!data\"] = [];\n\treturn out;\n}\n\nfunction sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? (_ws[\"!data\"] != null) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws/*:Worksheet*/ = _ws || ({}/*:any*/);\n\tif(dense && !ws[\"!data\"]) ws[\"!data\"] = [];\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);\n\tif(ws[\"!ref\"]){\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = (ws[\"!ref\"] ? _range.e.r + 1 : 0);\n\t} else {\n\t\trange.s.c = range.e.c = range.s.r = range.e.r = 0;\n\t}\n\tvar row = [], seen = false;\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tvar __R = _R + R, __Rstr = \"\" + (__R + 1);\n\t\t//console.log(\"!!\", R, _R, __R);\n\t\tif(dense) {\n\t\t\tif(!ws[\"!data\"][__R]) ws[\"!data\"][__R] = [];\n\t\t\trow = ws[\"!data\"][__R];\n\t\t}\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);\n\t\t\tvar __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tseen = true;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) {\n\t\t\t\t\tif(cell.f) cell.t = 'n';\n\t\t\t\t\telse if(o.nullError) { cell.t = 'e'; cell.v = 0; }\n\t\t\t\t\telse if(!o.sheetStubs) continue;\n\t\t\t\t\telse cell.t = 'z';\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\t\tif(!o.UTC) cell.v = local_to_utc(cell.v);\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v, o.date1904)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v, o.date1904); cell.w = SSF_format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(row[__C] && row[__C].z) cell.z = row[__C].z;\n\t\t\t\trow[__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_col(__C) + __Rstr/*:any*/;\n\t\t\t\tif(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(seen && range.s.c < 10400000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }\n\nfunction parse_Int32LE(data) {\n\treturn data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x/*:number*/, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(4 + 2 * data.length); }\n\to.write_shift(4, data.length);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length/*:number*/)/*:XLString*/ {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str }/*:any*/);\n\tif ((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ ich: 0, ifnt: 0 }];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(15 + 4 * str.t.length); }\n\to.write_shift(1, 0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(23 + 4 * str.t.length); }\n\to.write_shift(1, 1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4, 1);\n\twrite_StrRun({ ich: 0, ifnt: 0 }, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data)/*:any*/ {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) << 16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c: col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell/*:any*/, o/*:?Block*/) {\n\tif (o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data)/*:any*/ {\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:-1, iStyleRef: iStyleRef };\n}\nfunction write_XLSBShortCell(cell/*:any*/, o/*:?Block*/) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data)/*:number*/ {\n\tvar b = data.slice(data.l, data.l + 4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l += 4;\n\tvar RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n\treturn fX100 ? (RK / 100) : RK;\n}\nfunction write_RkNumber(data/*:number*/, o) {\n\tif (o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif ((data == (data | 0)) && (data >= -(1 << 29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if ((d100 == (d100 | 0)) && (d100 >= -(1 << 29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/)/*:Range*/ {\n\tvar cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r/*:Range*/, o) {\n\tif (!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data/*::, length*/) {\n\tif(data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n\treturn data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data/*::, length*/) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch (xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif (icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif (!o) o = new_buf(8);\n\tif (!color || color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif (color.index != null) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if (color.theme != null) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif (nTS > 0) nTS *= 32767;\n\telse if (nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif (!color.rgb || color.theme != null) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\tif (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n\t\to.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data/*::, length, opts*/) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\tfBold: d & 0x01,\n\t\tfItalic: d & 0x02,\n\t\tfUnderline: d & 0x04,\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif (!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic ? 0x02 : 0) |\n\t\t(font.strike ? 0x08 : 0) |\n\t\t(font.outline ? 0x10 : 0) |\n\t\t(font.shadow ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {\n\t// $FlowIgnore\n\tvar ClipFmt = { 2: \"BITMAP\", 3: \"METAFILEPICT\", 8: \"DIB\", 14: \"ENHMETAFILE\" };\n\tvar m/*:number*/ = o.read_shift(4);\n\tswitch (m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || \"\";\n\t}\n\tif (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\n//var VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\n//var VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR   = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n\t0x01: { n: 'CodePage', t: VT_I2 },\n\t0x02: { n: 'Category', t: VT_STRING },\n\t0x03: { n: 'PresentationFormat', t: VT_STRING },\n\t0x04: { n: 'ByteCount', t: VT_I4 },\n\t0x05: { n: 'LineCount', t: VT_I4 },\n\t0x06: { n: 'ParagraphCount', t: VT_I4 },\n\t0x07: { n: 'SlideCount', t: VT_I4 },\n\t0x08: { n: 'NoteCount', t: VT_I4 },\n\t0x09: { n: 'HiddenCount', t: VT_I4 },\n\t0x0a: { n: 'MultimediaClipCount', t: VT_I4 },\n\t0x0b: { n: 'ScaleCrop', t: VT_BOOL },\n\t0x0c: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },\n\t0x0d: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },\n\t0x0e: { n: 'Manager', t: VT_STRING },\n\t0x0f: { n: 'Company', t: VT_STRING },\n\t0x10: { n: 'LinksUpToDate', t: VT_BOOL },\n\t0x11: { n: 'CharacterCount', t: VT_I4 },\n\t0x13: { n: 'SharedDoc', t: VT_BOOL },\n\t0x16: { n: 'HyperlinksChanged', t: VT_BOOL },\n\t0x17: { n: 'AppVersion', t: VT_I4, p: 'version' },\n\t0x18: { n: 'DigSig', t: VT_BLOB },\n\t0x1A: { n: 'ContentType', t: VT_STRING },\n\t0x1B: { n: 'ContentStatus', t: VT_STRING },\n\t0x1C: { n: 'Language', t: VT_STRING },\n\t0x1D: { n: 'Version', t: VT_STRING },\n\t0xFF: {},\n\t/* [MS-OLEPS] 2.18 */\n\t0x80000000: { n: 'Locale', t: VT_UI4 },\n\t0x80000003: { n: 'Behavior', t: VT_UI4 },\n\t0x72627262: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n\t0x01: { n: 'CodePage', t: VT_I2 },\n\t0x02: { n: 'Title', t: VT_STRING },\n\t0x03: { n: 'Subject', t: VT_STRING },\n\t0x04: { n: 'Author', t: VT_STRING },\n\t0x05: { n: 'Keywords', t: VT_STRING },\n\t0x06: { n: 'Comments', t: VT_STRING },\n\t0x07: { n: 'Template', t: VT_STRING },\n\t0x08: { n: 'LastAuthor', t: VT_STRING },\n\t0x09: { n: 'RevNumber', t: VT_STRING },\n\t0x0A: { n: 'EditTime', t: VT_FILETIME },\n\t0x0B: { n: 'LastPrinted', t: VT_FILETIME },\n\t0x0C: { n: 'CreatedDate', t: VT_FILETIME },\n\t0x0D: { n: 'ModifiedDate', t: VT_FILETIME },\n\t0x0E: { n: 'PageCount', t: VT_I4 },\n\t0x0F: { n: 'WordCount', t: VT_I4 },\n\t0x10: { n: 'CharCount', t: VT_I4 },\n\t0x11: { n: 'Thumbnail', t: VT_CF },\n\t0x12: { n: 'Application', t: VT_STRING },\n\t0x13: { n: 'DocSecurity', t: VT_I4 },\n\t0xFF: {},\n\t/* [MS-OLEPS] 2.18 */\n\t0x80000000: { n: 'Locale', t: VT_UI4 },\n\t0x80000003: { n: 'Behavior', t: VT_UI4 },\n\t0x72627262: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n\t0x0001: \"US\", // United States\n\t0x0002: \"CA\", // Canada\n\t0x0003: \"\", // Latin America (except Brazil)\n\t0x0007: \"RU\", // Russia\n\t0x0014: \"EG\", // Egypt\n\t0x001E: \"GR\", // Greece\n\t0x001F: \"NL\", // Netherlands\n\t0x0020: \"BE\", // Belgium\n\t0x0021: \"FR\", // France\n\t0x0022: \"ES\", // Spain\n\t0x0024: \"HU\", // Hungary\n\t0x0027: \"IT\", // Italy\n\t0x0029: \"CH\", // Switzerland\n\t0x002B: \"AT\", // Austria\n\t0x002C: \"GB\", // United Kingdom\n\t0x002D: \"DK\", // Denmark\n\t0x002E: \"SE\", // Sweden\n\t0x002F: \"NO\", // Norway\n\t0x0030: \"PL\", // Poland\n\t0x0031: \"DE\", // Germany\n\t0x0034: \"MX\", // Mexico\n\t0x0037: \"BR\", // Brazil\n\t0x003d: \"AU\", // Australia\n\t0x0040: \"NZ\", // New Zealand\n\t0x0042: \"TH\", // Thailand\n\t0x0051: \"JP\", // Japan\n\t0x0052: \"KR\", // Korea\n\t0x0054: \"VN\", // Viet Nam\n\t0x0056: \"CN\", // China\n\t0x005A: \"TR\", // Turkey\n\t0x0069: \"JS\", // Ramastan\n\t0x00D5: \"DZ\", // Algeria\n\t0x00D8: \"MA\", // Morocco\n\t0x00DA: \"LY\", // Libya\n\t0x015F: \"PT\", // Portugal\n\t0x0162: \"IS\", // Iceland\n\t0x0166: \"FI\", // Finland\n\t0x01A4: \"CZ\", // Czech Republic\n\t0x0376: \"TW\", // Taiwan\n\t0x03C1: \"LB\", // Lebanon\n\t0x03C2: \"JO\", // Jordan\n\t0x03C3: \"SY\", // Syria\n\t0x03C4: \"IQ\", // Iraq\n\t0x03C5: \"KW\", // Kuwait\n\t0x03C6: \"SA\", // Saudi Arabia\n\t0x03CB: \"AE\", // United Arab Emirates\n\t0x03CC: \"IL\", // Israel\n\t0x03CE: \"QA\", // Qatar\n\t0x03D5: \"IR\", // Iran\n\t0xFFFF: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/ rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0x000000, /* 0x40 icvForeground ?? */\n\t0xFFFFFF, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n\t0x00: \"#NULL!\",\n\t0x07: \"#DIV/0!\",\n\t0x0F: \"#VALUE!\",\n\t0x17: \"#REF!\",\n\t0x1D: \"#NAME?\",\n\t0x24: \"#NUM!\",\n\t0x2A: \"#N/A\",\n\t0x2B: \"#GETTING_DATA\",\n\t0xFF: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n\t\"#NULL!\":        0x00,\n\t\"#DIV/0!\":       0x07,\n\t\"#VALUE!\":       0x0F,\n\t\"#REF!\":         0x17,\n\t\"#NAME?\":        0x1D,\n\t\"#NUM!\":         0x24,\n\t\"#N/A\":          0x2A,\n\t\"#GETTING_DATA\": 0x2B,\n\t\"#WTF?\":         0xFF\n};\n\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n\t\"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n\t\"application/vnd.ms-excel.worksheet\": \"sheets\",\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Chartsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n\t\"application/vnd.ms-excel.chartsheet\": \"charts\",\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n\t\"application/vnd.ms-excel.macrosheet\": \"macros\",\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* Dialogsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n\t\"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n\n\t/* Shared Strings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n\t\"application/vnd.ms-excel.sharedStrings\": \"strs\",\n\n\t/* Styles */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n\t\"application/vnd.ms-excel.styles\": \"styles\",\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* Comments */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n\t\"application/vnd.ms-excel.comments\": \"comments\",\n\t\"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n\t\"application/vnd.ms-excel.person+xml\": \"people\",\n\n\t/* Metadata (Stock/Geography and Dynamic Array) */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n\t\"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Objects */\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Chart Advanced */\n\t\"application/vnd.ms-office.chartex+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n}/*:any*/);\n\nvar CT_LIST = {\n\tworkbooks: {\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t},\n\tstrs: { /* Shared Strings */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t},\n\tcomments: { /* Comments */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t},\n\tsheets: { /* Worksheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t},\n\tcharts: { /* Chartsheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t},\n\tdialogs: { /* Dialogsheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t},\n\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t},\n\tmetadata: { /* Metadata (Stock/Geography and Dynamic Array) */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sheetMetadata\"\n\t},\n\tstyles: { /* Styles */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t}\n};\n\nfunction new_ct()/*:any*/ {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], threadedcomments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [], metadata: [], people:[],\n\t\tTODO:[], xmlns: \"\" }/*:any*/);\n}\n\nfunction parse_ct(data/*:?string*/) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension.toLowerCase()] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nfunction write_ct(ct, opts, raw)/*:string*/ {\n\tvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\n\tvar o/*:Array<string>*/ = [], v;\n\n\tif(!raw) {\n\t\to[o.length] = (XML_HEADER);\n\t\to[o.length] = writextag('Types', null, {\n\t\t\t'xmlns': XMLNS.CT,\n\t\t\t'xmlns:xsd': XMLNS.xsd,\n\t\t\t'xmlns:xsi': XMLNS.xsi\n\t\t});\n\t\to = o.concat([\n\t\t\t['xml', 'application/xml'],\n\t\t\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t\t\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t\t\t['data', 'application/vnd.openxmlformats-officedocument.model+data'],\n\t\t\t/* from test files */\n\t\t\t['bmp', 'image/bmp'],\n\t\t\t['png', 'image/png'],\n\t\t\t['gif', 'image/gif'],\n\t\t\t['emf', 'image/x-emf'],\n\t\t\t['wmf', 'image/x-wmf'],\n\t\t\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t\t\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t\t\t['pdf', 'application/pdf'],\n\t\t\t['rels', 'application/vnd.openxmlformats-package.relationships+xml']\n\t\t].map(function(x) {\n\t\t\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n\t\t}));\n\t}\n\n\t/* only write first instance */\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\n\t/* book type-specific */\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\n\t/* standard type */\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('threadedcomments');\n\tf3('drawings');\n\tf2('metadata');\n\tf3('people');\n\tif(!raw && o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tXPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n\tXMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n\tXLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n\tCXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n\tCXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n\tCMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n\tCORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tEXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n\tCUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n\tSST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n\tSTY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n\tTHEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n\tCHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n\tCHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n\tCS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n\tWS: [\n\t\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n\t],\n\tDS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n\tMS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n\tIMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n\tDRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n\tXLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n\tTCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n\tPEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n\tCONN: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n}/*:any*/);\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file/*:string*/)/*:string*/ {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data/*:?string*/, currentFilePath/*:string*/) {\n\tvar rels = {\"!id\":{}};\n\tif (!data) return rels;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = unescapexml(y.Target); rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\n\n/* TODO */\nfunction write_rels(rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Relationships', null, {\n\t\t//'xmlns:ns0': XMLNS.RELS,\n\t\t'xmlns': XMLNS.RELS\n\t})];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nfunction add_rels(rels, rId/*:number*/, f, type, relobj, targetmode/*:?string*/)/*:number*/ {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(!rels['!idx']) rels['!idx'] = 1;\n\tif(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trels['!idx'] = rId + 1;\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(targetmode) relobj.TargetMode = targetmode;\n\telse if([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n  var str = xlml_normalize(d);\n  var Rn;\n  var FEtag;\n  while (Rn = xlmlregex.exec(str))\n    switch (Rn[3]) {\n      case \"manifest\":\n        break;\n      case \"file-entry\":\n        FEtag = parsexmltag(Rn[0], false);\n        if (FEtag.path == \"/\" && FEtag.type !== CT_ODS)\n          throw new Error(\"This OpenDocument is not a spreadsheet\");\n        break;\n      case \"encryption-data\":\n      case \"algorithm\":\n      case \"start-key-generation\":\n      case \"key-derivation\":\n        throw new Error(\"Unsupported ODS Encryption\");\n      default:\n        if (opts && opts.WTF)\n          throw Rn;\n    }\n}\nfunction write_manifest(manifest) {\n  var o = [XML_HEADER];\n  o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n  o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n  for (var i = 0; i < manifest.length; ++i)\n    o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n  o.push(\"</manifest:manifest>\");\n  return o.join(\"\");\n}\nfunction write_rdf_type(file, res, tag) {\n  return [\n    '  <rdf:Description rdf:about=\"' + file + '\">\\n',\n    '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + \"#\" + res + '\"/>\\n',\n    \"  </rdf:Description>\\n\"\n  ].join(\"\");\n}\nfunction write_rdf_has(base, file) {\n  return [\n    '  <rdf:Description rdf:about=\"' + base + '\">\\n',\n    '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n    \"  </rdf:Description>\\n\"\n  ].join(\"\");\n}\nfunction write_rdf(rdf) {\n  var o = [XML_HEADER];\n  o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n  for (var i = 0; i != rdf.length; ++i) {\n    o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n    o.push(write_rdf_has(\"\", rdf[i][0]));\n  }\n  o.push(write_rdf_type(\"\", \"Document\", \"pkg\"));\n  o.push(\"</rdf:RDF>\");\n  return o.join(\"\");\n}\nfunction write_meta_ods(wb, opts) {\n  return '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>SheetJS ' + XLSX.version + \"</meta:generator></office:meta></office:document-meta>\";\n}\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS/*:Array<Array<string> >*/ = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = str_match_xml(data, f[0]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\tg = escapexml(g);\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, writextag('cp:coreProperties', null, {\n\t\t//'xmlns': XMLNS.CORE_PROPS,\n\t\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t\t'xmlns:dc': XMLNS.dc,\n\t\t'xmlns:dcterms': XMLNS.dcterms,\n\t\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t})], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS/*:Array<Array<string> >*/ = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Hojas de cálculo\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"Rangos con nombre\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tvar xml = (str_match_xml_ns(data, f[0])||[])[1];\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": if(xml) p[f[1]] = unescapexml(xml); break;\n\t\t\tcase \"bool\": p[f[1]] = xml === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = str_match_xml(data, f[0]);\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nfunction write_ext_props(cp/*::, opts*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (writextag('Properties', null, {\n\t\t'xmlns': XMLNS.EXT_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t}));\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = escapexml(String(cp[f[1]])); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^<>]+>[^<]*/g;\nfunction parse_cust_props(data/*:string*/, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = unescapexml(y.name); break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nfunction write_cust_props(cp/*::, opts*/)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Properties', null, {\n\t\t'xmlns': XMLNS.CUST_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t})];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k], true), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': escapexml(k)\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\n\nfunction xlml_set_prop(Props, tag/*:string*/, val) {\n\tif(!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o/*:Array<string>*/ = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops/*::, opts*/) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o/*:Array<string>*/ = [];\n\tif(Props) keys(Props).forEach(function(k) {\n\t\t/*:: if(!Props) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\n\t\t/*:: if(!Custprops) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n\t\tif(Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time/*:string|Date*/) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad/*:?number*/) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) {\n\t\tvar start = blob.l;\n\t\tret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');\n\t\tif((blob.l - start) & 0x02) blob.l += 2;\n\t}\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar start = blob.l;\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tif(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);\n\t\tcase 0x101E /*VT_VECTOR|VT_LPSTR*/:\n\t\tcase 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n\t\t\treturn t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type/*:number*/, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/: /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */ p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\n\t\t\t/*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n\t\t\tp = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tif(Props[i][0] == 0 && Props.length > i+1 && Props[i][1] == Props[i+1][1]) continue; // R9\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/(^|[^\\u0000])\\u0000+$/,\"$1\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/(^|[^\\u0000])\\u0000+$/,\"$1\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ];\nfunction guess_property_type(val/*:any*/)/*:number*/ {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI/*:: || {}*/)[idx]/*:: || {} */;\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\n\t\t\t\t/*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n\t\t\t\tvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({}/*:any*/);\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI/*:{[key:string|number]:any}*/, entries2/*:?any*/, clsid2/*:?any*/) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v/*:any*/, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v/*:number*/, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob/*::, length*/) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t/*:string*/, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, ((t == 'e') ? +v : +!!v));\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr/*:: :XLString, opts*/) {\n\tvar str = (xlstr.t||\"\"), nfmts = 1;\n\n\tvar hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n\thdr.write_shift(2, str.length);\n\thdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n\tif(nfmts > 1) hdr.write_shift(2, nfmts);\n\n\tvar otext = new_buf(2 * str.length);\n\totext.write_shift(2 * str.length, str, 'utf16le');\n\n\tvar out = [hdr, otext];\n\n\treturn bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob/*::, length, opts*/) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob/*::, length*/) {\n\tvar cAnti = blob.read_shift(2);\n\tvar preamble = \"\"; while(cAnti-- > 0) preamble += \"../\";\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return preamble + ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob/*::, length*/) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\nfunction write_HyperlinkString(str/*:string*/, o) {\n\tif(!o) o = new_buf(6 + str.length * 2);\n\to.write_shift(4, 1 + str.length);\n\tfor(var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length)/*:Hyperlink*/ {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tif((flags & 0x0002) && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n\tvar out = ({Target:target}/*:any*/);\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tif(Target.slice(0,7) == \"file://\") Target = Target.slice(7);\n\tvar hashidx = Target.indexOf(\"#\");\n\tvar F = hashidx > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\twrite_HyperlinkString(Target, out);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n\t\tout.write_shift(4, 2*(Pretarget.length + 1));\n\t\tfor(i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t\tif(F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx+1): \"\", out);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length - 3 * P + 1);\n\t\tfor(i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob, length, opts)/*:Cell*/ {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ret = ({r:rw, c:col, ixfe:0}/*:any*/);\n\tif(opts && opts.biff == 2 || length == 7) {\n\t\t/* TODO: pass back flags */\n\t\tvar flags = blob.read_shift(1);\n\t\tret.ixfe = flags & 0x3F;\n\t\tblob.l += 2;\n\t\t/*\n\t\tvar ifntifmt = blob.read_shift(1);\n\t\tvar ifmt = ifntifmt & 0x3f, ifnt = ifntifmt >> 6;\n\t\tvar flags3 = blob.read_shift(1);\n\t\t*/\n\t} else ret.ixfe = blob.read_shift(2);\n\treturn ret;\n}\nfunction write_XLSCell(R/*:number*/, C/*:number*/, ixfe/*:?number*/, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r/*:Range*/, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob/*::, length*/) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n\t0x00: parse_FtSkip,      /* FtEnd */\n\t0x04: parse_FtSkip,      /* FtMacro */\n\t0x05: parse_FtSkip,      /* FtButton */\n\t0x06: parse_FtSkip,      /* FtGmo */\n\t0x07: parse_FtCf,        /* FtCf */\n\t0x08: parse_FtSkip,      /* FtPioGrbit */\n\t0x09: parse_FtSkip,      /* FtPictFmla */\n\t0x0A: parse_FtSkip,      /* FtCbls */\n\t0x0B: parse_FtSkip,      /* FtRbo */\n\t0x0C: parse_FtSkip,      /* FtSbs */\n\t0x0D: parse_FtNts,       /* FtNts */\n\t0x0E: parse_FtSkip,      /* FtSbsFmla */\n\t0x0F: parse_FtSkip,      /* FtGboData */\n\t0x10: parse_FtSkip,      /* FtEdoData */\n\t0x11: parse_FtSkip,      /* FtRboData */\n\t0x12: parse_FtSkip,      /* FtCblsData */\n\t0x13: parse_FtSkip,      /* FtLbsData */\n\t0x14: parse_FtSkip,      /* FtCblsFmla */\n\t0x15: parse_FtCmo\n};\nfunction parse_FtArray(blob, length/*::, ot*/) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts[ft] = FtTab[ft](blob, tgt - blob.l);\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb/*:Workbook*/, t/*:number*/, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s/*:string*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar name = \"\";\n\tif(opts.biff == 4) {\n\t\tname = parse_ShortXLUnicodeString(blob, 0, opts);\n\t\tif(name.length === 0) name = \"Sheet1\";\n\t\treturn { name:name };\n\t}\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tname = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length)/*:SST*/ {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs/*:SST*/ = ([]/*:any*/);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\nfunction write_SST(sst, opts) {\n\tvar header = new_buf(8);\n\theader.write_shift(4, sst.Count);\n\theader.write_shift(4, sst.Unique);\n\tvar strs = [];\n\tfor(var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n\tvar o = bconcat([header].concat(strs));\n\t/*::(*/o/*:: :any)*/.parts = [header.length].concat(strs.map(function(str) { return str.length; }));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({}/*:any*/);\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1(/*::opts*/) {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 5) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane(/*blob, length, opts*/) {\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o/*:any*/ = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, length, opts);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\nfunction write_LabelSst(R/*:number*/, C/*:number*/, v/*:number*/, os/*:number*/ /*::, opts*/) {\n\tvar o = new_buf(10);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(4, v);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, length, opts);\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R/*:number*/, C/*:number*/, v/*:string*/, os/*:number*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i/*:number*/, f/*:string*/, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\nfunction write_BIFF2Format(f/*:string*/) {\n\tvar o = new_buf(1 + f.length);\n\to.write_shift(1, f.length);\n\to.write_shift(f.length, f, \"sbcs\");\n\treturn o;\n}\nfunction write_BIFF4Format(f/*:string*/) {\n\tvar o = new_buf(3 + f.length);\n\to.l += 2;\n\to.write_shift(1, f.length);\n\to.write_shift(f.length, f, \"sbcs\");\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\tvar f = 0;\n\tif(data.numFmtId > 0 && b5) f |= 0x0400;\n\to.write_shift(4, f);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\nfunction parse_BIFF2XF(blob/*::, length, opts*/) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(1); blob.l++; o.flags = blob.read_shift(1);\n\to.numFmtId = o.flags & 0x3F; o.flags>>=6;\n\to.fStyle = 0;\n\to.data = {}; // TODO\n\treturn o;\n}\nfunction write_BIFF2XF(xf) {\n\tvar o = new_buf(4);\n\to.l+=2;\n\to.write_shift(1, xf.numFmtId);\n\to.l++;\n\treturn o;\n}\nfunction write_BIFF3XF(xf) {\n\tvar o = new_buf(12);\n\to.l++;\n\to.write_shift(1, xf.numFmtId);\n\to.l += 10;\n\treturn o;\n}\n/* TODO: check other fields */\nvar write_BIFF4XF = write_BIFF3XF;\nfunction parse_BIFF3XF(blob/*::, length, opts*/) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(1); o.numFmtId = blob.read_shift(1); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\to.data = {}; // TODO\n\treturn o;\n}\nfunction parse_BIFF4XF(blob/*::, length, opts*/) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(1); o.numFmtId = blob.read_shift(1); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\to.data = {}; // TODO\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts/*:Array<number>*/) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6, opts);\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R/*:number*/, C/*:number*/, v, os/*:number*/, opts, t/*:string*/) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar cell = parse_XLSCell(blob, 6, opts);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R/*:number*/, C/*:number*/, v, os/*:: :number, opts*/) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t}/*:any*/);\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\t/*jshint -W018 */\n\tvar rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\t/*jshint +W018 */\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: legacy record filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\t/* see issue 2907 */\n\tif(!(opts.biff > 8) && (length == blob[blob.l] + (blob[blob.l+1] == 0x03 ? 1 : 0) + 1)) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 */\nfunction parse_NoteSh(blob, length, opts) {\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\tif(opts && (opts.biff < 8)) {\n\t\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\t\tif(row == 0xFFFF || row == -1) return; // TODO: test continuation\n\t\tvar cch = blob.read_shift(2);\n\t\tvar cmnt = blob.read_shift(Math.min(cch,2048), 'cpstr');\n\t\treturn [{r:row, c:col}, cmnt];\n\t}\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\nfunction write_NOTE_BIFF2(text/*:string*/, R/*:number*/, C/*:number*/, len/*?:number*/) {\n\tvar o = new_buf(6 + (len || text.length));\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, len || text.length);\n\to.write_shift(text.length, text, \"sbcs\");\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length)/*:Array<Range>*/ {\n\tvar merges/*:Array<Range>*/ = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges/*:Array<Range>*/) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n0x08: function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n}\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob)/*:[string|number, string|number]*/ {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\tvar o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);\n\tif(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;\n\treturn o;\n}\nfunction write_ColInfo(col, idx) {\n\tvar o = new_buf(12);\n\to.write_shift(2, idx);\n\to.write_shift(2, idx);\n\to.write_shift(2, col.width * 256);\n\to.write_shift(2, 0);\n\tvar f = 0;\n\tif(col.hidden) f |= 1;\n\to.write_shift(1, f);\n\tf = col.level || 0;\n\to.write_shift(1, f);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n/*:number*/) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\nfunction write_BIFF2Cell(out, r/*:number*/, c/*:number*/, ixfe/*:number*/, ifmt/*:number*/) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(1, ixfe||0/* & 0x3F */);\n\tout.write_shift(1, ifmt||0/* & 0x3F */);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 5) opts.biff = 2;\n\tvar cell = parse_XLSCell(blob, 7, opts);\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 7, opts);\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r/*:number*/, c/*:number*/, val/*:number*/, ixfe, ifmt) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c, ixfe||0, ifmt||0);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 7, opts);\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r/*:number*/, c/*:number*/, val/*:number*/, ixfe/*:number*/, ifmt/*:number*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c, ixfe||0, ifmt||0);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\nfunction parse_BIFF2BOOLERR(blob, length, opts) {\n\tvar bestart = blob.l + 7;\n\tvar cell = parse_XLSCell(blob, 6, opts);\n\tblob.l = bestart;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6, opts);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF4SheetInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(4);\n\tvar cch = blob.read_shift(1), name = blob.read_shift(cch, \"sbcs\");\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { flags: flags, name:name };\n}var DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/(function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n\t0x01:   437,           0x02:   850,\n\t0x03:  1252,           0x04: 10000,\n\t0x64:   852,           0x65:   866,\n\t0x66:   865,           0x67:   861,\n\t0x68:   895,           0x69:   620,\n\t0x6A:   737,           0x6B:   857,\n\t0x78:   950,           0x79:   949,\n\t0x7A:   936,           0x7B:   932,\n\t0x7C:   874,           0x7D:  1255,\n\t0x7E:  1256,           0x96: 10007,\n\t0x97: 10029,           0x98: 10006,\n\t0xC8:  1250,           0xC9:  1251,\n\t0xCA:  1254,           0xCB:  1253,\n\n\t/* shapefile DBF extension */\n\t0x00: 20127,           0x08:   865,\n\t0x09:   437,           0x0A:   850,\n\t0x0B:   437,           0x0D:   437,\n\t0x0E:   850,           0x0F:   437,\n\t0x10:   850,           0x11:   437,\n\t0x12:   850,           0x13:   932,\n\t0x14:   850,           0x15:   437,\n\t0x16:   850,           0x17:   865,\n\t0x18:   437,           0x19:   437,\n\t0x1A:   850,           0x1B:   437,\n\t0x1C:   863,           0x1D:   850,\n\t0x1F:   852,           0x22:   852,\n\t0x23:   852,           0x24:   860,\n\t0x25:   850,           0x26:   866,\n\t0x37:   850,           0x40:   852,\n\t0x4D:   936,           0x4E:   949,\n\t0x4F:   950,           0x50:   874,\n\t0x57:  1252,           0x58:  1252,\n\t0x59:  1252,           0x6C:   863,\n\t0x86:   737,           0x87:   852,\n\t0x88:   857,           0xCC:  1257,\n\n\t0xFF: 16969\n};\nvar dbf_reverse_map = evert({\n\t0x01:   437,           0x02:   850,\n\t0x03:  1252,           0x04: 10000,\n\t0x64:   852,           0x65:   866,\n\t0x66:   865,           0x67:   861,\n\t0x68:   895,           0x69:   620,\n\t0x6A:   737,           0x6B:   857,\n\t0x78:   950,           0x79:   949,\n\t0x7A:   936,           0x7B:   932,\n\t0x7C:   874,           0x7D:  1255,\n\t0x7E:  1256,           0x96: 10007,\n\t0x97: 10029,           0x98: 10006,\n\t0xC8:  1250,           0xC9:  1251,\n\t0xCA:  1254,           0xCB:  1253,\n\t0x00: 20127\n});\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts)/*:AOA*/ {\n\tvar out/*:AOA*/ = [];\n\tvar d/*:Block*/ = (new_raw_buf(1)/*:any*/);\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64_decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = !!(ft & 0x88);\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: break; // dBASE II\n\t\tcase 0x03: break; // dBASE III\n\t\tcase 0x30: vfp = true; memo = true; break; // VFP\n\t\tcase 0x31: vfp = true; memo = true; break; // VFP with autoincrement\n\t\t// 0x43 dBASE IV SQL table files\n\t\t// 0x63 dBASE IV SQL system files\n\t\tcase 0x83: break; // dBASE III with memo\n\t\tcase 0x8B: break; // dBASE IV with memo\n\t\tcase 0x8C: l7 = true; break; // dBASE Level 7 with memo\n\t\t// case 0xCB dBASE IV SQL table files with memo\n\t\tcase 0xF5: break; // FoxPro 2.x with memo\n\t\t// case 0xFB FoxBASE\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\n\tvar nrow = 0, fpos = 0x0209;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\td.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(nrow > 1048576) nrow = 1e6;\n\n\tif(ft != 0x02) fpos = d.read_shift(2); // header length\n\tvar rlen = d.read_shift(2); // record length\n\n\tvar /*flags = 0,*/ current_cp = opts.codepage || 1252;\n\tif(ft != 0x02) { // 20 reserved bytes\n\t\td.l+=16;\n\t\t/*flags = */d.read_shift(1);\n\t\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t\t/* codepage present in FoxPro and dBASE Level 7 */\n\t\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\t\td.l+=1;\n\n\t\td.l+=2;\n\t}\n\tif(l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n/*:: type DBFField = { name:string; len:number; type:string; } */\n\tvar fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);\n\tvar hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));\n\tvar ww = l7 ? 32 : 11;\n\twhile(d.l < hend && d[d.l] != 0x0d) {\n\t\tfield = ({}/*:any*/);\n\t\tfield.name = (typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)) : a2s(d.slice(d.l, d.l + ww))).replace(/[\\u0000\\r\\n][\\S\\s]*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // Double (VFP) / Binary (dBASE L7)\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General (FoxPro and dBASE L7)\n\t\t\tcase 'P': // Picture (FoxPro and dBASE L7)\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase '+': // Autoincrement (dBASE L7 only)\n\t\t\tcase '0': // _NullFlags (VFP only)\n\t\t\tcase '@': // Timestamp (dBASE L7 only)\n\t\t\tcase 'C': // Character (dBASE II)\n\t\t\tcase 'D': // Date (dBASE III)\n\t\t\tcase 'F': // Float (dBASE IV)\n\t\t\tcase 'I': // Long (VFP and dBASE L7)\n\t\t\tcase 'L': // Logical (dBASE II)\n\t\t\tcase 'M': // Memo (dBASE III)\n\t\t\tcase 'N': // Number (dBASE II)\n\t\t\tcase 'O': // Double (dBASE L7 only)\n\t\t\tcase 'T': // Datetime (VFP only)\n\t\t\tcase 'Y': // Currency (VFP only)\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\td.l = fpos;\n\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) {\n\t\t\t// TODO: record marked as deleted -- create a hidden row?\n\t\t\td.l+=rlen;\n\t\t\tcontinue;\n\t\t}\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, dd) : a2s(dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\t// NOTE: it is conventional to write '  /  /  ' for empty dates\n\t\t\t\t\tif(s.trim().length) out[R][C] = s.replace(/([^\\s])\\s+$/,\"$1\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) {\n\t\t\t\t\t\tout[R][C] = new Date(Date.UTC(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8), 0, 0, 0, 0));\n\t\t\t\t\t\tif(!(opts && opts.UTC)) { out[R][C] = utc_to_local(out[R][C]); }\n\t\t\t\t\t}\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.trim().toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase '': case '\\x00': case '?': break;\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\ts = s.replace(/\\u0000/g,\"\").trim();\n\t\t\t\t\t// NOTE: dBASE II interprets \"  .  \" as 0\n\t\t\t\t\tif(s && s != \".\") out[R][C] = +s || 0; break;\n\t\t\t\tcase '@':\n\t\t\t\t\t// NOTE: dBASE specs appear to be incorrect\n\t\t\t\t\tout[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'T': {\n\t\t\t\t\tvar hi = dd.read_shift(4), lo = dd.read_shift(4);\n\t\t\t\t\tif(hi == 0 && lo == 0) break;\n\t\t\t\t\tout[R][C] = new Date((hi - 0x253D8C) * 0x5265C00 + lo);\n\t\t\t\t\tif(!(opts && opts.UTC)) out[R][C] = utc_to_local(out[R][C]);\n\t\t\t\t} break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\topts.DBF = fields;\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\tvar ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n\tws[\"!cols\"] = o.DBF.map(function(field) { return {\n\t\twch: field.len,\n\t\tDBF: field\n\t};});\n\tdelete o.DBF;\n\treturn ws;\n}\n\nfunction dbf_to_workbook(buf, opts)/*:Workbook*/ {\n\ttry {\n\t\tvar o = sheet_to_workbook(dbf_to_sheet(buf, opts), opts);\n\t\to.bookType = \"dbf\";\n\t\treturn o;\n\t} catch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\tif(!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to DBF\");\n\tvar o = opts || {};\n\tvar old_cp = current_codepage;\n\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1), cols = ws[\"!cols\"] || [];\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }\n\t\tif(headers[i] == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes/*:Array<string>*/ = [];\n\tvar colwidths/*:Array<number>*/ = [];\n\tvar coldecimals/*:Array<number>*/ = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar guess = '', _guess = '', maxlen = 0;\n\t\tvar col/*:Array<any>*/ = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\t/* TODO: cache the values instead of encoding twice */\n\t\t\tmaxlen = Math.max(maxlen, (typeof $cptable !== \"undefined\" && typeof col[j] == \"string\" ? $cptable.utils.encode(current_ansi, col[j]): String(col[j])).length);\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\t//if(guess == 'C') break;\n\t\t}\n\t\tif(maxlen > 250) maxlen = 250;\n\t\t_guess = ((cols[i]||{}).DBF||{}).type;\n\t\t/* TODO: more fine grained control over DBF type resolution */\n\t\tif(_guess == 'C') {\n\t\t\tif(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n\t\t}\n\t\tif(guess == 'B' && _guess == 'N') {\n\t\t\tguess = 'N';\n\t\t\tcoldecimals[i] = cols[i].DBF.dec;\n\t\t\tmaxlen = cols[i].DBF.len;\n\t\t}\n\t\tcolwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);\n\t\trlen += colwidths[i];\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\tvar cp = +dbf_reverse_map[/*::String(*/current_codepage/*::)*/] || 0x03;\n\th.write_shift(4, 0x00000000 | (cp<<8));\n\tif(dbf_codepage_map[cp] != +o.codepage) {\n\t\tif(o.codepage) console.error(\"DBF Unsupported codepage \" + current_codepage + \", using 1252\");\n\t\tcurrent_codepage = 1252;\n\t}\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\t/* TODO: test how applications handle non-ASCII field names */\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, coldecimals[i] || 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += (colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'N':\n\t\t\t\t\tvar _n = \"0\";\n\t\t\t\t\tif(typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j]||0);\n\t\t\t\t\tif(_n.length > colwidths[j]) _n = _n.slice(0, colwidths[j]); // addresses decimal > width\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);\n\t\t\t\t\trout.write_shift(1, _n, \"sbcs\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _l = rout.l;\n\t\t\t\t\tvar _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n\t\t\t\t\trout.write_shift(1, _s, \"cpstr\");\n\t\t\t\t\t_l += colwidths[j] - rout.l;\n\t\t\t\t\tfor(hcnt=0; hcnt < _l; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tcurrent_codepage = old_cp;\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = /*#__PURE__*/(function() {\n\t/* TODO: stress test sequences */\n\tvar sylk_escapes = ({\n\t\tAA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,\n\t\tAE:'È', BE:'É', CE:'Ê',         HE:'Ë',\n\t\tAI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',\n\t\tAO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',\n\t\tAU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',\n\t\tAa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,\n\t\tAe:'è', Be:'é', Ce:'ê',         He:'ë',\n\t\tAi:'ì', Bi:'í', Ci:'î',         Hi:'ï',\n\t\tAo:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',\n\t\tAu:'ù', Bu:'ú', Cu:'û',         Hu:'ü',\n\t\tKC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',\n\t\tDN:209, Dn:241, Hy:255,\n\t\tS:169,  c:170,  R:174,  \"B \":180,\n\t\t0:176,  1:177,  2:178,\n\t\t3:179,  5:181,  6:182,\n\t\t7:183,  Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,\n\t\t\"!\":161, '\"':162, \"#\":163, \"(\":164, \"%\":165, \"'\":167, \"H \":168,\n\t\t\"+\":171, \";\":187, \"<\":188, \"=\":189, \">\":190, \"?\":191, \"{\":223\n\t}/*:any*/);\n\tvar sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\").replace(\"{\", \"\\\\{\") + \"|\\\\|)\", \"gm\");\n\ttry {\n\t\tsylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\") + \"|\\\\|)\", \"gm\");\n\t} catch(e) {}\n\tvar sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == \"number\" ? _getansi(o) : o; };\n\tvar decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };\n\tsylk_escapes[\"|\"] = 254;\n\t/* TODO: evert the escape map */\n\tvar encode_sylk_str = function($$) { return $$.replace(/\\n/g, \"\\x1b :\").replace(/\\r/g, \"\\x1b =\"); };\n\t/* https://oss.sheetjs.com/notes/sylk/ for more details */\n\tfunction sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];\n\t\tvar formats/*:Array<string>*/ = [];\n\t\tvar next_cell_format/*:string|null*/ = null;\n\t\tvar sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];\n\t\tvar Mval = 0, j;\n\t\tvar wb = { Workbook: { WBProps: {}, Names: [] } };\n\t\tif(+opts.codepage >= 0) set_cp(+opts.codepage);\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function(x) { return x.replace(/\\u0000/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': /* workbook options */\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'V': {\n\t\t\t\t\tvar d1904 = parseInt(record[rj].slice(1), 10);\n\t\t\t\t\t// NOTE: it is technically an error if d1904 >= 5 or < 0\n\t\t\t\t\tif(d1904 >= 1 && d1904 <= 4) wb.Workbook.WBProps.date1904 = true;\n\t\t\t\t} break;\n\t\t\t} break;\n\t\t\tcase 'W': break; /* window */\n\t\t\tcase 'P':\n\t\t\t\tswitch(record[1].charAt(0)){\n\t\t\t\t\tcase 'P': formats.push(rstr.slice(3).replace(/;;/g, \";\")); break;\n\t\t\t\t} break;\n\t\t\tcase 'NN': { /* defined name */\n\t\t\t\tvar nn = {Sheet: 0};\n\t\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\t\tcase 'N': nn.Name = record[rj].slice(1); break;\n\t\t\t\t\tcase 'E': nn.Ref = (opts && opts.sheet || \"Sheet1\") + \"!\" + rc_to_a1(record[rj].slice(1)); break;\n\t\t\t\t}\n\t\t\t\twb.Workbook.Names.push(nn);\n\t\t\t} break;\n\t\t\t// case 'NE': // ??\n\t\t\t// case 'NU': // ??\n\t\t\tcase 'C': /* cell */\n\t\t\tvar C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1, formula = \"\", cell_t = \"z\";\n\t\t\tvar cmnt = \"\";\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'A': cmnt = record[rj].slice(1); break; // TODO: comment\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1), 10)-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') { val = val.slice(1,val.length - 1); cell_t = \"s\"; }\n\t\t\t\t\telse if(val === 'TRUE' || val === 'FALSE') { val = val === 'TRUE'; cell_t = \"b\"; }\n\t\t\t\t\telse if(val.charAt(0) == \"#\" && RBErr[val] != null) { cell_t = \"e\"; val = RBErr[val]; }\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val); cell_t = \"n\";\n\t\t\t\t\t\tif(next_cell_format !== null && fmt_is_date(next_cell_format) && opts.cellDates) {\n\t\t\t\t\t\t\tval = numdate(wb.Workbook.WBProps.date1904 ? val + 1462 : val); cell_t = typeof val == \"number\" ? \"n\" : \"d\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof $cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tC_seen_E = true;\n\t\t\t\t\tformula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tC_seen_S = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G': break; // unknown\n\t\t\t\tcase 'R': _R = parseInt(record[rj].slice(1), 10)-1; break;\n\t\t\t\tcase 'C': _C = parseInt(record[rj].slice(1), 10)-1; break;\n\t\t\t\t// case 'P': // ??\n\t\t\t\t// case 'D': // ??\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) {\n\t\t\t\tif(!arr[R][C]) arr[R][C] = { t: cell_t, v: val };\n\t\t\t\telse { arr[R][C].t = cell_t; arr[R][C].v = val; }\n\t\t\t\tif(next_cell_format) arr[R][C].z = next_cell_format;\n\t\t\t\tif(opts.cellText !== false && next_cell_format) arr[R][C].w = SSF_format(arr[R][C].z, arr[R][C].v, { date1904: wb.Workbook.WBProps.date1904 });\n\t\t\t\tnext_cell_format = null;\n\t\t\t}\n\t\t\tif(C_seen_S) {\n\t\t\t\tif(C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n\t\t\t\tvar shrbase = _R > -1 && arr[_R][_C];\n\t\t\t\tif(!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n\t\t\t\tformula = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});\n\t\t\t}\n\t\t\tif(formula) {\n\t\t\t\tif(!arr[R][C]) arr[R][C] = { t: 'n', f: formula };\n\t\t\t\telse arr[R][C].f = formula;\n\t\t\t}\n\t\t\tif(cmnt) {\n\t\t\t\tif(!arr[R][C]) arr[R][C] = { t: 'z' };\n\t\t\t\tarr[R][C].c = [{a:\"SheetJSYLK\", t: cmnt}];\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'F': /* Format */\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1), 10)-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1), 10) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1), 10)];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval};\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1), 10)-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\t// case 'K': // ??\n\t\t\t\t// case 'E': // ??\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tcolinfo.forEach(function(col) { process_col(col); });\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht, wb];\n\t}\n\n\tfunction sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1], wb = aoasht[2];\n\t\tvar _opts = dup(opts); _opts.date1904 = (((wb||{}).Workbook || {}).WBProps || {}).date1904;\n\t\tvar o = aoa_to_sheet(aoa, _opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\tvar outwb = sheet_to_workbook(o, opts);\n\t\tkeys(wb).forEach(function(k) { outwb[k] = wb[k]; });\n\t\toutwb.bookType = \"sylk\";\n\t\treturn outwb;\n\t}\n\n\tfunction write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*/, opts, date1904/*:boolean*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || BErr[cell.v] || cell.v; break;\n\t\t\tcase 'd': o += datenum(parseDate(cell.v, date1904), date1904); break;\n\t\t\tcase 's': o += '\"' + (cell.v == null ? \"\" : String(cell.v)).replace(/\"/g,\"\").replace(/;/g, \";;\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cmnt_sylk(cmnt/*:Comment*/, R/*:number*/, C/*:number*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";A\";\n\t\t/* TODO: max length? */\n\t\to += encode_sylk_str(cmnt.map(function(c) { return c.t; }).join(\"\"));\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/, wb/*:?WorkBook*/)/*:string*/ {\n\t\tif(!opts) opts = {}; opts._formats = [\"General\"];\n\t\t/* TODO: codepage */\n\t\tvar preamble/*:Array<string>*/ = [\"ID;PSheetJS;N;E\"], o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']||\"A1\"), cell/*:Cell*/;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar RS = \"\\r\\n\";\n\t\tvar d1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\n\t\tvar _lastfmt = \"General\";\n\t\tpreamble.push(\"P;PGeneral\");\n\t\t/* Excel has been inconsistent in comment placement */\n\t\tvar R = r.s.r, C = r.s.c, p = [];\n\t\tif(ws[\"!ref\"]) for(R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tif(dense && !ws[\"!data\"][R]) continue;\n\t\t\tp = [];\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n\t\t\t\tif(!cell || !cell.c) continue;\n\t\t\t\tp.push(write_ws_cmnt_sylk(cell.c, R, C));\n\t\t\t}\n\t\t\tif(p.length) o.push(p.join(RS));\n\t\t}\n\t\tif(ws[\"!ref\"]) for(R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tif(dense && !ws[\"!data\"][R]) continue;\n\t\t\tp = [];\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\tif((cell.z||(cell.t == \"d\" ? table_fmt[14] : \"General\")) != _lastfmt) {\n\t\t\t\t\tvar ifmt = opts._formats.indexOf(cell.z);\n\t\t\t\t\tif(ifmt == -1) { opts._formats.push(cell.z); ifmt = opts._formats.length - 1; preamble.push(\"P;P\" + cell.z.replace(/;/g, \";;\")); }\n\t\t\t\t\tp.push(\"F;P\" + ifmt + \";Y\" + (R+1) + \";X\" + (C+1));\n\t\t\t\t}\n\t\t\t\tp.push(write_ws_cell_sylk(cell, ws, R, C, opts, d1904));\n\t\t\t}\n\t\t\to.push(p.join(RS));\n\t\t}\n\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tif(ws[\"!ref\"]) preamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tpreamble.push(\"O;L;D;B\" + (d1904 ? \";V4\" : \"\") + \";K47;G100 0.001\");\n\n\t\tdelete opts._formats;\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = /*#__PURE__*/(function() {\n\tfunction dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri] || \"\";\n\t\t\twhile(((data.match(/[\"]/g)||[]).length & 1) && ri < records.length - 1) data += \"\\n\" + records[++ri];\n\t\t\tdata = data.trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) {\n\t\t\t\t\t\tarr[R][C] = parseDate(value);\n\t\t\t\t\t\tif(!(opts && opts.UTC)) { arr[R][C] = utc_to_local(arr[R][C]); }\n\t\t\t\t\t}\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tdata = data.replace(/\"\"/g, '\"');\n\t\t\t\t\tif(DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\t\tvar o = sheet_to_workbook(dif_to_sheet(str, opts), opts);\n\t\to.bookType = \"dif\";\n\t\treturn o;\n\t}\n\n\tfunction make_value(v/*:number*/, s/*:string*/)/*:string*/ { return \"0,\" + String(v) + \"\\r\\n\" + s; }\n\tfunction make_value_str(s/*:string*/)/*:string*/ { return \"1,0\\r\\n\\\"\" + s.replace(/\"/g,'\"\"') + '\"'; }\n\tfunction sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar _DIF_XL = DIF_XL;\n\t\tif(!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to DIF\");\n\t\tvar r = safe_decode_range(ws['!ref']);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar o/*:Array<string>*/ = [\n\t\t\t\"TABLE\\r\\n0,1\\r\\n\\\"sheetjs\\\"\\r\\n\",\n\t\t\t\"VECTORS\\r\\n0,\" + (r.e.r - r.s.r + 1) + \"\\r\\n\\\"\\\"\\r\\n\",\n\t\t\t\"TUPLES\\r\\n0,\" + (r.e.c - r.s.c + 1) + \"\\r\\n\\\"\\\"\\r\\n\",\n\t\t\t\"DATA\\r\\n0,0\\r\\n\\\"\\\"\\r\\n\"\n\t\t];\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar row = dense ? ws[\"!data\"][R] : [];\n\t\t\tvar p = \"-1,0\\r\\nBOT\\r\\n\";\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar cell/*:Cell*/ = dense ? (row && row[C]) : ws[encode_cell({r:R,c:C})];\n\t\t\t\tif(cell == null) { p +=(\"1,0\\r\\n\\\"\\\"\\r\\n\"); continue;}\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(_DIF_XL) {\n\t\t\t\t\t\t\tif(cell.w != null) p +=(\"0,\" + cell.w + \"\\r\\nV\");\n\t\t\t\t\t\t\telse if(cell.v != null) p +=(make_value(cell.v, \"V\")); // TODO: should this call SSF_format?\n\t\t\t\t\t\t\telse if(cell.f != null && !cell.F) p +=(make_value_str(\"=\" + cell.f));\n\t\t\t\t\t\t\telse p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(cell.v == null) p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t\t\t\telse p +=(make_value(cell.v, \"V\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tp +=(cell.v ? make_value(1, \"TRUE\") : make_value(0, \"FALSE\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tp +=(make_value_str((!_DIF_XL || isNaN(+cell.v)) ? cell.v : '=\"' + cell.v + '\"'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tif(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\tif(_DIF_XL) p +=(make_value(cell.w, \"V\"));\n\t\t\t\t\t\telse p +=(make_value_str(cell.w));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t}\n\t\t\t\tp += \"\\r\\n\";\n\t\t\t}\n\t\t\to.push(p);\n\t\t}\n\t\treturn o.join(\"\") + \"-1,0\\r\\nEOD\";\n\t}\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = /*#__PURE__*/(function() {\n\tfunction decode(s/*:string*/)/*:string*/ { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s/*:string*/)/*:string*/ { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = /*#__PURE__*/(function() {\n\tfunction set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {\n\t\tvar o = opts || {};\n\t\tvar arr/*:AOA*/ = ([]/*:any*/);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n\t\t0x2C: ',',\n\t\t0x09: \"\\t\",\n\t\t0x3B: ';',\n\t\t0x7C: '|'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n\t\t0x2C: 3,\n\t\t0x09: 2,\n\t\t0x3B: 1,\n\t\t0x7C: 0\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]] || 0x2C;\n\t}\n\n\tfunction dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = ({}/*:any*/);\n\t\tif(o.dense) ws[\"!data\"] = [];\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);\n\n\t\tif(str.slice(0,4) == \"sep=\") {\n\t\t\t// If the line ends in \\r\\n\n\t\t\tif(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(7);\n\t\t\t}\n\t\t\t// If line ends in \\r OR \\n\n\t\t\telse if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(6);\n\t\t\t}\n\t\t\telse sep = guess_sep(str.slice(0,1024));\n\t\t}\n\t\telse if(o && o.FS) sep = o.FS;\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);\n\t\tvar _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\t/* TODO: fuzzy parsers should pass back assumed number format */\n\t\t\tvar s = str.slice(start, end); if(s.slice(-1) == \"\\r\") s = s.slice(0, -1);\n\t\t\tvar cell = ({}/*:any*/);\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(o.cellText !== false) cell.w = s;\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 's'; cell.f = s.slice(1); cell.v = s; }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; cell.v = v; }\n\t\t\telse if(!isNaN((v = fuzzydate(s)).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\tif(_re && s.match(_re)){ var news=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); v = parseDate(news); if(o && o.UTC === false) v = utc_to_local(v); }\n\t\t\t\telse if(o && o.UTC === false) v = utc_to_local(v);\n\t\t\t\telse if(o.cellText !== false && o.dateNF) cell.w = SSF_format(cell.z, v);\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = v; }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(v); }\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1; startcc = str.charCodeAt(start);\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: if(startcc === 0x22) instr = !instr; break;\n\t\t\tcase 0x0d:\n\t\t\t\tif(instr) break;\n\t\t\t\tif(str.charCodeAt(end+1) == 0x0a) ++end;\n\t\t\t\t/* falls through */\n\t\t\tcase sepcc: case 0x0a: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tif(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n\t\tif(opts.FS) return dsv_to_sheet_str(str, opts);\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64_decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n\t\t\t\telse if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);\n\t\telse if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar o/*:Array<string>*/ = [];\n\t\tif(!ws[\"!ref\"]) return \"\";\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo/*:Array<string>*/ = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif((e.message.indexOf(\"SYLK bad record ID\") == -1) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\n\nvar WK_ = /*#__PURE__*/(function() {\n\tfunction lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFFFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = R.f && R.f(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d/*:RawData*/, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\t/* NOTE: this list intentionally starts at 1 */\n\tvar LOTUS_DATE_FMTS = [\n\t\t\"mmmm\",\n\t\t\"dd-mmm-yyyy\",\n\t\t\"dd-mmm\",\n\t\t\"mmm-yyyy\",\n\t\t\"@\", // \"text\"?\n\t\t\"mm/dd\",\n\t\t\"hh:mm:ss AM/PM\", // 7\n\t\t\"hh:mm AM/PM\",\n\t\t\"mm/dd/yyyy\",\n\t\t\"mm/dd\",\n\t\t\"hh:mm:ss\",\n\t\t\"hh:mm\" // 12\n\t];\n\n\tfunction lotus_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ({}/*:any*/), n = \"Sheet1\", next_n = \"\", sidx = 0;\n\t\tvar sheets = {}, snames = [], realnames = [], sdata = [];\n\t\tif(o.dense) sdata = s[\"!data\"] = [];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\t\tvar lastcell = {};\n\n\t\tif(d[4] == 0x51 && d[5] == 0x50 && d[6] == 0x57) return qpw_to_workbook_buf(d, opts);\n\t\tif(d[2] == 0x00) {\n\t\t\tif(d[3] == 0x08 || d[3] == 0x09) {\n\t\t\t\tif(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n\t\t\t}\n\t\t}\n\n\t\tif(d[2] == 0x02) {\n\t\t\to.Enum = WK1Enum;\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0x00: /* BOF */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0xFF: /* BOF (works 3+) */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\to.works = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0xDE: next_n = val; break; /* SHEETNAMELP */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\tif((!o.qpro && !o.works || RT == 0x33) && val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n\t\t\t\t\tif(o.works || o.works2) val[1].v = val[1].v.replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif((val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || LOTUS_DATE_FMTS[(val[2] & 0x0F)-1] || table_fmt[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].v = numdate(val[1].v); val[1].t = typeof val[1].v == \"number\" ? 'n' : 'd'; }\n\t\t\t\t\t}\n\n\t\t\t\t\tif(o.qpro) {\n\t\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\t\ts = ({}/*:any*/); if(o.dense) sdata = s[\"!data\"] = [];\n\t\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\t\tsidx = val[3]; n = next_n || \"Sheet\" + (sidx + 1); next_n = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tmpcell = o.dense ? (sdata[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];\n\t\t\t\t\tif(tmpcell) {\n\t\t\t\t\t\ttmpcell.t = val[1].t; tmpcell.v = val[1].v;\n\t\t\t\t\t\tif(val[1].z != null) tmpcell.z = val[1].z;\n\t\t\t\t\t\tif(val[1].f != null) tmpcell.f = val[1].f;\n\t\t\t\t\t\tlastcell = tmpcell;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!sdata[val[0].r]) sdata[val[0].r] = [];\n\t\t\t\t\t\tsdata[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tlastcell = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x5405: o.works2 = true; break;\n\t\t\t\tcase 0x5402: {\n\t\t\t\t\t/* TODO: enumerate all extended number formats */\n\t\t\t\t\tif(val == 0x14a1) {\n\t\t\t\t\t\tlastcell.z = \"hh:mm:ss\";\n\t\t\t\t\t\tif(o.cellDates && lastcell.t == \"n\") {\n\t\t\t\t\t\t\tlastcell.v = numdate(lastcell.v); lastcell.t = typeof lastcell.v == \"number\" ? 'n' : 'd';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t}}, o);\n\t\t} else if(d[2] == 0x1A || d[2] == 0x0E) {\n\t\t\to.Enum = WK3Enum;\n\t\t\tif(d[2] == 0x0E) { o.qpro = true; d.l = 0; }\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0xCC: n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tif(val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t// TODO: R9 appears to encode control codes this way -- verify against other versions\n\t\t\t\t\tval[1].v = val[1].v.replace(/\\x0F./g, function($$) { return String.fromCharCode($$.charCodeAt(1) - 0x20); }).replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\ts = ({}/*:any*/); if(o.dense) sdata = s[\"!data\"] = [];\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!sdata[val[0].r]) sdata[val[0].r] = [];\n\t\t\t\t\t\tsdata[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x1B: /* XFORMAT */\n\t\t\t\t\tif(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0601: /* SHEETINFOQP */\n\t\t\t\t\trealnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;\n\t\t\t\tdefault: break;\n\t\t\t}}, o);\n\t\t} else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[next_n || n] = s;\n\t\tsnames.push(next_n || n);\n\t\tif(!realnames.length) return { SheetNames: snames, Sheets: sheets };\n\t\tvar osheets = {}, rnames = [];\n\t\t/* TODO: verify no collisions */\n\t\tfor(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {\n\t\t\trnames.push(realnames[i] || snames[i]);\n\t\t\tosheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n\t\t} else {\n\t\t\trnames.push(realnames[i]);\n\t\t\tosheets[realnames[i]] = ({ \"!ref\": \"A1\" });\n\t\t}\n\t\treturn { SheetNames: rnames, Sheets: osheets };\n\t}\n\n\tfunction sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n\t\tvar ba = buf_array();\n\t\tif(!ws[\"!ref\"]) throw new Error(\"Cannot export empty sheet to WK1\");\n\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar cols = [];\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n\t\twrite_biff_rec(ba, 0x06, write_RANGE(range));\n\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\tvar rr = encode_row(R);\n\t\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[cols[C] + rr];\n\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t/* TODO: formula records */\n\t\t\t\tswitch(cell.t) {\n\t\t\t\tcase \"n\":\n\t\t\t\t\tif((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"d\":\n\t\t\t\t\tvar dc = datenum(cell.v);\n\t\t\t\t\tif((dc|0)==dc && dc >= -32768 && dc <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, {t:\"n\", v:dc, z:cell.z || table_fmt[14]}));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, {t:\"n\", v:dc, z:cell.z || table_fmt[14]}));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\twrite_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\tfunction book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n\t\tvar ba = buf_array();\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n\n\t\tfor(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n\n\t\tvar wsidx = 0;\n\t\tfor(i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\t\tvar dense = ws[\"!data\"] != null;\n\t\t\tvar cols = [];\n\t\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\t\tvar rr = encode_row(R);\n\t\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t\t/* TODO: FORMULA19 NUMBER18 records */\n\t\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\t\twrite_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\t\t/* TODO: max len? */\n\t\t\t\t\t\twrite_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t++wsidx;\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\n\tfunction write_BOF_WK1(v/*:number*/) {\n\t\tvar out = new_buf(2);\n\t\tout.write_shift(2, v);\n\t\treturn out;\n\t}\n\n\tfunction write_BOF_WK3(wb/*:Workbook*/) {\n\t\tvar out = new_buf(26);\n\t\tout.write_shift(2, 0x1000);\n\t\tout.write_shift(2, 0x0004);\n\t\tout.write_shift(4, 0x0000);\n\t\tvar rows = 0, cols = 0, wscnt = 0;\n\t\tfor(var i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar name = wb.SheetNames[i];\n\t\t\tvar ws = wb.Sheets[name];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\t++wscnt;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tif(rows < range.e.r) rows = range.e.r;\n\t\t\tif(cols < range.e.c) cols = range.e.c;\n\t\t}\n\t\tif(rows > 8191) rows = 8191;\n\t\tout.write_shift(2, rows);\n\t\tout.write_shift(1, wscnt);\n\t\tout.write_shift(1, cols);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(1, 0x01);\n\t\tout.write_shift(1, 0x02);\n\t\tout.write_shift(4, 0);\n\t\tout.write_shift(4, 0);\n\t\treturn out;\n\t}\n\n\tfunction parse_RANGE(blob, length, opts) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\tif(length == 8 && opts.qpro) {\n\t\t\to.s.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.s.r = blob.read_shift(2);\n\t\t\to.e.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.e.r = blob.read_shift(2);\n\t\t\treturn o;\n\t\t}\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\tfunction write_RANGE(range) {\n\t\tvar out = new_buf(8);\n\t\tout.write_shift(2, range.s.c);\n\t\tout.write_shift(2, range.s.r);\n\t\tout.write_shift(2, range.e.c);\n\t\tout.write_shift(2, range.e.r);\n\t\treturn out;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\to[3] = blob.read_shift(1);\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else if(opts.works) { // TODO: verify with more complex works3-4 examples\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t\to[2] = blob.read_shift(2);\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction get_wk1_fmt(cell)/*:number*/ {\n\t\t/* TODO: some fuzzy matching on the number format */\n\t\tif(cell.z && fmt_is_date(cell.z)) {\n\t\t\treturn 0xf0 | (LOTUS_DATE_FMTS.indexOf(cell.z) + 1 || 2);\n\t\t}\n\t\treturn 0xFF;\n\t}\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif((opts.vers & 0xFFFE) == 0x5120) { // WQ1 / WQ2\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL(R, C, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(7 + s.length);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, 0x27); // ??\n\t\tfor(var i = 0; i < o.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\tfunction parse_STRING(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\tfunction write_INTEGER(R, C, cell) {\n\t\tvar o = new_buf(7);\n\t\to.write_shift(1, get_wk1_fmt(cell));\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(2, cell.v, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\tfunction write_NUMBER(R, C, cell) {\n\t\tvar o = new_buf(13);\n\t\to.write_shift(1, get_wk1_fmt(cell));\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(8, cell.v, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\twk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction wk1_parse_rc(B, V, col) {\n\t\tvar rel = V & 0x8000;\n\t\tV &= ~0x8000;\n\t\tV = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);\n\t\treturn (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n\t}\n\t/* var oprec = [\n\t\t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n\t\t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n\t]; */\n\t/* TODO: flesh out */\n\tvar FuncTab = {\n\t\t0x1F: [\"NA\", 0],\n\t\t// 0x20: [\"ERR\", 0],\n\t\t0x21: [\"ABS\", 1],\n\t\t0x22: [\"TRUNC\", 1],\n\t\t0x23: [\"SQRT\", 1],\n\t\t0x24: [\"LOG\", 1],\n\t\t0x25: [\"LN\", 1],\n\t\t0x26: [\"PI\", 0],\n\t\t0x27: [\"SIN\", 1],\n\t\t0x28: [\"COS\", 1],\n\t\t0x29: [\"TAN\", 1],\n\t\t0x2A: [\"ATAN2\", 2],\n\t\t0x2B: [\"ATAN\", 1],\n\t\t0x2C: [\"ASIN\", 1],\n\t\t0x2D: [\"ACOS\", 1],\n\t\t0x2E: [\"EXP\", 1],\n\t\t0x2F: [\"MOD\", 2],\n\t\t// 0x30\n\t\t0x31: [\"ISNA\", 1],\n\t\t0x32: [\"ISERR\", 1],\n\t\t0x33: [\"FALSE\", 0],\n\t\t0x34: [\"TRUE\", 0],\n\t\t0x35: [\"RAND\", 0],\n\t\t0x36: [\"DATE\", 3],\n\t\t// 0x37 NOW\n\t\t// 0x38 PMT\n\t\t// 0x39 PV\n\t\t// 0x3A FV\n\t\t// 0x3B IF\n\t\t// 0x3C DAY\n\t\t// 0x3D MONTH\n\t\t// 0x3E YEAR\n\t\t0x3F: [\"ROUND\", 2],\n\t\t0x40: [\"TIME\", 3],\n\t\t// 0x41 HOUR\n\t\t// 0x42 MINUTE\n\t\t// 0x43 SECOND\n\t\t0x44: [\"ISNUMBER\", 1],\n\t\t0x45: [\"ISTEXT\", 1],\n\t\t0x46: [\"LEN\", 1],\n\t\t0x47: [\"VALUE\", 1],\n\t\t// 0x48: [\"FIXED\", ?? 1],\n\t\t0x49: [\"MID\", 3],\n\t\t0x4A: [\"CHAR\", 1],\n\t\t// 0x4B\n\t\t// 0x4C FIND\n\t\t// 0x4D DATEVALUE\n\t\t// 0x4E TIMEVALUE\n\t\t// 0x4F CELL\n\t\t0x50: [\"SUM\", 69],\n\t\t0x51: [\"AVERAGEA\", 69],\n\t\t0x52: [\"COUNTA\", 69],\n\t\t0x53: [\"MINA\", 69],\n\t\t0x54: [\"MAXA\", 69],\n\t\t// 0x55 VLOOKUP\n\t\t// 0x56 NPV\n\t\t// 0x57 VAR\n\t\t// 0x58 STD\n\t\t// 0x59 IRR\n\t\t// 0x5A HLOOKUP\n\t\t// 0x5B DSUM\n\t\t// 0x5C DAVERAGE\n\t\t// 0x5D DCOUNTA\n\t\t// 0x5E DMIN\n\t\t// 0x5F DMAX\n\t\t// 0x60 DVARP\n\t\t// 0x61 DSTDEVP\n\t\t// 0x62 INDEX\n\t\t// 0x63 COLS\n\t\t// 0x64 ROWS\n\t\t// 0x65 REPEAT\n\t\t0x66: [\"UPPER\", 1],\n\t\t0x67: [\"LOWER\", 1],\n\t\t// 0x68 LEFT\n\t\t// 0x69 RIGHT\n\t\t// 0x6A REPLACE\n\t\t0x6B: [\"PROPER\", 1],\n\t\t// 0x6C CELL\n\t\t0x6D: [\"TRIM\", 1],\n\t\t// 0x6E CLEAN\n\t\t0x6F: [\"T\", 1]\n\t\t// 0x70 V\n\t};\n\tvar BinOpTab = [\n\t\t  \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t  \"\",  \"+\",  \"-\",  \"*\",  \"/\",  \"^\",  \"=\", \"<>\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\"<=\", \">=\",  \"<\",  \">\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t \"&\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\"  // eslint-disable-line no-mixed-spaces-and-tabs\n\t];\n\n\tfunction wk1_fmla_to_csf(blob, o) {\n\t\tprep_blob(blob, 0);\n\t\tvar out = [], argc = 0, R = \"\", C = \"\", argL = \"\", argR = \"\";\n\t\twhile(blob.l < blob.length) {\n\t\t\tvar cc = blob[blob.l++];\n\t\t\tswitch(cc) {\n\t\t\t\tcase 0x00: out.push(blob.read_shift(8, 'f')); break;\n\t\t\t\tcase 0x01: {\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x02: {\n\t\t\t\t\tvar c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tvar r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(c + r + \":\" + C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x03:\n\t\t\t\t\tif(blob.l < blob.length) { console.error(\"WK1 premature formula end\"); return; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: out.push(\"(\" + out.pop() + \")\"); break;\n\t\t\t\tcase 0x05: out.push(blob.read_shift(2)); break;\n\t\t\t\tcase 0x06: {\n\t\t\t\t\t/* TODO: text encoding */\n\t\t\t\t\tvar Z = \"\"; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);\n\t\t\t\t\tout.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x08: out.push(\"-\" + out.pop()); break;\n\t\t\t\tcase 0x17: out.push(\"+\" + out.pop()); break;\n\t\t\t\tcase 0x16: out.push(\"NOT(\" + out.pop() + \")\"); break;\n\n\t\t\t\tcase 0x14: case 0x15: {\n\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\tout.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n\t\t\t\t} break;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif(cc < 0x20 && BinOpTab[cc]) {\n\t\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\t\tout.push(argL + BinOpTab[cc] + argR);\n\t\t\t\t\t} else if(FuncTab[cc]) {\n\t\t\t\t\t\targc = FuncTab[cc][1];\n\t\t\t\t\t\tif(argc == 69) argc = blob[blob.l++];\n\t\t\t\t\t\tif(argc > out.length) { console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\"); return; }\n\t\t\t\t\t\tvar args = out.slice(-argc);\n\t\t\t\t\t\tout.length -= argc;\n\t\t\t\t\t\tout.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n\t\t\t\t\t// possible future functions ??\n\t\t\t\t\telse return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n\t\t\t}\n\t\t}\n\t\tif(out.length == 1) o[1].f = \"\" + out[0];\n\t\telse console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n\t}\n\n\n\tfunction parse_cell_3(blob/*::, length*/) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL_16(R, C, wsidx, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(6 + s.length);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\to.write_shift(1, 0x27);\n\t\tfor(var i = 0; i < s.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 0: v = (v >> 3) * 5000; break;\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 3: v = (v >> 3) / 200; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 5: v = (v >> 3) / 20000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) {\n\t\t\tif(v1 === 0 && v2 === 0xC0000000) { o[1].t = \"e\"; o[1].v = 0x0F; } // ERR -> #VALUE!\n\t\t\telse if(v1 === 0 && v2 === 0xD0000000) { o[1].t = \"e\"; o[1].v = 0x2A; } // NA -> #N/A\n\t\t\telse o[1].v = 0;\n\t\t\treturn o;\n\t\t}\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));\n\t\treturn o;\n\t}\n\tfunction write_NUMBER_17(R, C, wsidx, v) {\n\t\tvar o = new_buf(14);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\tif(v == 0) {\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(2, 0xFFFF);\n\t\t\treturn o;\n\t\t}\n\t\tvar s = 0, e = 0, v1 = 0, v2 = 0;\n\t\tif(v < 0) { s = 1; v = -v; }\n\t\te = Math.log2(v) | 0;\n\t\tv /= Math.pow(2, e-31);\n\t\tv2 = (v)>>>0;\n\t\tif((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }\n\t\tv -= v2;\n\t\tv2 |= 0x80000000;\n\t\tv2 >>>= 0;\n\t\tv *= Math.pow(2, 32);\n\t\tv1 = v>>>0;\n\t\to.write_shift(4, v1);\n\t\to.write_shift(4, v2);\n\t\te += 0x3FFF + (s ? 0x8000 : 0);\n\t\to.write_shift(2, e);\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: WK3 formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 12);\n\t\tblob.l += length - 12; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETNAMECS(blob, length) {\n\t\treturn blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n\t}\n\n\tfunction parse_SHEETNAMELP(blob, length) {\n\t\tvar len = blob[blob.l++];\n\t\tif(len > length - 1) len = length - 1;\n\t\tvar o = \"\"; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETINFOQP(blob, length, opts) {\n\t\tif(!opts.qpro || length < 21) return;\n\t\tvar id = blob.read_shift(1);\n\t\tblob.l += 17;\n\t\tblob.l += 1; //var len = blob.read_shift(1);\n\t\tblob.l += 2;\n\t\tvar nm = blob.read_shift(length - 21, 'cstr');\n\t\treturn [id, nm];\n\t}\n\n\tfunction parse_XFORMAT(blob, length) {\n\t\tvar o = {}, tgt = blob.l + length;\n\t\twhile(blob.l < tgt) {\n\t\t\tvar dt = blob.read_shift(2);\n\t\t\tif(dt == 0x36b0) {\n\t\t\t\to[dt] = [0, \"\"];\n\t\t\t\to[dt][0] = blob.read_shift(2);\n\t\t\t\twhile(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;\n\t\t\t}\n\t\t\t// TODO: 0x3a99 ??\n\t\t}\n\t\treturn o;\n\t}\n\tfunction write_XFORMAT_SHEETNAME(name, wsidx) {\n\t\tvar out = new_buf(5 + name.length);\n\t\tout.write_shift(2, 0x36b0);\n\t\tout.write_shift(2, wsidx);\n\t\tfor(var i = 0; i < name.length; ++i) {\n\t\t\tvar cc = name.charCodeAt(i);\n\t\t\tout[out.l++] = cc > 0x7F ? 0x5F : cc;\n\t\t}\n\t\tout[out.l++] = 0;\n\t\treturn out;\n\t}\n\n\tvar WK1Enum = {\n\t\t0x0000: { n:\"BOF\", f:parseuint16 },\n\t\t0x0001: { n:\"EOF\" },\n\t\t0x0002: { n:\"CALCMODE\" },\n\t\t0x0003: { n:\"CALCORDER\" },\n\t\t0x0004: { n:\"SPLIT\" },\n\t\t0x0005: { n:\"SYNC\" },\n\t\t0x0006: { n:\"RANGE\", f:parse_RANGE },\n\t\t0x0007: { n:\"WINDOW1\" },\n\t\t0x0008: { n:\"COLW1\" },\n\t\t0x0009: { n:\"WINTWO\" },\n\t\t0x000A: { n:\"COLW2\" },\n\t\t0x000B: { n:\"NAME\" },\n\t\t0x000C: { n:\"BLANK\" },\n\t\t0x000D: { n:\"INTEGER\", f:parse_INTEGER },\n\t\t0x000E: { n:\"NUMBER\", f:parse_NUMBER },\n\t\t0x000F: { n:\"LABEL\", f:parse_LABEL },\n\t\t0x0010: { n:\"FORMULA\", f:parse_FORMULA },\n\t\t0x0018: { n:\"TABLE\" },\n\t\t0x0019: { n:\"ORANGE\" },\n\t\t0x001A: { n:\"PRANGE\" },\n\t\t0x001B: { n:\"SRANGE\" },\n\t\t0x001C: { n:\"FRANGE\" },\n\t\t0x001D: { n:\"KRANGE1\" },\n\t\t0x0020: { n:\"HRANGE\" },\n\t\t0x0023: { n:\"KRANGE2\" },\n\t\t0x0024: { n:\"PROTEC\" },\n\t\t0x0025: { n:\"FOOTER\" },\n\t\t0x0026: { n:\"HEADER\" },\n\t\t0x0027: { n:\"SETUP\" },\n\t\t0x0028: { n:\"MARGINS\" },\n\t\t0x0029: { n:\"LABELFMT\" },\n\t\t0x002A: { n:\"TITLES\" },\n\t\t0x002B: { n:\"SHEETJS\" },\n\t\t0x002D: { n:\"GRAPH\" },\n\t\t0x002E: { n:\"NGRAPH\" },\n\t\t0x002F: { n:\"CALCCOUNT\" },\n\t\t0x0030: { n:\"UNFORMATTED\" },\n\t\t0x0031: { n:\"CURSORW12\" },\n\t\t0x0032: { n:\"WINDOW\" },\n\t\t0x0033: { n:\"STRING\", f:parse_STRING },\n\t\t0x0037: { n:\"PASSWORD\" },\n\t\t0x0038: { n:\"LOCKED\" },\n\t\t0x003C: { n:\"QUERY\" },\n\t\t0x003D: { n:\"QUERYNAME\" },\n\t\t0x003E: { n:\"PRINT\" },\n\t\t0x003F: { n:\"PRINTNAME\" },\n\t\t0x0040: { n:\"GRAPH2\" },\n\t\t0x0041: { n:\"GRAPHNAME\" },\n\t\t0x0042: { n:\"ZOOM\" },\n\t\t0x0043: { n:\"SYMSPLIT\" },\n\t\t0x0044: { n:\"NSROWS\" },\n\t\t0x0045: { n:\"NSCOLS\" },\n\t\t0x0046: { n:\"RULER\" },\n\t\t0x0047: { n:\"NNAME\" },\n\t\t0x0048: { n:\"ACOMM\" },\n\t\t0x0049: { n:\"AMACRO\" },\n\t\t0x004A: { n:\"PARSE\" },\n\t\t// 0x0064\n\t\t0x0066: { n:\"PRANGES??\" },\n\t\t0x0067: { n:\"RRANGES??\" },\n\t\t0x0068: { n:\"FNAME??\" },\n\t\t0x0069: { n:\"MRANGES??\" },\n\t\t// 0x0096\n\t\t// 0x0099\n\t\t// 0x009A\n\t\t// 0x009B\n\t\t// 0x009C\n\t\t// 0x00C0\n\t\t// 0x00C7\n\t\t// 0x00C9\n\t\t0x00CC: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t// 0x00CD\n\t\t0x00DE: { n:\"SHEETNAMELP\", f:parse_SHEETNAMELP },\n\t\t0x00FF: { n:\"BOF\", f:parseuint16 },\n\t\t0x5402: { n:\"WKSNF\", f:parseuint16 },\n\t\t0xFFFF: { n:\"\" }\n\t};\n\n\tvar WK3Enum = {\n\t\t0x0000: { n:\"BOF\" },\n\t\t0x0001: { n:\"EOF\" },\n\t\t0x0002: { n:\"PASSWORD\" },\n\t\t0x0003: { n:\"CALCSET\" },\n\t\t0x0004: { n:\"WINDOWSET\" },\n\t\t0x0005: { n:\"SHEETCELLPTR\" },\n\t\t0x0006: { n:\"SHEETLAYOUT\" },\n\t\t0x0007: { n:\"COLUMNWIDTH\" },\n\t\t0x0008: { n:\"HIDDENCOLUMN\" },\n\t\t0x0009: { n:\"USERRANGE\" },\n\t\t0x000A: { n:\"SYSTEMRANGE\" },\n\t\t0x000B: { n:\"ZEROFORCE\" },\n\t\t0x000C: { n:\"SORTKEYDIR\" },\n\t\t0x000D: { n:\"FILESEAL\" },\n\t\t0x000E: { n:\"DATAFILLNUMS\" },\n\t\t0x000F: { n:\"PRINTMAIN\" },\n\t\t0x0010: { n:\"PRINTSTRING\" },\n\t\t0x0011: { n:\"GRAPHMAIN\" },\n\t\t0x0012: { n:\"GRAPHSTRING\" },\n\t\t0x0013: { n:\"??\" },\n\t\t0x0014: { n:\"ERRCELL\" },\n\t\t0x0015: { n:\"NACELL\" },\n\t\t0x0016: { n:\"LABEL16\", f:parse_LABEL_16},\n\t\t0x0017: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n\t\t0x0018: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n\t\t0x0019: { n:\"FORMULA19\", f:parse_FORMULA_19},\n\t\t0x001A: { n:\"FORMULA1A\" },\n\t\t0x001B: { n:\"XFORMAT\", f:parse_XFORMAT },\n\t\t0x001C: { n:\"DTLABELMISC\" },\n\t\t0x001D: { n:\"DTLABELCELL\" },\n\t\t0x001E: { n:\"GRAPHWINDOW\" },\n\t\t0x001F: { n:\"CPA\" },\n\t\t0x0020: { n:\"LPLAUTO\" },\n\t\t0x0021: { n:\"QUERY\" },\n\t\t0x0022: { n:\"HIDDENSHEET\" },\n\t\t0x0023: { n:\"??\" },\n\t\t0x0025: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n\t\t0x0026: { n:\"??\" },\n\t\t0x0027: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n\t\t0x0028: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n\t\t0x008E: { n:\"??\" },\n\t\t0x0093: { n:\"??\" },\n\t\t0x0096: { n:\"??\" },\n\t\t0x0097: { n:\"??\" },\n\t\t0x0098: { n:\"??\" },\n\t\t0x0099: { n:\"??\" },\n\t\t0x009A: { n:\"??\" },\n\t\t0x009B: { n:\"??\" },\n\t\t0x009C: { n:\"??\" },\n\t\t0x00A3: { n:\"??\" },\n\t\t0x00AE: { n:\"??\" },\n\t\t0x00AF: { n:\"??\" },\n\t\t0x00B0: { n:\"??\" },\n\t\t0x00B1: { n:\"??\" },\n\t\t0x00B8: { n:\"??\" },\n\t\t0x00B9: { n:\"??\" },\n\t\t0x00BA: { n:\"??\" },\n\t\t0x00BB: { n:\"??\" },\n\t\t0x00BC: { n:\"??\" },\n\t\t0x00C3: { n:\"??\" },\n\t\t0x00C9: { n:\"??\" },\n\t\t0x00CC: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t0x00CD: { n:\"??\" },\n\t\t0x00CE: { n:\"??\" },\n\t\t0x00CF: { n:\"??\" },\n\t\t0x00D0: { n:\"??\" },\n\t\t0x0100: { n:\"??\" },\n\t\t0x0103: { n:\"??\" },\n\t\t0x0104: { n:\"??\" },\n\t\t0x0105: { n:\"??\" },\n\t\t0x0106: { n:\"??\" },\n\t\t0x0107: { n:\"??\" },\n\t\t0x0109: { n:\"??\" },\n\t\t0x010A: { n:\"??\" },\n\t\t0x010B: { n:\"??\" },\n\t\t0x010C: { n:\"??\" },\n\t\t0x010E: { n:\"??\" },\n\t\t0x010F: { n:\"??\" },\n\t\t0x0180: { n:\"??\" },\n\t\t0x0185: { n:\"??\" },\n\t\t0x0186: { n:\"??\" },\n\t\t0x0189: { n:\"??\" },\n\t\t0x018C: { n:\"??\" },\n\t\t0x0200: { n:\"??\" },\n\t\t0x0202: { n:\"??\" },\n\t\t0x0201: { n:\"??\" },\n\t\t0x0204: { n:\"??\" },\n\t\t0x0205: { n:\"??\" },\n\t\t0x0280: { n:\"??\" },\n\t\t0x0281: { n:\"??\" },\n\t\t0x0282: { n:\"??\" },\n\t\t0x0283: { n:\"??\" },\n\t\t0x0284: { n:\"??\" },\n\t\t0x0285: { n:\"??\" },\n\t\t0x0286: { n:\"??\" },\n\t\t0x0287: { n:\"??\" },\n\t\t0x0288: { n:\"??\" },\n\t\t0x0292: { n:\"??\" },\n\t\t0x0293: { n:\"??\" },\n\t\t0x0294: { n:\"??\" },\n\t\t0x0295: { n:\"??\" },\n\t\t0x0296: { n:\"??\" },\n\t\t0x0299: { n:\"??\" },\n\t\t0x029A: { n:\"??\" },\n\t\t0x0300: { n:\"??\" },\n\t\t0x0304: { n:\"??\" },\n\t\t0x0601: { n:\"SHEETINFOQP\", f:parse_SHEETINFOQP },\n\t\t0x0640: { n:\"??\" },\n\t\t0x0642: { n:\"??\" },\n\t\t0x0701: { n:\"??\" },\n\t\t0x0702: { n:\"??\" },\n\t\t0x0703: { n:\"??\" },\n\t\t0x0704: { n:\"??\" },\n\t\t0x0780: { n:\"??\" },\n\t\t0x0800: { n:\"??\" },\n\t\t0x0801: { n:\"??\" },\n\t\t0x0804: { n:\"??\" },\n\t\t0x0A80: { n:\"??\" },\n\t\t0x2AF6: { n:\"??\" },\n\t\t0x3231: { n:\"??\" },\n\t\t0x6E49: { n:\"??\" },\n\t\t0x6F44: { n:\"??\" },\n\t\t0xFFFF: { n:\"\" }\n\t};\n\n\t/* TODO: fill out and verify this table across QP versions */\n\tvar QPWNFTable = {\n\t\t0x05: \"dd-mmm-yy\",\n\t\t0x06: \"dd-mmm\",\n\t\t0x07: \"mmm-yy\",\n\t\t0x08: \"mm/dd/yy\", // Long Date Intl\n\t\t0x0A: \"hh:mm:ss AM/PM\",\n\t\t0x0B: \"hh:mm AM/PM\",\n\t\t0x0E: \"dd-mmm-yyyy\",\n\t\t0x0F: \"mmm-yyyy\",\n\n\t\t/* It is suspected that the the low nybble specifies decimal places */\n\t\t0x0022: \"0.00\",\n\t\t0x0032: \"0.00;[Red]0.00\",\n\t\t0x0042: \"0.00;\\(0.00\\)\",\n\t\t0x0052: \"0.00;[Red]\\(0.00\\)\",\n\t\t0x00A2: '\"$\"#,##0.00;\\\\(\"$\"#,##0.00\\\\)',\n\t\t0x0120: '0%',\n\t\t0x0130: '0E+00',\n\t\t0x0140: '# ?/?'\n\t};\n\n\tfunction parse_qpw_str(p) {\n\t\tvar cch = p.read_shift(2);\n\t\tvar flags = p.read_shift(1);\n\t\t/* TODO: find examples with nonzero flags */\n\t\tif(flags != 0) throw \"unsupported QPW string type \" + flags.toString(16);\n\t\treturn p.read_shift(cch, \"sbcs-cont\");\n\t}\n\n\t/* QPW uses a different set of record types */\n\tfunction qpw_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tprep_blob(d, 0);\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ({}/*:any*/); if(o.dense) s[\"!data\"] = [];\n\t\tvar SST = [], sname = \"\", formulae = [];\n\t\tvar range = {s:{r:-1,c:-1}, e:{r:-1,c:-1}};\n\t\tvar cnt = 0, type = 0, C = 0, R = 0;\n\t\tvar wb = { SheetNames: [], Sheets: {} };\n\t\tvar FMTS = [];\n\t\touter: while(d.l < d.length) {\n\t\t\tvar RT = d.read_shift(2), length = d.read_shift(2);\n\t\t\tvar p = d.slice(d.l, d.l + length);\n\t\t\tprep_blob(p, 0);\n\t\t\tswitch(RT) {\n\t\t\t\tcase 0x01: /* BOF */\n\t\t\t\t\tif(p.read_shift(4) != 0x39575051) throw \"Bad QPW9 BOF!\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x02: /* EOF */ break outer;\n\n\t\t\t\tcase 0x08: /* NF */ break; // TODO: this is tied to custom number formats\n\n\t\t\t\tcase 0x0A: /* FORMATS */ {\n\t\t\t\t\tvar fcnt = p.read_shift(4);\n\t\t\t\t\tvar step = ((p.length - p.l)/ fcnt)|0;\n\t\t\t\t\tfor(var ifmt = 0; ifmt < fcnt; ++ifmt) {\n\t\t\t\t\t\tvar end = p.l + step;\n\t\t\t\t\t\tvar fmt = {};\n\t\t\t\t\t\tp.l += 2;\n\t\t\t\t\t\tfmt.numFmtId = p.read_shift(2);\n\t\t\t\t\t\tif(QPWNFTable[fmt.numFmtId]) fmt.z = QPWNFTable[fmt.numFmtId];\n\t\t\t\t\t\tp.l = end;\n\t\t\t\t\t\tFMTS.push(fmt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\t/* TODO: The behavior here should be consistent with Numbers: QP Notebook ~ .TN.SheetArchive, QP Sheet ~ .TST.TableModelArchive */\n\t\t\t\tcase 0x0401: /* BON */ break;\n\t\t\t\tcase 0x0402: /* EON */ /* TODO: backfill missing sheets based on BON cnt */ break;\n\n\t\t\t\tcase 0x0407: { /* SST */\n\t\t\t\t\tp.l += 12;\n\t\t\t\t\twhile(p.l < p.length) {\n\t\t\t\t\t\tcnt = p.read_shift(2);\n\t\t\t\t\t\ttype = p.read_shift(1);\n\t\t\t\t\t\tSST.push(p.read_shift(cnt, 'cstr'));\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0408: { /* FORMULAE */\n\t\t\t\t\t//p.l += 12;\n\t\t\t\t\t//while(p.l < p.length) {\n\t\t\t\t\t//\tcnt = p.read_shift(2);\n\t\t\t\t\t//\tformulae.push(p.slice(p.l, p.l + cnt + 1)); p.l += cnt + 1;\n\t\t\t\t\t//}\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0601: { /* BOS */\n\t\t\t\t\tvar sidx = p.read_shift(2);\n\t\t\t\t\ts = ({}/*:any*/); if(o.dense) s[\"!data\"] = [];\n\t\t\t\t\trange.s.c = p.read_shift(2);\n\t\t\t\t\trange.e.c = p.read_shift(2);\n\t\t\t\t\trange.s.r = p.read_shift(4);\n\t\t\t\t\trange.e.r = p.read_shift(4);\n\t\t\t\t\tp.l += 4;\n\t\t\t\t\tif(p.l + 2 < p.length) {\n\t\t\t\t\t\tcnt = p.read_shift(2);\n\t\t\t\t\t\ttype = p.read_shift(1);\n\t\t\t\t\t\tsname = cnt == 0 ? \"\" : p.read_shift(cnt, 'cstr');\n\t\t\t\t\t}\n\t\t\t\t\tif(!sname) sname = encode_col(sidx);\n\t\t\t\t\t/* TODO: backfill empty sheets */\n\t\t\t\t} break;\n\t\t\t\tcase 0x0602: { /* EOS */\n\t\t\t\t\t/* NOTE: QP valid range A1:IV1000000 */\n\t\t\t\t\tif(range.s.c > 0xFF || range.s.r > 999999) break;\n\t\t\t\t\tif(range.e.c < range.s.c) range.e.c = range.s.c;\n\t\t\t\t\tif(range.e.r < range.s.r) range.e.r = range.s.r;\n\t\t\t\t\ts[\"!ref\"] = encode_range(range);\n\t\t\t\t\tbook_append_sheet(wb, s, sname); // TODO: a barrel roll\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0A01: { /* COL (like XLS Row, modulo the layout transposition) */\n\t\t\t\t\tC = p.read_shift(2);\n\t\t\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\t\t\tif(range.s.c > C) range.s.c = C;\n\t\t\t\t\tR = p.read_shift(4);\n\t\t\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\t\t\tR = p.read_shift(4);\n\t\t\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0C01: { /* MulCells (like XLS MulRK, but takes advantage of common column data patterns) */\n\t\t\t\t\tR = p.read_shift(4), cnt = p.read_shift(4);\n\t\t\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\t\t\tif(range.e.r < R + cnt - 1) range.e.r = R + cnt - 1;\n\t\t\t\t\tvar CC = encode_col(C);\n\t\t\t\t\twhile(p.l < p.length) {\n\t\t\t\t\t\tvar cell = { t: \"z\" };\n\t\t\t\t\t\tvar flags = p.read_shift(1), fmtidx = -1;\n\t\t\t\t\t\tif(flags & 0x80) fmtidx = p.read_shift(2);\n\t\t\t\t\t\tvar mul = (flags & 0x40) ? p.read_shift(2) - 1: 0;\n\t\t\t\t\t\tswitch(flags & 0x1F) {\n\t\t\t\t\t\t\tcase 0: break;\n\t\t\t\t\t\t\tcase 1: break;\n\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: p.read_shift(2) }; break;\n\t\t\t\t\t\t\tcase 3: cell = { t: \"n\", v: p.read_shift(2, 'i') }; break;\n\t\t\t\t\t\t\tcase 4: cell = { t: \"n\", v: parse_RkNumber(p) }; break;\n\t\t\t\t\t\t\tcase 5: cell = { t: \"n\", v: p.read_shift(8, 'f') }; break;\n\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = p.read_shift(4) - 1] }; break;\n\t\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t\tcell = { t: \"n\", v: p.read_shift(8, 'f') };\n\t\t\t\t\t\t\t\tp.l += 2; /* cell.f = formulae[p.read_shift(4)]; */ p.l += 4;\n\t\t\t\t\t\t\t\tif(isNaN(cell.v)) cell = { t: \"e\", v: 0x0F }; // #VALUE!\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault: throw \"Unrecognized QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(fmtidx != -1 && (FMTS[fmtidx - 1]||{}).z) cell.z = FMTS[fmtidx-1].z;\n\t\t\t\t\t\tvar delta = 0;\n\t\t\t\t\t\tif(flags & 0x20) switch(flags & 0x1F) {\n\t\t\t\t\t\t\tcase 2: delta = p.read_shift(2); break;\n\t\t\t\t\t\t\tcase 3: delta = p.read_shift(2, 'i'); break;\n\t\t\t\t\t\t\tcase 7: delta = p.read_shift(2); break;\n\t\t\t\t\t\t\tdefault: throw \"Unsupported delta for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(!o.sheetStubs && cell.t == \"z\")) {\n\t\t\t\t\t\t\tvar newcell = dup(cell);\n\t\t\t\t\t\t\tif(cell.t == \"n\" && cell.z && fmt_is_date(cell.z) && o.cellDates) {\n\t\t\t\t\t\t\t\tnewcell.v = numdate(cell.v); newcell.t = typeof newcell.v == \"number\" ? 'n' : 'd';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(s[\"!data\"] != null) {\n\t\t\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\t\t\ts[\"!data\"][R][C] = newcell;\n\t\t\t\t\t\t\t} else s[CC + encode_row(R)] = newcell;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++R; --cnt;\n\t\t\t\t\t\twhile(mul-- > 0 && cnt >= 0) {\n\t\t\t\t\t\t\tif(flags & 0x20) switch(flags & 0x1F) {\n\t\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: (cell.v + delta) & 0xFFFF }; break;\n\t\t\t\t\t\t\t\tcase 3: cell = { t: \"n\", v: (cell.v + delta) & 0xFFFF }; if(cell.v > 0x7FFF) cell.v -= 0x10000; break;\n\t\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = (type + delta) >>> 0] }; break;\n\t\t\t\t\t\t\t\tdefault: throw \"Cannot apply delta for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t\t} else switch(flags & 0x1F) {\n\t\t\t\t\t\t\t\tcase 1: cell = { t: \"z\" }; break;\n\t\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: p.read_shift(2) }; break;\n\t\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = p.read_shift(4) - 1] }; break;\n\t\t\t\t\t\t\t\tdefault: throw \"Cannot apply repeat for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(fmtidx != -1);\n\t\t\t\t\t\t\tif(!(!o.sheetStubs && cell.t == \"z\")) {\n\t\t\t\t\t\t\t\tif(s[\"!data\"] != null) {\n\t\t\t\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\t\t\t\ts[\"!data\"][R][C] = cell;\n\t\t\t\t\t\t\t\t} else s[CC + encode_row(R)] = cell;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t++R; --cnt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0C02: { /* String (result of string formula expression) */\n\t\t\t\t\tC = p.read_shift(2);\n\t\t\t\t\tR = p.read_shift(4);\n\t\t\t\t\tvar str = parse_qpw_str(p);\n\t\t\t\t\t/* TODO: QP10 record has an additional unknown character after the string */\n\t\t\t\t\tif(s[\"!data\"] != null) {\n\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\ts[\"!data\"][R][C] = { t:\"s\", v:str };\n\t\t\t\t\t} else s[encode_col(C) + encode_row(R)] = { t:\"s\", v:str };\n\t\t\t\t} break;\n\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t\td.l += length;\n\t\t}\n\t\treturn wb;\n\t}\n\n\treturn {\n\t\tsheet_to_wk1: sheet_to_wk1,\n\t\tbook_to_wk3: book_to_wk3,\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n\tvar font = {}, m = rpr.match(tagregex), i = 0;\n\tvar pass = false;\n\tif(m) for(;i!=m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(y[0].replace(/<\\w*:/g,\"<\")) {\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<condense': break;\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<extend': break;\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<shadow':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<shadow>':\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\tcase '</shadow>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\tfont.cp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\tcase '<outline':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<outline>':\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\tcase '</outline>': break;\n\n\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<strike>':\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\tcase '</strike>': break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tif(!y.val) break;\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '<u>':\n\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\tcase '</u>': break;\n\n\t\t\t/* 18.8.2 b */\n\t\t\tcase '<b':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<b>':\n\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\tcase '</b>': break;\n\n\t\t\t/* 18.8.26 i */\n\t\t\tcase '<i':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<i>':\n\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\tcase '</i>': break;\n\n\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\tcase '<color':\n\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\tbreak;\n\t\t\tcase '<color>': case '<color/>': case '</color>': break;\n\n\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\tcase '<family': font.family = y.val; break;\n\t\t\tcase '<family>': case '<family/>': case '</family>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\tcase '<vertAlign': font.valign = y.val; break;\n\t\t\tcase '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\tcase '<scheme': break;\n\t\t\tcase '<scheme>': case '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault:\n\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t}\n\t}\n\treturn font;\n}\n\nvar parse_rs = /*#__PURE__*/(function() {\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = str_match_xml_ns(r, \"t\")/*, cp = 65001*/;\n\t\tif(!t) return {t:\"s\", v:\"\"};\n\n\t\tvar o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);\n\t\tvar rpr = str_match_xml_ns(r, \"rPr\");\n\t\tif(rpr) o.s = parse_rpr(rpr[1]);\n\t\treturn o;\n\t}\n\tvar rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/;\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).filter(function(r) { return r.v; });\n\t};\n})();\n\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/(function parse_rs_factory() {\n\tvar nlregex = /(\\r\\n|\\n)/g;\n\tfunction parse_rpr2(font, intro, outro) {\n\t\tvar style/*:Array<string>*/ = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tvar align = font.valign || \"\";\n\t\tif(align == \"superscript\" || align == \"super\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn font;\n\t}\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction r_to_html(r) {\n\t\tvar terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];\n\t\tif(!r.v) return \"\";\n\n\t\tif(r.s) parse_rpr2(r.s, terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\n\treturn function parse_rs(rs) {\n\t\treturn rs.map(r_to_html).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t\\b[^<>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r\\b[^<>]*>/;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return { t: \"\" };\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"), true);\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((str_remove_xml_ns_g(x, \"rPh\").match(sitregex)||[]).join(\"\").replace(tagregex,\"\")), true);\n\t\tif(html) z.h = rs_to_html(parse_rs(z.r));\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data/*:string*/, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = str_match_xml_ns(data, \"sst\");\n\tif(sst) {\n\t\tss = sst[1].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[0].slice(0, sst[0].indexOf(\">\"))); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst/*:SST*/, opts)/*:string*/ {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS_main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s/*:XLString*/ = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(typeof s.t !== \"string\") s.t = String(s.t);\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* BrtBeginSst */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* BrtSSTItem */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* BrtEndSst */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst/*::, opts*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, 0x00A0 /* BrtEndSst */);\n\treturn ba.end();\n}\nfunction _JS2ANSI(str/*:string*/)/*:Array<number>*/ {\n\tif(typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n\tvar o/*:Array<number>*/ = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length/*:?number*/) {\n\tvar o/*:any*/ = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\n\t/*:: if(length == null) return o; */\n\tif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps/*:Array<{t:number, v:string}>*/ = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob)/*:Array<string>*/ {\n\tvar o/*:Array<string>*/ = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length/*:number*/) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length/*:number*/) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob/*::, vers*/) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt(/*::blob, vers*/) { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob/*::, vers*/) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length/*:number*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob/*::, length*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/(function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password/*:string*/) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password/*:string*/) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length/*:number*/, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length/*:number*/, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nfunction rtf_to_sheet(d, opts) {\n  switch (opts.type) {\n    case \"base64\":\n      return rtf_to_sheet_str(Base64_decode(d), opts);\n    case \"binary\":\n      return rtf_to_sheet_str(d, opts);\n    case \"buffer\":\n      return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString(\"binary\") : a2s(d), opts);\n    case \"array\":\n      return rtf_to_sheet_str(cc2str(d), opts);\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction rtf_to_sheet_str(str, opts) {\n  var o = opts || {};\n  var ws = {};\n  var dense = o.dense;\n  if (dense)\n    ws[\"!data\"] = [];\n  var rows = str_match_ng(str, \"\\\\trowd\", \"\\\\row\");\n  if (!rows)\n    throw new Error(\"RTF missing table\");\n  var range = { s: { c: 0, r: 0 }, e: { c: 0, r: rows.length - 1 } };\n  var row = [];\n  rows.forEach(function(rowtf, R) {\n    if (dense)\n      row = ws[\"!data\"][R] = [];\n    var rtfre = /\\\\[\\w\\-]+\\b/g;\n    var last_index = 0;\n    var res;\n    var C = -1;\n    var payload = [];\n    while ((res = rtfre.exec(rowtf)) != null) {\n      var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n      if (data.charCodeAt(0) == 32)\n        data = data.slice(1);\n      if (data.length)\n        payload.push(data);\n      switch (res[0]) {\n        case \"\\\\cell\":\n          ++C;\n          if (payload.length) {\n            var cell = { v: payload.join(\"\"), t: \"s\" };\n            if (cell.v == \"TRUE\" || cell.v == \"FALSE\") {\n              cell.v = cell.v == \"TRUE\";\n              cell.t = \"b\";\n            } else if (!isNaN(fuzzynum(cell.v))) {\n              cell.t = \"n\";\n              if (o.cellText !== false)\n                cell.w = cell.v;\n              cell.v = fuzzynum(cell.v);\n            }\n            if (dense)\n              row[C] = cell;\n            else\n              ws[encode_cell({ r: R, c: C })] = cell;\n          }\n          payload = [];\n          break;\n        case \"\\\\par\":\n          payload.push(\"\\n\");\n          break;\n      }\n      last_index = rtfre.lastIndex;\n    }\n    if (C > range.e.c)\n      range.e.c = C;\n  });\n  ws[\"!ref\"] = encode_range(range);\n  return ws;\n}\nfunction rtf_to_workbook(d, opts) {\n  var wb = sheet_to_workbook(rtf_to_sheet(d, opts), opts);\n  wb.bookType = \"rtf\";\n  return wb;\n}\nfunction sheet_to_rtf(ws, opts) {\n  var o = [\"{\\\\rtf1\\\\ansi\"];\n  if (!ws[\"!ref\"])\n    return o[0] + \"}\";\n  var r = safe_decode_range(ws[\"!ref\"]), cell;\n  var dense = ws[\"!data\"] != null, row = [];\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    o.push(\"\\\\trowd\\\\trautofit1\");\n    for (var C = r.s.c; C <= r.e.c; ++C)\n      o.push(\"\\\\cellx\" + (C + 1));\n    o.push(\"\\\\pard\\\\intbl\");\n    if (dense)\n      row = ws[\"!data\"][R] || [];\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      var coord = encode_cell({ r: R, c: C });\n      cell = dense ? row[C] : ws[coord];\n      if (!cell || cell.v == null && (!cell.f || cell.F)) {\n        o.push(\" \\\\cell\");\n        continue;\n      }\n      o.push(\" \" + (cell.w || (format_cell(cell), cell.w) || \"\").replace(/[\\r\\n]/g, \"\\\\par \"));\n      o.push(\"\\\\cell\");\n    }\n    o.push(\"\\\\pard\\\\intbl\\\\row\");\n  }\n  return o.join(\"\") + \"}\";\n}\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll/*:ColInfo*/) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {};\n\tvar pass = false;\n\t(t.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = /*::(*/{}/*:: :any)*/;\n\t\t\t\tif(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n\t\t\t\tif(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>':\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\t(t.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\t(t.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = utf8read(y.val); break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(table_fmt)/*:any*/);\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n\tvar m = t.match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF__load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF/*:{[n:number|string]:string}*//*::, opts*/) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\t(t.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>': case '<xf>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(styles.NumberFmt && xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>': case '<alignment>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection': case '<protection>':\n\t\t\t\tbreak;\n\t\t\tcase '</protection>': case '<protection/>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': case '<AlternateContent>': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) {\n\t\to[o.length] = (writextag('xf', null, c));\n\t});\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= /*#__PURE__*/(function make_pstyx() {\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = remove_doctype(str_remove_ng(data, \"<!--\", \"-->\"));\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=str_match_xml_ns(data, \"numFmts\"))) parse_numFmts(t[0], styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=str_match_xml_ns(data, \"fonts\"))) parse_fonts(t[0], styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=str_match_xml_ns(data, \"fills\"))) parse_fills(t[0], styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=str_match_xml_ns(data, \"borders\"))) parse_borders(t[0], styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=str_match_xml_ns(data, \"cellXfs\"))) parse_cellXfs(t[0], styles, opts);\n\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nfunction write_sty_xml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('styleSheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:vt': XMLNS.vt\n\t})], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length/*:number*/) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i/*:number*/, f/*:string*/, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length/*:number*/, opts) {\n\tvar out = ({}/*:any*/);\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fItalic) out.italic = 1;\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font/*:any*/, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames/*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tif(!rev_XLSBFillPTNames) rev_XLSBFillPTNames = (evert(XLSBFillPTNames)/*:any*/);\n\tvar fls/*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length/*:number*/) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\tvar flow = 0;\n\to.write_shift(1, flow); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]/*:any*/);\n\tfor(var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* BrtFmt */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF__load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* BrtFont */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* BrtKnownFonts */ break;\n\t\t\tcase 0x002D: /* BrtFill */\n\t\t\t\tbreak;\n\t\t\tcase 0x002E: /* BrtBorder */\n\t\t\t\tbreak;\n\t\t\tcase 0x002F: /* BrtXF */\n\t\t\t\tif(state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* BrtStyle */\n\t\t\tcase 0x01FB: /* BrtDXF */\n\t\t\tcase 0x023C: /* BrtMRUColor */\n\t\t\tcase 0x01DB: /* BrtIndexedColor */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* BrtDXF14 */\n\t\t\tcase 0x0836: /* BrtDXF15 */\n\t\t\tcase 0x046A: /* BrtSlicerStyleElement */\n\t\t\tcase 0x0200: /* BrtTableStyleElement */\n\t\t\tcase 0x082F: /* BrtTimelineStyleElement */\n\t\t\tcase 0x0C00: /* BrtUid */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* BrtACBegin */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* BrtACEnd */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF/*:?SSFTable*/) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, 0x0268 /* BrtEndFmts */);\n}\n\nfunction write_FONTS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, 0x0264 /* BrtEndFonts */);\n}\n\nfunction write_FILLS_bin(ba/*::, data*/) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, 0x025C /* BrtEndFills */);\n}\n\nfunction write_BORDERS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, 0x0266 /* BrtEndBorders */);\n}\n\nfunction write_CELLSTYLEXFS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\twrite_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n\t\tnumFmtId: 0,\n\t\tfontId:   0,\n\t\tfillId:   0,\n\t\tborderId: 0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x026A /* BrtEndCellXFs */);\n}\n\nfunction write_STYLES_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\twrite_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, 0x026C /* BrtEndStyles */);\n}\n\nfunction write_DXFS_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, 0x01FA /* BrtEndDXFs */);\n}\n\nfunction write_TABLESTYLES_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\n\nfunction write_COLORPALETTE_bin(/*::ba, data*/) {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, 0x0117 /* BrtEndStyleSheet */);\n\treturn ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = [\n\t'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',\n\t'</a:accent1>', '</a:accent2>', '</a:accent3>',\n\t'</a:accent4>', '</a:accent5>', '</a:accent6>',\n\t'</a:hlink>', '</a:folHlink>'\n];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\t\t\tcase '</a:srgbClr>': break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\t\t\tcase '</a:sysClr>': break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '</a:dk1>':\n\t\t\tcase '</a:lt1>':\n\t\t\tcase '<a:dk1>':\n\t\t\tcase '<a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t/* clrScheme CT_ColorScheme */\n\tif(!(t=str_match_xml(data, \"a:clrScheme\"))) throw new Error('clrScheme not found in themeElements');\n\tparse_clrScheme(t, themes, opts);\n\n\t/* fontScheme CT_FontScheme */\n\tif(!(t=str_match_xml(data, \"a:fontScheme\"))) throw new Error('fontScheme not found in themeElements');\n\tparse_fontScheme(t, themes, opts);\n\n\t/* fmtScheme CT_StyleMatrix */\n\tif(!(t=str_match_xml(data, \"a:fmtScheme\"))) throw new Error('fmtScheme not found in themeElements');\n\tparse_fmtScheme(t, themes, opts);\n}\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data/*:string*/, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) data = write_theme();\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=str_match_xml(data, \"a:themeElements\"))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\tthemes.raw = data;\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts)/*:string*/ {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tif(Themes && typeof Themes.raw == \"string\") return Themes.raw;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = zip_read(data, {type: \"array\"}); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob/*::, length*/) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext/*:AOA*/ = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: /* text color */\n\t\t\t\tbreak;\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0)\n    out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function(val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({ name: val.name });\n        break;\n      case 51:\n        val.forEach(function(r) {\n          if (metatype == 1)\n            out.Cell.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n          else if (metatype == 0)\n            out.Value.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {\n        } else if (!pass || opts.WTF && state[state.length - 1] != 35)\n          throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  if (!data)\n    return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function(x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({ name: y.name });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j)\n          if (out.Types[j].name == y.name)\n            lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1)\n          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        else if (metatype == 0)\n          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta)\n          break;\n        if (!lastmeta.offsets)\n          lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && (opts == null ? void 0 : opts.WTF))\n          throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml(/*::data, rel, name:string, _opts*/) {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name/*:string*/, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels/*:any*/) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^<>]*r:id=\"([^<>\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nfunction parse_vml(data/*:string*/, sheet, comments) {\n\tvar cidx = 0;\n\t(str_match_xml_ns_g(data, \"shape\")||[]).forEach(function(m) {\n\t\tvar type = \"\";\n\t\tvar hidden = true;\n\t\tvar aidx = -1;\n\t\tvar R = -1, C = -1;\n\t\tm.replace(tagregex, function(x/*:string*/, idx/*:number*/) {\n\t\t\tvar y = parsexmltag(x);\n\t\t\tswitch(strip_ns(y[0])) {\n\t\t\t\tcase '<ClientData': if(y.ObjectType) type = y.ObjectType; break;\n\n\t\t\t\tcase '<Visible': case '<Visible/>': hidden = false; break;\n\n\t\t\t\tcase '<Row': case '<Row>': aidx = idx + x.length; break;\n\t\t\t\tcase '</Row>': R = +m.slice(aidx, idx).trim(); break;\n\n\t\t\t\tcase '<Column': case '<Column>': aidx = idx + x.length; break;\n\t\t\t\tcase '</Column>': C = +m.slice(aidx, idx).trim(); break;\n\t\t\t}\n\t\t\treturn \"\";\n\t\t});\n\t\tswitch(type) {\n\t\tcase 'Note':\n\t\t\tvar cell = ws_get_cell_stub(sheet, ((R>=0 && C>=0) ? encode_cell({r:R,c:C}) : comments[cidx].ref));\n\t\t\tif(cell.c) {\n\t\t\t\tcell.c.hidden = hidden;\n\t\t\t}\n\t\t\t++cidx;\n\t\t\tbreak;\n\t\t}\n\n\t});\n}\n\n\n/* comment boxes */\nfunction write_vml(rId/*:number*/, comments, ws) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"})\n\t];\n\n\tvar _shapeid = 65536 * rId;\n\n\tvar _comments = comments || [];\n\tif(_comments.length > 0) o.push(writextag(\"v:shapetype\", [\n\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t].join(\"\"), {id:\"_x0000_t202\", coordsize:csize.join(\",\"), 'o:spt':202, path:bbox}));\n\n\t_comments.forEach(function(x) { ++_shapeid; o.push(write_vml_comment(x, _shapeid)); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\n\nfunction write_vml_comment(x, _shapeid, ws)/*:string*/ {\n\tvar c = decode_cell(x[0]);\n\tvar fillopts = /*::(*/{'color2':\"#BEFF82\", 'type':\"gradient\"}/*:: :any)*/;\n\tif(fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n\tvar fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}) : null;\n\tvar fillxml = writextag('v:fill', fillparm, fillopts);\n\n\tvar shadata = ({on:\"t\", 'obscured':\"t\"}/*:any*/);\n\n\treturn [\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + _shapeid,\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\tfillxml,\n\t\twritextag(\"v:shadow\", null, shadata),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t].join(\"\");\n}\nfunction sheet_insert_comments(sheet/*:WorkSheet*/, comments/*:Array<RawComment>*/, threaded/*:boolean*/, people/*:?Array<any>*/) {\n\tvar dense = sheet[\"!data\"] != null;\n\tvar cell/*:Cell*/;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(r.r < 0 || r.c < 0) return;\n\t\tif(dense) {\n\t\t\tif(!sheet[\"!data\"][r.r]) sheet[\"!data\"][r.r] = [];\n\t\t\tcell = sheet[\"!data\"][r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = ({t:\"z\"}/*:any*/);\n\t\t\tif(dense) sheet[\"!data\"][r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tsheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});\n\t\tif(comment.h) o.h = comment.h;\n\n\t\t/* threaded comments always override */\n\t\tfor(var i = cell.c.length - 1; i >= 0; --i) {\n\t\t\tif(!threaded && cell.c[i].T) return;\n\t\t\tif(threaded && !cell.c[i].T) cell.c.splice(i, 1);\n\t\t}\n\t\tif(threaded && people) for(i = 0; i < people.length; ++i) {\n\t\t\tif(o.a == people[i].id) { o.a = people[i].name || o.a; break; }\n\t\t}\n\t\tcell.c.push(o);\n\t});\n}\n/* 18.7 Comments */\nfunction parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar commentList/*:Array<RawComment>*/ = [];\n\tvar authtag = str_match_xml_ns(data, \"authors\");\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^<>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = str_match_xml_ns(data, \"commentList\");\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^<>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid }/*:any*/);\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = str_match_xml_ns(x, \"text\");\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = (rt.t||\"\").replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nfunction write_comments_xml(data/*::, opts*/) {\n\tvar o = [XML_HEADER, writextag('comments', null, { 'xmlns': XMLNS_main[0] })];\n\n\tvar iauthor/*:Array<string>*/ = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) == -1) {\n\t\t\tiauthor.push(a);\n\t\t\to.push(\"<author>\" + a + \"</author>\");\n\t\t}\n\t\tif(w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n\t\t\tiauthor.push(\"tc=\" + w.ID);\n\t\t\to.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n\t\t}\n\t}); });\n\tif(iauthor.length == 0) { iauthor.push(\"SheetJ5\"); o.push(\"<author>SheetJ5</author>\"); }\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\t/* 18.7.3 CT_Comment */\n\t\tvar lastauthor = 0, ts = [], tcnt = 0;\n\t\tif(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n\t\td[1].forEach(function(c) {\n\t\t\tif(c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n\t\t\tif(c.T) ++tcnt;\n\t\t\tts.push(c.t == null ? \"\" : escapexml(c.t));\n\t\t});\n\t\tif(tcnt === 0) {\n\t\t\td[1].forEach(function(c) {\n\t\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n\t\t\t\to.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n\t\t\t\to.push('</text></comment>');\n\t\t\t});\n\t\t} else {\n\t\t\tif(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n\t\t\t/* based on Threaded Comments -> Comments projection */\n\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n\t\t\tvar t = \"Comment:\\n    \" + (ts[0]) + \"\\n\";\n\t\t\tfor(var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n\t\t\to.push(writetag(\"t\", escapexml(t)));\n\t\t\to.push('</text></comment>');\n\t\t}\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\tvar out = [];\n\tvar pass = false, comment = {}, tidx = 0;\n\tdata.replace(tagregex, function xml_tcmnt(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.6.207 ThreadedComments CT_ThreadedComments */\n\t\t\tcase '<ThreadedComments': break;\n\t\t\tcase '</ThreadedComments>': break;\n\n\t\t\t/* 2.6.205 threadedComment CT_ThreadedComment */\n\t\t\tcase '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;\n\t\t\tcase '</threadedComment>': if(comment.t != null) out.push(comment); break;\n\n\t\t\tcase '<text>': case '<text': tidx = idx + x.length; break;\n\t\t\tcase '</text>': comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\"); break;\n\n\t\t\t/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n\t\t\tcase '<mentions': case '<mentions>': pass = true; break;\n\t\t\tcase '</mentions>': pass = false; break;\n\n\t\t\t/* 2.6.202 mention CT_Mention TODO */\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\n\nfunction write_tcmnt_xml(comments, people, opts) {\n\tvar o = [XML_HEADER, writextag('ThreadedComments', null, { 'xmlns': XMLNS.TCMNT }).replace(/[\\/]>/, \">\")];\n\tcomments.forEach(function(carr) {\n\t\tvar rootid = \"\";\n\t\t(carr[1] || []).forEach(function(c, idx) {\n\t\t\tif(!c.T) { delete c.ID; return; }\n\t\t\tif(c.a && people.indexOf(c.a) == -1) people.push(c.a);\n\t\t\tvar tcopts = {\n\t\t\t\tref: carr[0],\n\t\t\t\tid: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n\t\t\t};\n\t\t\tif(idx == 0) rootid = tcopts.id;\n\t\t\telse tcopts.parentId = rootid;\n\t\t\tc.ID = tcopts.id;\n\t\t\tif(c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n\t\t\to.push(writextag('threadedComment', writetag('text', c.t||\"\"), tcopts));\n\t\t});\n\t});\n\to.push('</ThreadedComments>');\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data/*:string*/, opts) {\n\tvar out = [];\n\tvar pass = false;\n\tdata.replace(tagregex, function xml_tcmnt(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.4.85 personList CT_PersonList */\n\t\t\tcase '<personList': break;\n\t\t\tcase '</personList>': break;\n\n\t\t\t/* 2.6.203 person CT_Person TODO: providers */\n\t\t\tcase '<person': out.push({name: y.displayname, id: y.id }); break;\n\t\t\tcase '</person>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\nfunction write_people_xml(people/*, opts*/) {\n\tvar o = [XML_HEADER, writextag('personList', null, {\n\t\t'xmlns': XMLNS.TCMNT,\n\t\t'xmlns:x': XMLNS_main[0]\n\t}).replace(/[\\/]>/, \">\")];\n\tpeople.forEach(function(person, idx) {\n\t\to.push(writextag('person', null, {\n\t\t\tdisplayName: person,\n\t\t\tid: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n\t\t\tuserId: person,\n\t\t\tproviderId: \"None\"\n\t\t}));\n\t});\n\to.push(\"</personList>\");\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]/*:any*/), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts)/*:Array<RawComment>*/ {\n\tvar out/*:Array<RawComment>*/ = [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete (c/*:any*/).iauthor;\n\t\t\t\tif(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data/*::, opts*/) {\n\tvar ba = buf_array();\n\tvar iauthor/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0274 /* BrtBeginComments */);\n\n\twrite_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n\t\t\tif(c.T && c.ID && iauthor.indexOf(\"tc=\" + c.ID) == -1) {\n\t\t\t\tiauthor.push(\"tc=\" + c.ID);\n\t\t\t\twrite_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(\"tc=\" + c.ID));\n\t\t\t}\n\t\t});\n\t});\n\twrite_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n\n\twrite_record(ba, 0x0279 /* BrtBeginCommentList */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tvar _ia = -1;\n\t\t\tif(c.ID) _ia = iauthor.indexOf(\"tc=\" + c.ID);\n\t\t\tif(_ia == -1 && comment[1][0].T && comment[1][0].ID) _ia = iauthor.indexOf(\"tc=\" + comment[1][0].ID);\n\t\t\tif(_ia == -1) _ia = iauthor.indexOf(c.a);\n\t\t\tc.iauthor = _ia;\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n\t\t\twrite_record(ba, 0x027C /* BrtEndComment */);\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, 0x027A /* BrtEndCommentList */);\n\n\twrite_record(ba, 0x0275 /* BrtEndComments */);\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({ root: \"R\" });\n  cfb.FullPaths.forEach(function(p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/))\n      return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function(p, i) {\n    if (i == 0)\n      return;\n    var newpath = p.replace(/^[\\/]*[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\")\n      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\nfunction parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/(function(){\n\tvar rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n\tvar rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);\n\tfunction rcfunc($$,$1,$2,$3) {\n\t\tvar cRel = false, rRel = false;\n\n\t\tif($2.length == 0) rRel = true;\n\t\telse if($2.charAt(0) == \"[\") { rRel = true; $2 = $2.slice(1, -1); }\n\n\t\tif($3.length == 0) cRel = true;\n\t\telse if($3.charAt(0) == \"[\") { cRel = true; $3 = $3.slice(1, -1); }\n\n\t\tvar R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;\n\n\t\tif(cRel) C += rcbase.c; else --C;\n\t\tif(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])(\\$?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])(\\$?)(\\d{1,7})(?![_.\\(A-Za-z0-9])/g;\ntry {\n\tcrefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\n}catch(e){}\nvar a1_to_rc = /*#__PURE__*/(function(){\n\treturn function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = $4 == \"$\" ? (r+1) : (r == 0 ? \"\" : \"[\" + r + \"]\");\n\t\t\tvar C = $2 == \"$\" ? (c+1) : (c == 0 ? \"\" : \"[\" + c + \"]\");\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f/*:string*/)/*:boolean*/ {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f/*:string*/)/*:string*/ {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob/*::, length, opts*/) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob/*::, length, opts*/) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o/*:Array<number>*/ = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob/*::, length*/) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff/*:number*/) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out/*:Array<Range>*/ = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob/*::, length, opts*/) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob/*::, length, opts*/) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n\t0x01: { n:'PtgExp', f:parse_PtgExp },\n\t0x02: { n:'PtgTbl', f:parse_PtgTbl },\n\t0x03: { n:'PtgAdd', f:parseread1 },\n\t0x04: { n:'PtgSub', f:parseread1 },\n\t0x05: { n:'PtgMul', f:parseread1 },\n\t0x06: { n:'PtgDiv', f:parseread1 },\n\t0x07: { n:'PtgPower', f:parseread1 },\n\t0x08: { n:'PtgConcat', f:parseread1 },\n\t0x09: { n:'PtgLt', f:parseread1 },\n\t0x0A: { n:'PtgLe', f:parseread1 },\n\t0x0B: { n:'PtgEq', f:parseread1 },\n\t0x0C: { n:'PtgGe', f:parseread1 },\n\t0x0D: { n:'PtgGt', f:parseread1 },\n\t0x0E: { n:'PtgNe', f:parseread1 },\n\t0x0F: { n:'PtgIsect', f:parseread1 },\n\t0x10: { n:'PtgUnion', f:parseread1 },\n\t0x11: { n:'PtgRange', f:parseread1 },\n\t0x12: { n:'PtgUplus', f:parseread1 },\n\t0x13: { n:'PtgUminus', f:parseread1 },\n\t0x14: { n:'PtgPercent', f:parseread1 },\n\t0x15: { n:'PtgParen', f:parseread1 },\n\t0x16: { n:'PtgMissArg', f:parseread1 },\n\t0x17: { n:'PtgStr', f:parse_PtgStr },\n\t0x1A: { n:'PtgSheet', f:parse_PtgSheet },\n\t0x1B: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n\t0x1C: { n:'PtgErr', f:parse_PtgErr },\n\t0x1D: { n:'PtgBool', f:parse_PtgBool },\n\t0x1E: { n:'PtgInt', f:parse_PtgInt },\n\t0x1F: { n:'PtgNum', f:parse_PtgNum },\n\t0x20: { n:'PtgArray', f:parse_PtgArray },\n\t0x21: { n:'PtgFunc', f:parse_PtgFunc },\n\t0x22: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n\t0x23: { n:'PtgName', f:parse_PtgName },\n\t0x24: { n:'PtgRef', f:parse_PtgRef },\n\t0x25: { n:'PtgArea', f:parse_PtgArea },\n\t0x26: { n:'PtgMemArea', f:parse_PtgMemArea },\n\t0x27: { n:'PtgMemErr', f:parse_PtgMemErr },\n\t0x28: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n\t0x29: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n\t0x2A: { n:'PtgRefErr', f:parse_PtgRefErr },\n\t0x2B: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n\t0x2C: { n:'PtgRefN', f:parse_PtgRefN },\n\t0x2D: { n:'PtgAreaN', f:parse_PtgAreaN },\n\t0x2E: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n\t0x2F: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n\t0x39: { n:'PtgNameX', f:parse_PtgNameX },\n\t0x3A: { n:'PtgRef3d', f:parse_PtgRef3d },\n\t0x3B: { n:'PtgArea3d', f:parse_PtgArea3d },\n\t0x3C: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n\t0x3D: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n\t0xFF: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n\t0x40: 0x20, 0x60: 0x20,\n\t0x41: 0x21, 0x61: 0x21,\n\t0x42: 0x22, 0x62: 0x22,\n\t0x43: 0x23, 0x63: 0x23,\n\t0x44: 0x24, 0x64: 0x24,\n\t0x45: 0x25, 0x65: 0x25,\n\t0x46: 0x26, 0x66: 0x26,\n\t0x47: 0x27, 0x67: 0x27,\n\t0x48: 0x28, 0x68: 0x28,\n\t0x49: 0x29, 0x69: 0x29,\n\t0x4A: 0x2A, 0x6A: 0x2A,\n\t0x4B: 0x2B, 0x6B: 0x2B,\n\t0x4C: 0x2C, 0x6C: 0x2C,\n\t0x4D: 0x2D, 0x6D: 0x2D,\n\t0x4E: 0x2E, 0x6E: 0x2E,\n\t0x4F: 0x2F, 0x6F: 0x2F,\n\t0x58: 0x22, 0x78: 0x22,\n\t0x59: 0x39, 0x79: 0x39,\n\t0x5A: 0x3A, 0x7A: 0x3A,\n\t0x5B: 0x3B, 0x7B: 0x3B,\n\t0x5C: 0x3C, 0x7C: 0x3C,\n\t0x5D: 0x3D, 0x7D: 0x3D\n};\n\nvar Ptg18 = {\n\t0x01: { n:'PtgElfLel', f:parse_PtgElfLel },\n\t0x02: { n:'PtgElfRw', f:parse_PtgElfRw },\n\t0x03: { n:'PtgElfCol', f:parse_PtgElfCol },\n\t0x06: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n\t0x07: { n:'PtgElfColV', f:parse_PtgElfColV },\n\t0x0A: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n\t0x0B: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n\t0x0D: { n:'PtgElfColS', f:parse_PtgElfColS },\n\t0x0F: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n\t0x10: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n\t0x19: { n:'PtgList', f:parse_PtgList },\n\t0x1D: { n:'PtgSxName', f:parse_PtgSxName },\n\t0xFF: {}\n};\nvar Ptg19 = {\n\t0x00: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n\t0x01: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n\t0x02: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n\t0x04: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n\t0x08: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n\t0x10: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n\t0x20: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t0x21: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t0x40: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n\t0x41: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n\t0x80: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n\t0xFF: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r/*:Array<string>*/ = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\n\t\t\t\t\t/*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n\t\t\t\t\tr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\n\n// TODO: explore space\nfunction make_3d_range(start, end) {\n\tvar s = start.lastIndexOf(\"!\"), e = end.lastIndexOf(\"!\");\n\tif(s == -1 && e == -1) return start + \":\" + end;\n\tif(s > 0 && e > 0 && start.slice(0, s).toLowerCase() == end.slice(0, e).toLowerCase()) return start + \":\" + end.slice(e+1);\n\tconsole.error(\"Cannot hydrate range\", start, end);\n\treturn start + \":\" + end;\n}\n\nfunction get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(\";;\"); //return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tvar ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n\treturn ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(make_3d_range(e2,e1));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n\t\t\t\t/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n\t\t\t\t/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]/*:any*/);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\t/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n\t\t\t\tif(name && name.slice(0,6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||\"\").split(\";;\");\n\t\t\t\t\t\tif(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n\t\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r}/*:any*/);\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t} else {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(/*::String(*/f[1]/*::)*/);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(/*::(*/f[1]/*:: :any)*/) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\tif(stack[0] == \"TRUE\") return true; if(stack[0] == \"FALSE\") return false;\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob/*::, length*/) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\nfunction write_FormulaValue(value) {\n\tif(value == null) {\n\t\t// Blank String Value\n\t\tvar o = new_buf(8);\n\t\to.write_shift(1, 0x03);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0xFFFF);\n\t\treturn o;\n\t} else if(typeof value == \"number\") return write_Xnum(value);\n\treturn write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6, opts);\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\nfunction write_Formula(cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, os/*:number*/) {\n\t// Cell\n\tvar o1 = write_XLSCell(R, C, os);\n\n\t// FormulaValue\n\tvar o2 = write_FormulaValue(cell.v);\n\n\t// flags + cache\n\tvar o3 = new_buf(6);\n\tvar flags = 0x01 | 0x20;\n\to3.write_shift(2, flags);\n\to3.write_shift(4, 0);\n\n\t// CellParsedFormula\n\tvar bf = new_buf(cell.bf.length);\n\tfor(var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n\n\tvar out = bconcat([o1, o2, o3, bf]);\n\treturn out;\n}\n\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n\n/* Writes a PtgNum or PtgInt */\nfunction write_XLSBFormulaNum(val/*:number*/) {\n\tif((val | 0) == val && val < Math.pow(2,16) && val >= 0) {\n\t\tvar oint = new_buf(11);\n\t\toint.write_shift(4, 3);\n\t\toint.write_shift(1, 0x1e);\n\t\toint.write_shift(2, val);\n\t\toint.write_shift(4, 0);\n\t\treturn oint;\n\t}\n\n\tvar num = new_buf(17);\n\tnum.write_shift(4, 11);\n\tnum.write_shift(1, 0x1f);\n\tnum.write_shift(8, val);\n\tnum.write_shift(4, 0);\n\treturn num;\n}\n/* Writes a PtgErr */\nfunction write_XLSBFormulaErr(val/*:number*/) {\n\tvar oint = new_buf(10);\n\toint.write_shift(4, 2);\n\toint.write_shift(1, 0x1C);\n\toint.write_shift(1, val);\n\toint.write_shift(4, 0);\n\treturn oint;\n}\n/* Writes a PtgBool */\nfunction write_XLSBFormulaBool(val/*:boolean*/) {\n\tvar oint = new_buf(10);\n\toint.write_shift(4, 2);\n\toint.write_shift(1, 0x1D);\n\toint.write_shift(1, val?1:0);\n\toint.write_shift(4, 0);\n\treturn oint;\n}\n\n/* Writes a PtgStr */\nfunction write_XLSBFormulaStr(val/*:string*/) {\n\tvar preamble = new_buf(7);\n\tpreamble.write_shift(4, 3 + 2 * val.length);\n\tpreamble.write_shift(1, 0x17);\n\tpreamble.write_shift(2, val.length);\n\n\tvar body = new_buf(2 * val.length);\n\tbody.write_shift(2 * val.length, val, \"utf16le\");\n\n\tvar postamble = new_buf(4);\n\tpostamble.write_shift(4, 0);\n\n\treturn bconcat([preamble, body, postamble]);\n}\n\n/* Writes a PtgRef */\nfunction write_XLSBFormulaRef(str) {\n\tvar cell = decode_cell(str);\n\tvar out = new_buf(15);\n\tout.write_shift(4, 7);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a PtgRef3d */\nfunction write_XLSBFormulaRef3D(str, wb) {\n\tvar lastbang = str.lastIndexOf(\"!\");\n\tvar sname = str.slice(0, lastbang);\n\tstr = str.slice(lastbang+1);\n\tvar cell = decode_cell(str);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\n\tvar out = new_buf(17);\n\tout.write_shift(4, 9);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a PtgRefErr3d */\nfunction write_XLSBFormulaRefErr3D(str, wb) {\n\tvar lastbang = str.lastIndexOf(\"!\");\n\tvar sname = str.slice(0, lastbang);\n\tstr = str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\n\tvar out = new_buf(17);\n\tout.write_shift(4, 9);\n\tout.write_shift(1, 0x1C | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, 0);\n\tout.write_shift(2, 0); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a single sheet range [PtgRef PtgRef PtgRange] */\nfunction write_XLSBFormulaRange(_str) {\n\tvar parts = _str.split(\":\"), str = parts[0];\n\n\tvar out = new_buf(23);\n\tout.write_shift(4, 15);\n\n\t/* start cell */\n\tstr = parts[0]; var cell = decode_cell(str);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\t/* end cell */\n\tstr = parts[1]; cell = decode_cell(str);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\t/* PtgRange */\n\tout.write_shift(1, 0x11);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a range with explicit sheet name [PtgRef3D PtgRef3D PtgRange] */\nfunction write_XLSBFormulaRangeWS(_str, wb) {\n\tvar lastbang = _str.lastIndexOf(\"!\");\n\tvar sname = _str.slice(0, lastbang);\n\t_str = _str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\tvar parts = _str.split(\":\");\n\n\tvar out = new_buf(27);\n\tout.write_shift(4, 19);\n\n\t/* start cell */\n\tvar str = parts[0], cell = decode_cell(str);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\n\t/* end cell */\n\tstr = parts[1]; cell = decode_cell(str);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\n\t/* PtgRange */\n\tout.write_shift(1, 0x11);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a range with explicit sheet name [PtgArea3d] */\nfunction write_XLSBFormulaArea3D(_str, wb) {\n\tvar lastbang = _str.lastIndexOf(\"!\");\n\tvar sname = _str.slice(0, lastbang);\n\t_str = _str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\tvar range = decode_range(_str);\n\n\tvar out = new_buf(23);\n\tout.write_shift(4, 15);\n\n\tout.write_shift(1, 0x1B | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, range.s.r);\n\tout.write_shift(4, range.e.r);\n\tout.write_shift(2, range.s.c);\n\tout.write_shift(2, range.e.c);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n\n/* General Formula */\nfunction write_XLSBFormula(val/*:string|number*/, wb) {\n\tif(typeof val == \"number\") return write_XLSBFormulaNum(val);\n\tif(typeof val == \"boolean\") return write_XLSBFormulaBool(val);\n\tif(/^#(DIV\\/0!|GETTING_DATA|N\\/A|NAME\\?|NULL!|NUM!|REF!|VALUE!)$/.test(val)) return write_XLSBFormulaErr(+RBErr[val]);\n\tif(val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef(val);\n\tif(val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRange(val);\n\tif(val.match(/^#REF!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaArea3D(val, wb);\n\tif(val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef3D(val, wb);\n\tif(val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRangeWS(val, wb);\n\tif(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!#REF!$/.test(val)) return write_XLSBFormulaRefErr3D(val, wb);\n\tif(/^\".*\"$/.test(val)) return write_XLSBFormulaStr(val);\n\tif(/^[+-]\\d+$/.test(val)) return write_XLSBFormulaNum(parseInt(val, 10));\n\tthrow \"Formula |\" + val + \"| not supported for XLSB\";\n}\nvar write_XLSBNameParsedFormula = write_XLSBFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f/*:string*/)/*:string*/ {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\tf = f.replace(/\\$'([^']|'')+'/g, function($$) { return $$.slice(1); });\n\tf = f.replace(/\\$([^\\]\\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1; });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f/*:string*/)/*:string*/ {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {\n\tr = r.replace(/\\$'([^']|'')+'/g, function($$) { return $$.slice(1); });\n\tr = r.replace(/\\$([^\\]\\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1; });\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r/*:string*/)/*:string*/ {\n\treturn r.replace(/!/,\".\").replace(/:/, \":.\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst/*:SST*/, str/*:string*/, rev)/*:number*/ {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}/*:any*/); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C/*:number*/, col) {\n\tvar p = ({min:C+1,max:C+1}/*:any*/);\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\tif(col.level != null) { p.outlineLevel = p.level = col.level; }\n\treturn p;\n}\n\nfunction default_margins(margins/*:Margins*/, mode/*:?string*/) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles/*:Array<any>*/, cell/*:Cell*/, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF__load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles, date1904) {\n\ttry {\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(p.t === 'z' && !opts.cellStyles) return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\tif((!opts || opts.cellText !== false) && p.t !== 'z') try {\n\t\tif(table_fmt[fmtid] == null) SSF__load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v, !!date1904);\n\t\t\t\tif((dd|0) === dd) p.w = dd.toString(10);\n\t\t\t\telse p.w = SSF_general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF_general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v, !!date1904),_ssfopts);\n\t\telse p.w = SSF_format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws/*:Worksheet*/, sname/*:string*/, i/*:number*/) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w+:)?mergeCell ref=[\"'][A-Z0-9:]+['\"]\\s*[\\/]?>/g;\nvar hlinkregex = /<(?:\\w+:)?hyperlink [^<>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w+:)?col\\b[^<>]*[\\/]?>/g;\nvar afregex = /<(?:\\w+:)?autoFilter[^>]*/g;\nvar marginregex= /<(?:\\w+:)?pageMargins[^<>]*\\/>/g;\nvar sheetprregex = /<(?:\\w+:)?sheetPr\\b[^<>]*?\\/>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = ({}/*:any*/); if(opts.dense) s[\"!data\"] = [];\n\tvar refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch/*:?any*/ = str_match_xml_ns(data, \"sheetData\");\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\telse if((sheetPr = str_match_xml_ns(data1, \"sheetPr\"))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||\"\", s, wb, idx, styles, themes);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref && !(opts && opts.nodim)) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = str_match_xml_ns(data1, \"sheetViews\");\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns/*:Array<ColInfo>*/ = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles, wb);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges/*:Array<Range>*/ = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\t/* legacyDrawing */\n\tvar m;\n\tif((m = data2.match(/legacyDrawing r:id=\"(.*?)\"/))) s['!legrel'] = m[1];\n\n\tif(opts && opts.nodim) refguess.s.c = refguess.s.r = 0;\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges/*:Array<Range>*/)/*:string*/ {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tparse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n\tvar needed = false;\n\tvar props = {}, payload = null;\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\tneeded = true;\n\t\tprops.codeName = utf8write(escapexml(cname));\n\t}\n\n\tif(ws && ws[\"!outline\"]) {\n\t\tvar outlineprops = {summaryBelow:1, summaryRight:1};\n\t\tif(ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n\t\tif(ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n\t\tpayload = (payload||\"\") + writextag('outlinePr', null, outlineprops);\n\t}\n\n\tif(!needed && !payload) return;\n\to[o.length] = (writextag('sheetPr', payload, props));\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\n\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\"deleteColumns\", \"deleteRows\",\n\t\"sort\", \"autoFilter\", \"pivotTables\"\n];\nfunction write_ws_xml_protection(sp)/*:string*/ {\n\t// algorithmName, hashValue, saltValue, spinCount\n\tvar o = ({sheet:1}/*:any*/);\n\tsheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tsheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {\n\tvar dense = s[\"!data\"] != null;\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+unescapexml(val.location);\n\t\t} else {\n\t\t\tval.Target = \"#\" + unescapexml(val.location);\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_col(C) + encode_row(R);\n\t\t\tif(dense) {\n\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\tif(!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[\"!data\"][R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin)/*:string*/ {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tif(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\nfunction write_ws_xml_cols(ws, cols)/*:string*/ {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data/*:string*/) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx)/*:string*/ {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref); break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^<>a-z][^<>]*)?\\/?>/g;\nfunction parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {\n\tif(!wb.Views) wb.Views = [{}];\n\t(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {\n\t\tvar tag = parsexmltag(r);\n\t\t// $FlowIgnore\n\t\tif(!wb.Views[i]) wb.Views[i] = {};\n\t\t// $FlowIgnore\n\t\tif(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n\t\t// $FlowIgnore\n\t\tif(tag.rightToLeft && parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb)/*:string*/ {\n\tvar sview = ({workbookViewId:\"0\"}/*:any*/);\n\t// $FlowIgnore\n\tif((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell/*:Cell*/, ref, ws, opts, idx, wb, date1904)/*:string*/ {\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\tif((cell.v === undefined || cell.t === \"z\" && !(opts||{}).sheetStubs) && typeof cell.f !== \"string\" && typeof cell.z == \"undefined\") return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tif(cell.t !== \"z\") switch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n':\n\t\t\tif(isNaN(cell.v)) { cell.t = \"e\"; vv = BErr[cell.v = 0x24]; } // #NUM!\n\t\t\telse if(!isFinite(cell.v)) { cell.t = \"e\"; vv = BErr[cell.v = 0x07]; } // #DIV/0!\n\t\t\telse vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts && opts.cellDates) {\n\t\t\t\tvar _vv = parseDate(cell.v, date1904);\n\t\t\t\tvv = _vv.toISOString();\n\t\t\t\tif(_vv.getUTCFullYear() < 1900) vv = vv.slice(vv.indexOf(\"T\") + 1).replace(\"Z\",\"\");\n\t\t\t} else {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v, date1904), date1904));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = table_fmt[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = (cell.t == \"z\" || cell.v == null)? \"\" : writetag('v', escapexml(vv)), o = ({r:ref}/*:any*/);\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tcase 'z': break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n\t\t\tif(opts && opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\telse o.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(typeof cell.f == \"string\" && cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) {\n\t\tcell.l.display = escapexml(vv);\n\t\tws['!links'].push([ref, cell.l]);\n\t}\n\tif(cell.D) o.cm = 1;\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = /*#__PURE__*/(function() {\n\tvar cellregex = /<(?:\\w+:)?c[ \\/>]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\nreturn function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles, wb) {\n\tvar ri = 0, x = \"\", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d=\"\", p/*:any*/;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = [];\n\tvar dense = s[\"!data\"] != null;\n\tvar rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;\n\tvar sheetStubs = !!opts.sheetStubs;\n\tvar date1904 = !!((wb||{}).WBProps||{}).date1904;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tvar rstarti = 0;\n\t\touta: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {\n\t\t\tcase \">\" /*62*/:\n\t\t\t\tif(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != \"/\") { ++ri; break outa; }\n\t\t\t\tif(opts && opts.cellStyles) {\n\t\t\t\t\t// TODO: avoid duplication\n\t\t\t\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\t\t\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\t\t\t\trowobj = {}; rowrite = false;\n\t\t\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\t\t\tif(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }\n\t\t\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"<\" /*60*/: rstarti = ri; break;\n\t\t}\n\t\tif(rstarti >= ri) break;\n\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(!opts.nodim) {\n\t\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\t\t}\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != \"<\") break;\n\t\tcells = cells.slice(rslice);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"}/*:any*/);\n\n\t\t\tif((cref=str_match_xml_ns(d, \"v\"))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=str_match_xml_ns(d, \"f\"))!= null /*:: && cref != null*/) {\n\t\t\t\t\tif(cref[1] == \"\") {\n\t\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\t\tp.f=unescapexml(utf8read(cref[1]), true);\n\t\t\t\t\t\tif(!opts.xlfn) p.f = _xlfn(p.f);\n\t\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t\t} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\t\tvar ___f = unescapexml(utf8read(cref[1]));\n\t\t\t\t\t\t\tif(!opts.xlfn) ___f = _xlfn(___f);\n\t\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^<>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? unescapexml(utf8read(p.v), true) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = str_match_xml_ns(d, \"is\");\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) {\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t} else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, date1904);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, date1904), date1904); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tcf = null;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles, date1904);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.v = numdate(p.v + (date1904 ? 1462 : 0)); p.t = typeof p.v == \"number\" ? 'n' : 'd'; }\n\t\t\tif(tag.cm && opts.xlmeta) {\n\t\t\t\tvar cm = (opts.xlmeta.Cell||[])[+tag.cm-1];\n\t\t\t\tif(cm && cm.type == 'XLDAPR') p.D = true;\n\t\t\t}\n\t\t\tvar _r;\n\t\t\tif(opts.nodim) {\n\t\t\t\t_r = decode_cell(tag.r);\n\t\t\t\tif(guess.s.r > _r.r) guess.s.r = _r.r;\n\t\t\t\tif(guess.e.r < _r.r) guess.e.r = _r.r;\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\t_r = decode_cell(tag.r);\n\t\t\t\tif(!s[\"!data\"][_r.r]) s[\"!data\"][_r.r] = [];\n\t\t\t\ts[\"!data\"][_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*//*::, rels*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], r/*:Array<string>*/ = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols/*:Array<string>*/ = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = ws[\"!data\"] != null;\n\tvar params = ({r:rr}/*:any*/), row/*:RowInfo*/, height = -1;\n\tvar date1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[\"!data\"][R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb, date1904)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr}/*:any*/);\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1}/*:any*/);\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nfunction write_ws_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('worksheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tvar _drawing = [];\n\n\twrite_ws_xml_sheetpr(ws, wb, idx, opts, o);\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(/*::(*/ws['!links']/*::||[])*/.length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\t/*::(*/ws['!links']/*::||[])*/.forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]}/*:any*/);\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#[\\s\\S]*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\trel.display = l[1].display;\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\n\tif(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\n\t/* pageSetup */\n\t/* headerFooter */\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(_drawing.length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!drawing'] = _drawing;\n\t}\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* legacyDrawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extLst */\n\n\tif(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({}/*:any*/);\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R/*:number*/, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = dense ? (ws[\"!data\"][caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo(/*::data, length*/) {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\tvar f = data[data.l]; ++data.l;\n\tz.above = !(f & 0x40);\n\tz.left  = !(f & 0x80);\n\t/* TODO: pull flags */\n\tdata.l += 18;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tvar f = 0xC0;\n\tif(outl) {\n\t\tif(outl.above) f &= ~0x40;\n\t\tif(outl.left)  f &= ~0x80;\n\t}\n\to.write_shift(1, f);\n\tfor(var i = 1; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\treturn [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(4);\n\treturn write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\nfunction parse_BrtShortBool(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(5);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v);\n\treturn o;\n}\nfunction parse_BrtShortError(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v);\n\to.write_shift(2, 0);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\nfunction parse_BrtShortIsst(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortReal(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortRk(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RichStr(data);\n\treturn [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tvar data = cell.v == null ? \"\" : String(cell.v);\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(data, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n\tvar data = cell.v == null ? \"\" : String(cell.v);\n\tif(o == null) o = new_buf(8 + 4 * data.length);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_XLWideString(data, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length/*::, opts*/) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane(/*data, length, opts*/) {\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C/*:number*/, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\tif(col.level) flags |= (col.level << 8);\n\to.write_shift(2, flags); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {\n\tvar margins = ({}/*:any*/);\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins/*:Margins*/, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins/*:any*/)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data/*::, length, opts*/) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\n\t\t/*:: if(o == null) throw \"unreachable\"; */\n\t\tif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\nfunction parse_BrtDVal(/*data, length, opts*/) {\n}\nfunction parse_BrtDVal14(/*data, length, opts*/) {\n}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s/*:Worksheet*/ = ({}); if(opts.dense) s[\"!data\"] = [];\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;\n\tvar merges/*:Array<Range>*/ = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtShortReal\", f:parse_BrtShortReal };\n\n\tvar cm, vm;\n\tvar date1904 = 1462 * +!!((wb||{}).WBProps||{}).date1904;\n\n\trecordhopper(data, function ws_parse(val, RR, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\tcase 0x000D: /* 'BrtShortRk' */\n\t\t\tcase 0x000E: /* 'BrtShortError' */\n\t\t\tcase 0x000F: /* 'BrtShortBool' */\n\t\t\tcase 0x0010: /* 'BrtShortReal' */\n\t\t\tcase 0x0011: /* 'BrtShortSt' */\n\t\t\tcase 0x0012: /* 'BrtShortIsst' */\n\t\t\tcase 0x003E: /* 'BrtCellRString' */\n\t\t\t\tp = ({t:val[2]}/*:any*/);\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t\tcase 'is': p.t = 's'; p.v = val[1].t; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles, date1904>0);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[\"!data\"][R]) s[\"!data\"][R] = []; s[\"!data\"][R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF_parse_date_code(p.v + date1904); if(_d) { p.t = 'd'; p.v = new Date(Date.UTC(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u)); }\n\t\t\t\t}\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\tcase 0x000C: /* 'BrtShortBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:void 0}/*:any*/);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[\"!data\"][R]) s[\"!data\"][R] = []; s[\"!data\"][R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x0031: { /* 'BrtCellMeta' */\n\t\t\t\tcm = ((opts.xlmeta||{}).Cell||[])[val-1];\n\t\t\t} break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\tif(!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[\"!data\"][R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_col(C) + encode_row(R);\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr])/*:any*/);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\t\tif(val) s[\"!legrel\"] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tif(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\t\tbreak;\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(RR.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\tif(rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, ws/*:Worksheet*/, last_seen/*:boolean*/, date1904/*:boolean*/)/*:boolean*/ {\n\tvar o/*:any*/ = ({r:R, c:C}/*:any*/);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tif(cell.v === undefined) return false;\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || table_fmt[14];\n\t\t\tcell.v = datenum(parseDate(cell.v, date1904), date1904); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v == null ? \"\" : String(cell.v)/*:any*/), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\tif(last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));\n\t\t\t\telse write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\tif(last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));\n\t\t\t\telse write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));\n\t\t\t\telse write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n\t\t\t} else if(isNaN(cell.v)) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({t:\"e\", v: 0x24}, o)); // #NUM!\n\t\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({t:\"e\", v: 0x24}, o)); // #NUM!\n\t\t\t} else if(!isFinite(cell.v)) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({t:\"e\", v: 0x07}, o)); // #DIV/0!\n\t\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({t:\"e\", v: 0x07}, o)); // #DIV/0!\n\t\t\t} else {\n\t\t\t\tif(last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));\n\t\t\t\telse write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n\t\t\t} return true;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\tif(last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));\n\t\t\telse write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n\t\t\treturn true;\n\t\tcase 'e':\n\t\t\to.t = \"e\";\n\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));\n\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n\t\t\treturn true;\n\t}\n\tif(last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));\n\telse write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n\treturn true;\n}\n\nfunction write_CELLTABLE(ba, ws/*:Worksheet*/, idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar date1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\twrite_record(ba, 0x0091 /* BrtBeginSheetData */);\n\tvar dense = ws[\"!data\"] != null;\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tvar last_seen = false;\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\tif(!cell) { last_seen = false; continue; }\n\t\t\t/* write cell */\n\t\t\tlast_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen, date1904);\n\t\t}\n\t}\n\twrite_record(ba, 0x0092 /* BrtEndSheetData */);\n}\n\nfunction write_MERGECELLS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m)); });\n\twrite_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\n\nfunction write_COLINFOS(ba, ws/*:Worksheet*//*::, idx:number, opts, wb:Workbook*/) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 0x0186 /* BrtBeginColInfos */);\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m)); });\n\twrite_record(ba, 0x0187 /* BrtEndColInfos */);\n}\n\nfunction write_IGNOREECS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n\twrite_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\n\nfunction write_HLINKS(ba, ws/*:Worksheet*/, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#[\\s\\S]*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws/*:Worksheet*/, idx/*:number*/, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n\tif(!ws['!autofilter']) return;\n\tvar data = ws['!autofilter'];\n\tvar ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n\t/* Update FilterDatabase defined name for the worksheet */\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref); break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref)  });\n\n\twrite_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, 0x0085 /* BrtBeginWsViews */);\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, 0x008A /* BrtEndWsView */);\n\t}\n\t/* *FRT */\n\twrite_record(ba, 0x0086 /* BrtEndWsViews */);\n}\n\nfunction write_WSFMTINFO(/*::ba, ws*/) {\n\t/* [ACWSFMTINFO] */\n\t// write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx/*:number*/, opts, wb/*:Workbook*/, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c/*:string*/ = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\tif(wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n\twrite_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws, wb, idx);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\nfunction parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {\n\tvar col/*:Array<number|string>*/ = [];\n\tvar num = data.match(/^<c:numCache>/);\n\tvar f;\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\"[^<>\\/]*><c:v>([^<])<\\/c:v><\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*)\"[^<>\\/]*><c:v>([^<]*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = num ? +q[2] : q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((str_match_xml(data, \"c:formatCode\") || [\"\",\"General\"])[1]);\n\n\t(str_match_ng(data, \"<c:f>\", \"</c:f>\")||[]).forEach(function(F) { f = F.replace(/<[^<>]*>/g,\"\"); });\n\n\treturn [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {\n\tvar cs/*:Worksheet*/ = ((csheet || {\"!type\":\"chart\"})/*:any*/);\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(str_match_ng(data, \"<c:numCache>\", \"</c:numCache>\")||[]).forEach(function(nc) {\n\t\tvar cache = parse_Cache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tif(cs[\"!data\"]) {\n\t\t\t\tif(!cs[\"!data\"][i]) cs[\"!data\"][i] = [];\n\t\t\t\tcs[\"!data\"][i][C] = {t:'n', v:n, z:cache[1] };\n\t\t\t} else cs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = ({'!type':\"chart\", '!drawel':null, '!rel':\"\"}/*:any*/);\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\n//function write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n//\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n//\t\t'xmlns': XMLNS_main[0],\n//\t\t'xmlns:r': XMLNS.r\n//\t})];\n//\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n//\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n//\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n//\treturn o.join(\"\");\n//}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length/*:number*/) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!drawel':null, '!rel':\"\"};\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\n//function write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n//\tvar ba = buf_array();\n//\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n//\t/* [BrtCsProp] */\n//\t/* CSVIEWS */\n//\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n//\t/* [USERCSVIEWS] */\n//\t/* [BrtMargins] */\n//\t/* [BrtCsPageSetup] */\n//\t/* [HEADERFOOTER] */\n//\t/* BrtDrawing */\n//\t/* [BrtLegacyDrawing] */\n//\t/* [BrtLegacyDrawingHF] */\n//\t/* [BrtBkHim] */\n//\t/* [WEBPUBITEMS] */\n//\t/* FRTCHARTSHEET */\n//\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n//\treturn ba.end();\n//}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb/*:Workbook*/)/*:string*/ {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = /*#__PURE__*/\":][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {\n\ttry {\n\t\tif(n == \"\") throw new Error(\"Sheet name cannot be blank\");\n\t\tif(n.length > 31) throw new Error(\"Sheet name cannot exceed 31 chars\");\n\t\tif(n.charCodeAt(0) == 0x27 || n.charCodeAt(n.length - 1) == 0x27) throw new Error(\"Sheet name cannot start or end with apostrophe (')\");\n\t\tif(n.toLowerCase() == \"history\") throw new Error(\"Sheet name cannot be 'History'\");\n\t\tbadchars.forEach(function(c) {\n\t\t\tif(n.indexOf(c) == -1) return;\n\t\t\tthrow new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t});\n\t} catch(e) { if(safe) return false; throw e; }\n\treturn true;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\twb.SheetNames.forEach(function(n, i) {\n\t\tvar ws = wb.Sheets[n];\n\t\tif(!ws || !ws[\"!autofilter\"]) return;\n\t\tvar DN;\n\t\tif(!wb.Workbook) wb.Workbook = {};\n\t\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\t\twb.Workbook.Names.forEach(function(dn) { if(dn.Name == \"_xlnm._FilterDatabase\" && dn.Sheet == i) DN = dn; });\n\t\tvar nn = formula_quote_sheet_name(n) + \"!\" + fix_range(ws[\"!autofilter\"].ref);\n\t\tif(DN) DN.Ref = nn;\n\t\telse wb.Workbook.Names.push({Name: \"_xlnm._FilterDatabase\", Sheet: i, Ref: nn});\n\t});\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts)/*:WorkbookFile*/ {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" }/*::)*/;\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing':\n\t\t\t\tbreak;\n\t\t\tcase '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection':\n\t\t\t\tbreak;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22 smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nfunction write_wb_xml(wb/*:Workbook*//*::, opts:?WriteOpts*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to[o.length] = writextag('workbook', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t//'xmlns:mx': XMLNS.mx,\n\t\t//'xmlns:s': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t});\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr/*:any*/ = ({codeName:\"ThisWorkbook\"}/*:any*/);\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\n\t\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]/*:any*/);\n\t\t});\n\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\tif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews only written if first worksheet is hidden */\n\tif(sheets && sheets[0] && !!sheets[0].Hidden) {\n\t\to[o.length] = \"<bookViews>\";\n\t\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\t\tif(!sheets[i]) break;\n\t\t\tif(!sheets[i].Hidden) break;\n\t\t}\n\t\tif(i == wb.SheetNames.length) i = 0;\n\t\to[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n\t\to[o.length] = \"</bookViews>\";\n\t}\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))}/*:any*/);\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d/*:any*/ = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', escapexml(n.Ref), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length/*:number*/) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length)/*:WBProps*/ {\n\tvar o/*:WBProps*/ = ({}/*:any*/);\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data/*:?WBProps*/, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.date1904) flags |= 0x01;\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tvar flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula;\n\tvar comment = \"\";\n\ttry {\n\t\tformula = parse_XLSBNameParsedFormula(data, 0, opts);\n\t\ttry {\n\t\t\tcomment = parse_XLNullableWideString(data);\n\t\t} catch(e){}\n\t} catch(e) { console.error(\"Could not parse defined name \" + name); }\n\tif(flags & 0x20) name = \"_xlnm.\" + name;\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula, Flags: flags}/*:any*/);\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\nfunction write_BrtName(name, wb) {\n\tvar o = new_buf(9);\n\tvar flags = 0;\n\tvar dname = name.Name;\n\tif(XLSLblBuiltIn.indexOf(dname) > -1) { flags |= 0x20; dname = dname.slice(6); }\n\to.write_shift(4, flags); // flags\n\to.write_shift(1, 0); // chKey\n\to.write_shift(4, name.Sheet == null ? 0xFFFFFFFF : name.Sheet);\n\n\tvar arr = [\n\t\to,\n\t\twrite_XLWideString(dname),\n\t\twrite_XLSBNameParsedFormula(name.Ref, wb)\n\t];\n\tif(name.Comment) arr.push(write_XLNullableWideString(name.Comment));\n\telse {\n\t\tvar x = new_buf(4);\n\t\tx.write_shift(4, 0xFFFFFFFF);\n\t\tarr.push(x);\n\t}\n\n\t// if macro (flags & 0x0F):\n\t// write_shift(4, 0xFFFFFFFF);\n\t// write_XLNullableWideString(description)\n\t// write_XLNullableWideString(helpTopic)\n\t// write_shift(4, 0xFFFFFFFF);\n\n\treturn bconcat(arr);\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts)/*:WorkbookFile*/ {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]/*:any*/);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ };\n\n\trecordhopper(data, function hopper_wb(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = val.Ptg ? stringify_formula(val.Ptg, null, null, supbooks, opts) : \"#REF!\";\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x008F: /* 'BrtBeginBundleShs' */\n\t\t\tcase 0x0298: /* 'BrtBeginFnGroup' */\n\t\t\tcase 0x0161: /* 'BrtBeginExternals' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */ && state[state.length-1] != 0x0023 /* BrtFRTBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb/*:any*/).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb/*::, opts*/) {\n\twrite_record(ba, 0x008F /* BrtBeginBundleShs */);\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb/*::, opts*/) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, 0x0087 /* BrtBeginBookViews */);\n\twrite_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\nfunction write_BRTNAMES(ba, wb) {\n\tif(!wb.Workbook || !wb.Workbook.Names) return;\n\twb.Workbook.Names.forEach(function(name) { try {\n\t\tif(name.Flags & 0x0e) return; // TODO: macro name write\n\t\twrite_record(ba, 0x0027 /* BrtName */, write_BrtName(name, wb));\n\t} catch(e) {\n\t\tconsole.error(\"Could not serialize defined name \" + JSON.stringify(name));\n\t} });\n}\n\nfunction write_SELF_EXTERNS_xlsb(wb) {\n\tvar L = wb.SheetNames.length;\n\tvar o = new_buf(12 * L + 28);\n\to.write_shift(4, L + 2);\n\to.write_shift(4, 0); o.write_shift(4, -2); o.write_shift(4, -2); // workbook-level reference\n\to.write_shift(4, 0); o.write_shift(4, -1); o.write_shift(4, -1); // #REF!...\n\tfor(var i = 0; i < L; ++i) {\n\t\to.write_shift(4, 0); o.write_shift(4, i); o.write_shift(4, i);\n\t}\n\treturn o;\n}\nfunction write_EXTERNALS_xlsb(ba, wb) {\n\twrite_record(ba, 0x0161 /* BrtBeginExternals */);\n\twrite_record(ba, 0x0165 /* BrtSupSelf */);\n\twrite_record(ba, 0x016A /* BrtExternSheet */, write_SELF_EXTERNS_xlsb(wb, 0));\n\twrite_record(ba, 0x0162 /* BrtEndExternals */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0083 /* BrtBeginBook */);\n\twrite_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\twrite_EXTERNALS_xlsb(ba, wb);\n\tif((wb.Workbook||{}).Names) write_BRTNAMES(ba, wb);\n\t/* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, 0x0084 /* BrtEndBook */);\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data/*:any*/), opts);\n\treturn parse_wb_xml((data/*:any*/), opts);\n}\n\nfunction parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name/*:string*/, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data/*:any*/), themes, opts);\n\treturn parse_sty_xml((data/*:any*/), themes, opts);\n}\n\nfunction parse_sst(data, name/*:string*/, opts)/*:SST*/ {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data/*:any*/), opts);\n\treturn parse_sst_xml((data/*:any*/), opts);\n}\n\nfunction parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data/*:any*/), opts);\n\treturn parse_comments_xml((data/*:any*/), opts);\n}\n\nfunction parse_cc(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data/*:any*/), name, opts);\n\treturn parse_cc_xml((data/*:any*/), name, opts);\n}\n\nfunction parse_xlink(data, rel, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data/*:any*/), rel, name, opts);\n\treturn parse_xlink_xml((data/*:any*/), rel, name, opts);\n}\n\nfunction parse_xlmeta(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlmeta_bin((data/*:any*/), name, opts);\n\treturn parse_xlmeta_xml((data/*:any*/), name, opts);\n}\nvar attregexg2=/\\b((?:\\w+:)?[\\w]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/\\b((?:\\w+:)?[\\w]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag/*:string*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*: {[string]:string}*/;\n\nfunction xlml_format(format, value, date1904)/*:string*/ {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF_general(value);\n\treturn SSF_format(fmt, value, {date1904: !!date1904});\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val/*:string*/) {\n\tvar oval/*:any*/ = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell/*:Cell*/, nf, o, date1904) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = cell.v.toString(10);\n\t\t\t\telse cell.w = SSF_general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF_general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v, date1904);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n\t\t\tvar _d = SSF_parse_date_code(cell.v + (date1904 ? 1462 : 0)); if(_d) { cell.t = 'd'; cell.v = new Date(Date.UTC(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u)); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o, date1904) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tvar ssid = styles[sid];\n\t\tif(ssid.nf) nf = ssid.nf;\n\t\tif(ssid.Interior) interiors.push(ssid.Interior);\n\t\tif(!ssid.Parent) break;\n\t\tsid = ssid.Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = (xml.indexOf(\"<\") > -1 ? unescapexml(ss||xml).replace(/<[^<>]*>/g, \"\") : cell.r); // todo: BR etc\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = datenum(parseDate(xml, date1904), date1904);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault:\n\t\t\tif(xml == \"\" && ss == \"\") { cell.t = 'z'; }\n\t\t\telse { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }\n\t\t\tbreak;\n\t}\n\tsafe_format_xlml(cell, nf, o, date1904);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_prefix_dname(dname) {\n\treturn XLSLblBuiltIn.indexOf(\"_xlnm.\" + dname) > -1 ? \"_xlnm.\" + dname : dname;\n}\n\nfunction xlml_clean_comment(comment/*:any*/) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tmake_ssf();\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\topening = opening.replace(/\".*?\"/g, \"\");\n\tif((opening.indexOf(\">\") & 1023) > Math.min((opening.indexOf(\",\") & 1023), (opening.indexOf(\";\")&1023))) { var _o = dup(opts); _o.type = \"string\"; return PRN.to_workbook(str, _o); }\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return html_to_workbook(str, opts);\n\n\tXLMLFormatMap = ({\n\t\t\"General Number\": \"General\",\n\t\t\"General Date\": table_fmt[22],\n\t\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\t\"Medium Date\": table_fmt[15],\n\t\t\"Short Date\": table_fmt[14],\n\t\t\"Long Time\": table_fmt[19],\n\t\t\"Medium Time\": table_fmt[18],\n\t\t\"Short Time\": table_fmt[20],\n\t\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\t\"Fixed\": table_fmt[2],\n\t\t\"Standard\": table_fmt[4],\n\t\t\"Percent\": table_fmt[10],\n\t\t\"Scientific\": table_fmt[11],\n\t\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n\t}/*:any*/);\n\n\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = ({}), sheetname = \"\"; if(opts.dense) cursheet[\"!data\"] = [];\n\tvar cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str_remove_ng(str, \"<!--\", \"-->\");\n\tvar raw_Rn3 = \"\";\n\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {\n\t\tcase 'data' /*case 'Data'*/:\n\t\t\tif(raw_Rn3 == \"data\") {\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*\"Comment\"*/\"comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts, Workbook.WBProps.date1904);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'cell' /*case 'Cell'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== void 0) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[\"!data\"][r]) cursheet[\"!data\"][r] = [];\n\t\t\t\t\t\tcursheet[\"!data\"][r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tif(cc > c || rr > r) merges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\t/*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n\t\t\t\t\tfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[\"!data\"][cmd]) cursheet[\"!data\"][cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[\"!data\"][cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'row' /*case 'Row'*/:\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = ({}); if(opts.dense) cursheet[\"!data\"] = [];\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'table' /*case 'Table'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'style' /*case 'Style'*/:\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'numberformat' /*case 'NumberFormat'*/:\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == null) { SSF__load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'column' /*case 'Column'*/:\n\t\t\tif(state[state.length-1][0] !== /*'Table'*/'table') break;\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'namedrange' /*case 'NamedRange'*/:\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName/*:DefinedName*/ = ({\n\t\t\t\tName: xlml_prefix_dname(_NamedRange.Name),\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t}/*:any*/);\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n\t\t\t/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'namedcell' /*case 'NamedCell'*/: break;\n\t\tcase 'b' /*case 'B'*/: break;\n\t\tcase 'i' /*case 'I'*/: break;\n\t\tcase 'u' /*case 'U'*/: break;\n\t\tcase 's' /*case 'S'*/: break;\n\t\tcase 'em' /*case 'EM'*/: break;\n\t\tcase 'h2' /*case 'H2'*/: break;\n\t\tcase 'h3' /*case 'H3'*/: break;\n\t\tcase 'sub' /*case 'Sub'*/: break;\n\t\tcase 'sup' /*case 'Sup'*/: break;\n\t\tcase 'span' /*case 'Span'*/: break;\n\t\tcase 'alignment' /*case 'Alignment'*/:\n\t\t\tbreak;\n\t\tcase 'borders' /*case 'Borders'*/: break;\n\t\tcase 'border' /*case 'Border'*/: break;\n\t\tcase 'font' /*case 'Font'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'interior' /*case 'Interior'*/:\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'protection' /*case 'Protection'*/: break;\n\n\t\tcase 'author' /*case 'Author'*/:\n\t\tcase 'title' /*case 'Title'*/:\n\t\tcase 'description' /*case 'Description'*/:\n\t\tcase 'created' /*case 'Created'*/:\n\t\tcase 'keywords' /*case 'Keywords'*/:\n\t\tcase 'subject' /*case 'Subject'*/:\n\t\tcase 'category' /*case 'Category'*/:\n\t\tcase 'company' /*case 'Company'*/:\n\t\tcase 'lastauthor' /*case 'LastAuthor'*/:\n\t\tcase 'lastsaved' /*case 'LastSaved'*/:\n\t\tcase 'lastprinted' /*case 'LastPrinted'*/:\n\t\tcase 'version' /*case 'Version'*/:\n\t\tcase 'revision' /*case 'Revision'*/:\n\t\tcase 'totaltime' /*case 'TotalTime'*/:\n\t\tcase 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n\t\tcase 'manager' /*case 'Manager'*/:\n\t\tcase 'contentstatus' /*case 'ContentStatus'*/:\n\t\tcase 'identifier' /*case 'Identifier'*/:\n\t\tcase 'language' /*case 'Language'*/:\n\t\tcase 'appname' /*case 'AppName'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'paragraphs' /*case 'Paragraphs'*/: break;\n\n\t\tcase 'styles' /*case 'Styles'*/:\n\t\tcase 'workbook' /*case 'Workbook'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'comment' /*case 'Comment'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(!parsexmlbool(tmp[\"ShowAlways\"]||\"0\")) comments.hidden = true;\n\t\t\t\tcomment = ({a:tmp.Author}/*:any*/);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'autofilter' /*case 'AutoFilter'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'name' /*case 'Name'*/: break;\n\n\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t} else {\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'pixelsperinch' /*case 'PixelsPerInch'*/:\n\t\t\tbreak;\n\t\tcase 'componentoptions' /*case 'ComponentOptions'*/:\n\t\tcase 'documentproperties' /*case 'DocumentProperties'*/:\n\t\tcase 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n\t\tcase 'pivottable' /*case 'PivotTable'*/:\n\t\tcase 'pivotcache' /*case 'PivotCache'*/:\n\t\tcase 'names' /*case 'Names'*/:\n\t\tcase 'mapinfo' /*case 'MapInfo'*/:\n\t\tcase 'pagebreaks' /*case 'PageBreaks'*/:\n\t\tcase 'querytable' /*case 'QueryTable'*/:\n\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\tcase 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\tcase 'smarttagtype' /*case 'SmartTagType'*/:\n\t\tcase 'smarttags' /*case 'SmartTags'*/:\n\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/:\n\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/:\n\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tcase 'null' /*case 'Null'*/: break;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"uof\"/*\"UOF\"*/) return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'allowpng' /*case 'AllowPNG'*/: break;\n\t\t\t\t\tcase 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;\n\t\t\t\t\tcase 'downloadcomponents' /*case 'DownloadComponents'*/: break;\n\t\t\t\t\tcase 'locationofcomponents' /*case 'LocationOfComponents'*/: break;\n\t\t\t\t\tcase 'colors' /*case 'Colors'*/: break;\n\t\t\t\t\tcase 'color' /*case 'Color'*/: break;\n\t\t\t\t\tcase 'index' /*case 'Index'*/: break;\n\t\t\t\t\tcase 'rgb' /*case 'RGB'*/: break;\n\t\t\t\t\tcase 'targetscreensize' /*case 'TargetScreenSize'*/: break;\n\t\t\t\t\tcase 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'toolbar' /*case 'Toolbar'*/: break;\n\t\t\t\t\tcase 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;\n\t\t\t\t\tcase 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;\n\t\t\t\t\tcase 'label' /*case 'Label'*/: break;\n\t\t\t\t\tcase 'caption' /*case 'Caption'*/: break;\n\t\t\t\t\tcase 'maxheight' /*case 'MaxHeight'*/: break;\n\t\t\t\t\tcase 'maxwidth' /*case 'MaxWidth'*/: break;\n\t\t\t\t\tcase 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'date1904' /*case 'Date1904'*/:\n\t\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\t\tWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hidehorizontalscrollbar' /*case 'HideHorizontalScrollBar'*/: break;\n\t\t\t\t\tcase 'hideverticalscrollbar' /*case 'HideVerticalScrollBar'*/: break;\n\t\t\t\t\tcase 'hideworkbooktabs' /*case 'HideWorkbookTabs'*/: break;\n\t\t\t\t\tcase 'windowheight' /*case 'WindowHeight'*/: break;\n\t\t\t\t\tcase 'windowwidth' /*case 'WindowWidth'*/: break;\n\t\t\t\t\tcase 'windowtopx' /*case 'WindowTopX'*/: break;\n\t\t\t\t\tcase 'windowtopy' /*case 'WindowTopY'*/: break;\n\t\t\t\t\tcase 'tabratio' /*case 'TabRatio'*/: break;\n\t\t\t\t\tcase 'protectstructure' /*case 'ProtectStructure'*/: break;\n\t\t\t\t\tcase 'protectwindow' /*case 'ProtectWindow'*/: break;\n\t\t\t\t\tcase 'protectwindows' /*case 'ProtectWindows'*/: break;\n\t\t\t\t\tcase 'activesheet' /*case 'ActiveSheet'*/: break;\n\t\t\t\t\tcase 'displayinknotes' /*case 'DisplayInkNotes'*/: break;\n\t\t\t\t\tcase 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;\n\t\t\t\t\tcase 'supbook' /*case 'SupBook'*/: break;\n\t\t\t\t\tcase 'sheetname' /*case 'SheetName'*/: break;\n\t\t\t\t\tcase 'sheetindex' /*case 'SheetIndex'*/: break;\n\t\t\t\t\tcase 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;\n\t\t\t\t\tcase 'sheetindexlast' /*case 'SheetIndexLast'*/: break;\n\t\t\t\t\tcase 'dll' /*case 'Dll'*/: break;\n\t\t\t\t\tcase 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;\n\t\t\t\t\tcase 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;\n\t\t\t\t\tcase 'iteration' /*case 'Iteration'*/: break;\n\t\t\t\t\tcase 'maxiterations' /*case 'MaxIterations'*/: break;\n\t\t\t\t\tcase 'maxchange' /*case 'MaxChange'*/: break;\n\t\t\t\t\tcase 'path' /*case 'Path'*/: break;\n\t\t\t\t\tcase 'xct' /*case 'Xct'*/: break;\n\t\t\t\t\tcase 'count' /*case 'Count'*/: break;\n\t\t\t\t\tcase 'selectedsheets' /*case 'SelectedSheets'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tcase 'uncalced' /*case 'Uncalced'*/: break;\n\t\t\t\t\tcase 'startupprompt' /*case 'StartupPrompt'*/: break;\n\t\t\t\t\tcase 'crn' /*case 'Crn'*/: break;\n\t\t\t\t\tcase 'externname' /*case 'ExternName'*/: break;\n\t\t\t\t\tcase 'formula' /*case 'Formula'*/: break;\n\t\t\t\t\tcase 'colfirst' /*case 'ColFirst'*/: break;\n\t\t\t\t\tcase 'collast' /*case 'ColLast'*/: break;\n\t\t\t\t\tcase 'wantadvise' /*case 'WantAdvise'*/: break;\n\t\t\t\t\tcase 'boolean' /*case 'Boolean'*/: break;\n\t\t\t\t\tcase 'error' /*case 'Error'*/: break;\n\t\t\t\t\tcase 'text' /*case 'Text'*/: break;\n\t\t\t\t\tcase 'ole' /*case 'OLE'*/: break;\n\t\t\t\t\tcase 'noautorecover' /*case 'NoAutoRecover'*/: break;\n\t\t\t\t\tcase 'publishobjects' /*case 'PublishObjects'*/: break;\n\t\t\t\t\tcase 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'refmoder1c1' /*case 'RefModeR1C1'*/: break;\n\t\t\t\t\tcase 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'owcversion' /*case 'OWCVersion'*/: break;\n\t\t\t\t\tcase 'height' /*case 'Height'*/: break;\n\t\t\t\t\tcase 'width' /*case 'Width'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'visible' /*case 'Visible'*/:\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'header' /*case 'Header'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'footer' /*case 'Footer'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pagemargins' /*case 'PageMargins'*/:\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'freezepanes' /*case 'FreezePanes'*/: break;\n\t\t\t\t\tcase 'frozennosplit' /*case 'FrozenNoSplit'*/: break;\n\n\t\t\t\t\tcase 'splithorizontal' /*case 'SplitHorizontal'*/:\n\t\t\t\t\tcase 'splitvertical' /*case 'SplitVertical'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'activerow' /*case 'ActiveRow'*/: break;\n\t\t\t\t\tcase 'activecol' /*case 'ActiveCol'*/: break;\n\t\t\t\t\tcase 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;\n\t\t\t\t\tcase 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;\n\n\t\t\t\t\tcase 'unsynced' /*case 'Unsynced'*/: break;\n\t\t\t\t\tcase 'print' /*case 'Print'*/: break;\n\t\t\t\t\tcase 'printerrors' /*case 'PrintErrors'*/: break;\n\t\t\t\t\tcase 'panes' /*case 'Panes'*/: break;\n\t\t\t\t\tcase 'scale' /*case 'Scale'*/: break;\n\t\t\t\t\tcase 'pane' /*case 'Pane'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'layout' /*case 'Layout'*/: break;\n\t\t\t\t\tcase 'pagesetup' /*case 'PageSetup'*/: break;\n\t\t\t\t\tcase 'selected' /*case 'Selected'*/: break;\n\t\t\t\t\tcase 'protectobjects' /*case 'ProtectObjects'*/: break;\n\t\t\t\t\tcase 'enableselection' /*case 'EnableSelection'*/: break;\n\t\t\t\t\tcase 'protectscenarios' /*case 'ProtectScenarios'*/: break;\n\t\t\t\t\tcase 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;\n\t\t\t\t\tcase 'horizontalresolution' /*case 'HorizontalResolution'*/: break;\n\t\t\t\t\tcase 'verticalresolution' /*case 'VerticalResolution'*/: break;\n\t\t\t\t\tcase 'numberofcopies' /*case 'NumberofCopies'*/: break;\n\t\t\t\t\tcase 'activepane' /*case 'ActivePane'*/: break;\n\t\t\t\t\tcase 'toprowvisible' /*case 'TopRowVisible'*/: break;\n\t\t\t\t\tcase 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;\n\t\t\t\t\tcase 'fittopage' /*case 'FitToPage'*/: break;\n\t\t\t\t\tcase 'rangeselection' /*case 'RangeSelection'*/: break;\n\t\t\t\t\tcase 'papersizeindex' /*case 'PaperSizeIndex'*/: break;\n\t\t\t\t\tcase 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'fitwidth' /*case 'FitWidth'*/: break;\n\t\t\t\t\tcase 'fitheight' /*case 'FitHeight'*/: break;\n\t\t\t\t\tcase 'commentslayout' /*case 'CommentsLayout'*/: break;\n\t\t\t\t\tcase 'zoom' /*case 'Zoom'*/: break;\n\t\t\t\t\tcase 'lefttoright' /*case 'LeftToRight'*/: break;\n\t\t\t\t\tcase 'gridlines' /*case 'Gridlines'*/: break;\n\t\t\t\t\tcase 'allowsort' /*case 'AllowSort'*/: break;\n\t\t\t\t\tcase 'allowfilter' /*case 'AllowFilter'*/: break;\n\t\t\t\t\tcase 'allowinsertrows' /*case 'AllowInsertRows'*/: break;\n\t\t\t\t\tcase 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;\n\t\t\t\t\tcase 'allowinsertcols' /*case 'AllowInsertCols'*/: break;\n\t\t\t\t\tcase 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;\n\t\t\t\t\tcase 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;\n\t\t\t\t\tcase 'allowformatcells' /*case 'AllowFormatCells'*/: break;\n\t\t\t\t\tcase 'allowsizecols' /*case 'AllowSizeCols'*/: break;\n\t\t\t\t\tcase 'allowsizerows' /*case 'AllowSizeRows'*/: break;\n\t\t\t\t\tcase 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].above = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tabcolorindex' /*case 'TabColorIndex'*/: break;\n\t\t\t\t\tcase 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;\n\t\t\t\t\tcase 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].left = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blackandwhite' /*case 'BlackAndWhite'*/: break;\n\t\t\t\t\tcase 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;\n\t\t\t\t\tcase 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;\n\t\t\t\t\tcase 'rowcolheadings' /*case 'RowColHeadings'*/: break;\n\t\t\t\t\tcase 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;\n\t\t\t\t\tcase 'noorientation' /*case 'NoOrientation'*/: break;\n\t\t\t\t\tcase 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;\n\t\t\t\t\tcase 'zeroheight' /*case 'ZeroHeight'*/: break;\n\t\t\t\t\tcase 'viewablerange' /*case 'ViewableRange'*/: break;\n\t\t\t\t\tcase 'selection' /*case 'Selection'*/: break;\n\t\t\t\t\tcase 'protectcontents' /*case 'ProtectContents'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;\n\t\t\t\t\tcase 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;\n\t\t\t\t\tcase 'compactrowindent' /*case 'CompactRowIndent'*/: break;\n\t\t\t\t\tcase 'location' /*case 'Location'*/: break;\n\t\t\t\t\tcase 'pivotfield' /*case 'PivotField'*/: break;\n\t\t\t\t\tcase 'orientation' /*case 'Orientation'*/: break;\n\t\t\t\t\tcase 'layoutform' /*case 'LayoutForm'*/: break;\n\t\t\t\t\tcase 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;\n\t\t\t\t\tcase 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;\n\t\t\t\t\tcase 'position' /*case 'Position'*/: break;\n\t\t\t\t\tcase 'pivotitem' /*case 'PivotItem'*/: break;\n\t\t\t\t\tcase 'datatype' /*case 'DataType'*/: break;\n\t\t\t\t\tcase 'datafield' /*case 'DataField'*/: break;\n\t\t\t\t\tcase 'sourcename' /*case 'SourceName'*/: break;\n\t\t\t\t\tcase 'parentfield' /*case 'ParentField'*/: break;\n\t\t\t\t\tcase 'ptlineitems' /*case 'PTLineItems'*/: break;\n\t\t\t\t\tcase 'ptlineitem' /*case 'PTLineItem'*/: break;\n\t\t\t\t\tcase 'countofsameitems' /*case 'CountOfSameItems'*/: break;\n\t\t\t\t\tcase 'item' /*case 'Item'*/: break;\n\t\t\t\t\tcase 'itemtype' /*case 'ItemType'*/: break;\n\t\t\t\t\tcase 'ptsource' /*case 'PTSource'*/: break;\n\t\t\t\t\tcase 'cacheindex' /*case 'CacheIndex'*/: break;\n\t\t\t\t\tcase 'consolidationreference' /*case 'ConsolidationReference'*/: break;\n\t\t\t\t\tcase 'filename' /*case 'FileName'*/: break;\n\t\t\t\t\tcase 'reference' /*case 'Reference'*/: break;\n\t\t\t\t\tcase 'nocolumngrand' /*case 'NoColumnGrand'*/: break;\n\t\t\t\t\tcase 'norowgrand' /*case 'NoRowGrand'*/: break;\n\t\t\t\t\tcase 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;\n\t\t\t\t\tcase 'hidden' /*case 'Hidden'*/: break;\n\t\t\t\t\tcase 'subtotal' /*case 'Subtotal'*/: break;\n\t\t\t\t\tcase 'basefield' /*case 'BaseField'*/: break;\n\t\t\t\t\tcase 'mapchilditems' /*case 'MapChildItems'*/: break;\n\t\t\t\t\tcase 'function' /*case 'Function'*/: break;\n\t\t\t\t\tcase 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;\n\t\t\t\t\tcase 'printsettitles' /*case 'PrintSetTitles'*/: break;\n\t\t\t\t\tcase 'mergelabels' /*case 'MergeLabels'*/: break;\n\t\t\t\t\tcase 'defaultversion' /*case 'DefaultVersion'*/: break;\n\t\t\t\t\tcase 'refreshname' /*case 'RefreshName'*/: break;\n\t\t\t\t\tcase 'refreshdate' /*case 'RefreshDate'*/: break;\n\t\t\t\t\tcase 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tcase 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;\n\t\t\t\t\tcase 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;\n\t\t\t\t\tcase 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'colbreaks' /*case 'ColBreaks'*/: break;\n\t\t\t\t\tcase 'colbreak' /*case 'ColBreak'*/: break;\n\t\t\t\t\tcase 'rowbreaks' /*case 'RowBreaks'*/: break;\n\t\t\t\t\tcase 'rowbreak' /*case 'RowBreak'*/: break;\n\t\t\t\t\tcase 'colstart' /*case 'ColStart'*/: break;\n\t\t\t\t\tcase 'colend' /*case 'ColEnd'*/: break;\n\t\t\t\t\tcase 'rowend' /*case 'RowEnd'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;\n\t\t\t\t\tcase 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;\n\t\t\t\t\tcase 'autofilterand' /*case 'AutoFilterAnd'*/: break;\n\t\t\t\t\tcase 'autofilteror' /*case 'AutoFilterOr'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'id' /*case 'Id'*/: break;\n\t\t\t\t\tcase 'autoformatfont' /*case 'AutoFormatFont'*/: break;\n\t\t\t\t\tcase 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;\n\t\t\t\t\tcase 'querysource' /*case 'QuerySource'*/: break;\n\t\t\t\t\tcase 'querytype' /*case 'QueryType'*/: break;\n\t\t\t\t\tcase 'enableredirections' /*case 'EnableRedirections'*/: break;\n\t\t\t\t\tcase 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;\n\t\t\t\t\tcase 'urlstring' /*case 'URLString'*/: break;\n\t\t\t\t\tcase 'htmltables' /*case 'HTMLTables'*/: break;\n\t\t\t\t\tcase 'connection' /*case 'Connection'*/: break;\n\t\t\t\t\tcase 'commandtext' /*case 'CommandText'*/: break;\n\t\t\t\t\tcase 'refreshinfo' /*case 'RefreshInfo'*/: break;\n\t\t\t\t\tcase 'notitles' /*case 'NoTitles'*/: break;\n\t\t\t\t\tcase 'nextid' /*case 'NextId'*/: break;\n\t\t\t\t\tcase 'columninfo' /*case 'ColumnInfo'*/: break;\n\t\t\t\t\tcase 'overwritecells' /*case 'OverwriteCells'*/: break;\n\t\t\t\t\tcase 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;\n\t\t\t\t\tcase 'textwizardsettings' /*case 'TextWizardSettings'*/: break;\n\t\t\t\t\tcase 'source' /*case 'Source'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'decimal' /*case 'Decimal'*/: break;\n\t\t\t\t\tcase 'thousandseparator' /*case 'ThousandSeparator'*/: break;\n\t\t\t\t\tcase 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;\n\t\t\t\t\tcase 'formatsettings' /*case 'FormatSettings'*/: break;\n\t\t\t\t\tcase 'fieldtype' /*case 'FieldType'*/: break;\n\t\t\t\t\tcase 'delimiters' /*case 'Delimiters'*/: break;\n\t\t\t\t\tcase 'tab' /*case 'Tab'*/: break;\n\t\t\t\t\tcase 'comma' /*case 'Comma'*/: break;\n\t\t\t\t\tcase 'autoformatname' /*case 'AutoFormatName'*/: break;\n\t\t\t\t\tcase 'versionlastedit' /*case 'VersionLastEdit'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\t\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'map' /*case 'Map'*/: break;\n\t\t\t\t\tcase 'entry' /*case 'Entry'*/: break;\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'xpath' /*case 'XPath'*/: break;\n\t\t\t\t\tcase 'field' /*case 'Field'*/: break;\n\t\t\t\t\tcase 'xsdtype' /*case 'XSDType'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'aggregate' /*case 'Aggregate'*/: break;\n\t\t\t\t\tcase 'elementtype' /*case 'ElementType'*/: break;\n\t\t\t\t\tcase 'attributetype' /*case 'AttributeType'*/: break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema' /*case 'schema'*/:\n\t\t\t\t\tcase 'element' /*case 'element'*/:\n\t\t\t\t\tcase 'complextype' /*case 'complexType'*/:\n\t\t\t\t\tcase 'datatype' /*case 'datatype'*/:\n\t\t\t\t\tcase 'all' /*case 'all'*/:\n\t\t\t\t\tcase 'attribute' /*case 'attribute'*/:\n\t\t\t\t\tcase 'extends' /*case 'extends'*/: break;\n\n\t\t\t\t\tcase 'row' /*case 'row'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'smarttags' /*case 'SmartTags'*/: break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(Rn[3].match(/!\\[CDATA/)) break;\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = dup(table_fmt);\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\tout.bookType = \"xlml\";\n\treturn out;\n}\n\nfunction parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64_decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n\t/*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(wb/*::, opts*/)/*:string*/ {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\tif((((wb||{}).Workbook||{}).WBProps||{}).date1904) return '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"><Date1904/></ExcelWorkbook>';\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts)/*:string*/ {\n\t/* Styles */\n\tvar styles/*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload/*:Array<string>*/ = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(table_fmt[xf.numFmtId])}));\n\n\t\tvar o = /*::(*/{\"ss:ID\": \"s\" + (21+id)}/*:: :any)*/;\n\t\tstyles.push(writextag('Style', payload.join(\"\"), o));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name.slice(0,6) == \"_xlnm.\" ? n.Name.slice(6) : n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb/*::, opts*/)/*:string*/ {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tvar o/*:Array<string>*/ = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments/*:Array<any>*/)/*:string*/ {\n\t/* TODO: test multiple comments */\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\tvar p = {};\n\t\tif(c.a) p[\"ss:Author\"] = c.a;\n\t\tif(!comments.hidden) p[\"ss:ShowAlways\"] = \"1\";\n\t\treturn writextag(\"Comment\", d, p);\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref/*:string*/, ws, opts, idx/*:number*/, wb, addr)/*:string*/{\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': if(!opts.sheetStubs) return \"\"; break;\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || table_fmt[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = cell.t == 'z' ? \"\" : ('<Data ss:Type=\"' + t + '\">' + _v + '</Data>');\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R/*:number*/, row)/*:string*/ {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws['!ref']) return \"\";\n\tvar range/*:Range*/ = safe_decode_range(ws['!ref']);\n\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\tvar o/*:Array<string>*/ = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k/*:any*/ = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_col(C) + encode_row(R), cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx/*:number*/, opts, wb/*:Workbook*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t/*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\tif(ws[\"!autofilter\"]) o.push('<AutoFilter x:Range=\"' + a1_to_rc(fix_range(ws[\"!autofilter\"].ref), {r:0,c:0}) + '\" xmlns=\"urn:schemas-microsoft-com:office:excel\"></AutoFilter>');\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts)/*:string*/ {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = dup(table_fmt);\n\tif(wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d/*:Array<string>*/ = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj/*:CFBEntry*/) {\n\tvar v = {};\n\tvar o = obj.content;\n\t/*:: if(o == null) return; */\n\n\t/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m/*:number*/ = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [ 0x003c, 0x043c, 0x0812, 0x0875, 0x087f ];\nfunction slurp(RecordType, R, blob, length/*:number*/, opts)/*:any*/ {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(RecordType) {\n\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809/* BOF */: case 0x002F /* FilePass */: case 0x0195 /* FileLock */: case 0x00E1 /* InterfaceHdr */: case 0x0196 /* RRDInfo */: case 0x0138 /* RRDHead */: case 0x0194 /* UsrExcl */: case 0x000a /* EOF */:\n\t\tbreak;\n\tcase 0x0085 /* BoundSheet8 */:\n\t\tbreak;\n\tdefault:\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar nextrt = __readUInt16LE(blob,blob.l), next = XLSRecordEnum[nextrt];\n\tvar start = 0;\n\twhile(next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(nextrt == 0x0812 /* ContinueFrt */) start += 4;\n\t\telse if(nextrt == 0x0875 || nextrt == 0x087f) {\n\t\t\tstart += 12;\n\t\t}\n\t\td = blob.slice(start,blob.l+4+l);\n\t\tbufs.push(d);\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs)/*:any*/);\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\tif(b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF && p.z == null) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF_general(p.v);\n\t\t}\n\t\telse p.w = SSF_format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF_parse_date_code(p.v + (date1904 ? 1462 : 0)); if(_d) { p.t = 'd'; p.v = new Date(Date.UTC(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u)); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t)/*:Cell*/ {\n\treturn ({v:val, ixfe:ixfe, t:t}/*:any*/);\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {\n\tvar wb = ({opts:{}}/*:any*/);\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out/*:Worksheet*/ = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\tvar Directory = {};\n\tvar range/*:Range*/ = ({}/*:any*/);\n\tvar last_formula = null;\n\tvar sst/*:SST*/ = ([]/*:any*/);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc/*:Cell*/, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar temp_val/*:Cell*/;\n\tvar country;\n\tvar XFs = []; /* XF records */\n\tvar palette/*:Array<[number, number, number]>*/ = [];\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};\n\tvar biff4w = false;\n\tvar get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(line/*:any*/, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({}/*:any*/);\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {\n\t\tif(!biff4w && file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[\"!data\"][cell.r]) out[\"!data\"][cell.r] = [];\n\t\t\t\tout[\"!data\"][cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t}/*:any*/);\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar objects = [];\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\tvar supbooks = ([]/*:any*/); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_RT = 0;\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl/*:?DefinedName*/;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(RecordType) == -1 /* BOF */) break;\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n\t\t\t}\n\t\t\tlast_RT = RecordType;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){\n\t\t\t\t\tblob.l += 10; length -= 10;\n\t\t\t\t} // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val/*:any*/ = ({}/*:any*/);\n\t\t\tif(RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;\n\t\t\telse val = /*::(*/slurp(RecordType, R, blob, length, opts)/*:: :any)*/;\n\t\t\t/*:: val = (val:any); */\n\t\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* BOF */) continue;\n\t\t\tswitch(RecordType) {\n\t\t\t\tcase 0x0022 /* Date1904 */:\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\twb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 0x0086 /* WriteProtect */: wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 0x002f /* FilePass */:\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x005c /* WriteAccess */: opts.lastuser = val; break;\n\t\t\t\tcase 0x0042 /* CodePage */:\n\t\t\t\t\tvar cpval = Number(val);\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(cpval) {\n\t\t\t\t\t\tcase 0x5212: cpval =  1200; break;\n\t\t\t\t\t\tcase 0x8000: cpval = 10000; break;\n\t\t\t\t\t\tcase 0x8001: cpval =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = cpval);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x013d /* RRTabId */: opts.rrtabid = val; break;\n\t\t\t\tcase 0x0019 /* WinProtect */: opts.winlocked = val; break;\n\t\t\t\tcase 0x01b7 /* RefreshAll */: wb.opts[\"RefreshAll\"] = val; break;\n\t\t\t\tcase 0x000c /* CalcCount */: wb.opts[\"CalcCount\"] = val; break;\n\t\t\t\tcase 0x0010 /* CalcDelta */: wb.opts[\"CalcDelta\"] = val; break;\n\t\t\t\tcase 0x0011 /* CalcIter */: wb.opts[\"CalcIter\"] = val; break;\n\t\t\t\tcase 0x000d /* CalcMode */: wb.opts[\"CalcMode\"] = val; break;\n\t\t\t\tcase 0x000e /* CalcPrecision */: wb.opts[\"CalcPrecision\"] = val; break;\n\t\t\t\tcase 0x005f /* CalcSaveRecalc */: wb.opts[\"CalcSaveRecalc\"] = val; break;\n\t\t\t\tcase 0x000f /* CalcRefMode */: opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 0x08a3 /* ForceFullCalculation */: wb.opts.FullCalc = val; break;\n\t\t\t\tcase 0x0081 /* WsBool */:\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tif(!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n\t\t\t\t\tif(!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 0x0043: /* BIFF2XF */ case 0x0243: /* BIFF3XF */ case 0x0443: /* BIFF4XF */\n\t\t\t\tcase 0x00e0 /* XF */:\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 0x01ae /* SupBook */:\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0023: case 0x0223 /* ExternName */:\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0018: case 0x0218 /* Lbl */:\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t}/*:DefinedName*/);\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0016 /* ExternCount */: opts.ExternCount = val; break;\n\t\t\t\tcase 0x0017 /* ExternSheet */:\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 0x0894 /* NameCmt */:\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0012 /* Protect */: out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 0x0013 /* Password */: if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 0x0085 /* BoundSheet8 */: {\n\t\t\t\t\tDirectory[opts.biff == 4 ? opts.snames.length : val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 0x000a /* EOF */: {\n\t\t\t\t\tif(--file_depth ? !biff4w : biff4w) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\t\t\t\t} break;\n\t\t\t\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809 /* BOF */: {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n\t\t\t\t\t\t0x0009: 2,\n\t\t\t\t\t\t0x0209: 3,\n\t\t\t\t\t\t0x0409: 4\n\t\t\t\t\t}[RecordType] || {\n\t\t\t\t\t\t0x0200: 2,\n\t\t\t\t\t\t0x0300: 3,\n\t\t\t\t\t\t0x0400: 4,\n\t\t\t\t\t\t0x0500: 5,\n\t\t\t\t\t\t0x0600: 8,\n\t\t\t\t\t\t0x0002: 2,\n\t\t\t\t\t\t0x0007: 2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\topts.biffguess = val.BIFFVer == 0;\n\t\t\t\t\tif(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }\n\t\t\t\t\tif(opts.biff == 4 && val.dt & 0x100) biff4w = true;\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++ && !biff4w) break;\n\t\t\t\t\tout = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\t\t\t\t\tif(opts.biff == 4 && biff4w) {\n\t\t\t\t\t\tcur_sheet = (Directory[opts.snames.indexOf(cur_sheet)+1] || {name:\"\"}).name;\n\t\t\t\t\t} else if(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\t\t\t\tcase 0x0203 /* Number */: case 0x0003 /* BIFF2NUM */: case 0x0002 /* BIFF2INT */: {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[\"!data\"][val.r]||[])[val.c]: out[encode_col(val.c) + encode_row(val.r)]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0005: case 0x0205 /* BoolErr */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x027e /* RK */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00bd /* MulRk */: {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0006: case 0x0206: case 0x0406 /* Formula */: {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[\"!data\"][_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x0007: case 0x0207 /* String */: {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 0x0021: case 0x0221 /* Array */: {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[\"!data\"][val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x04bc /* ShrFmla */: {\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fd /* LabelSst */:\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\tif(sst[val.isst].h) temp_val.h = sst[val.isst].h;\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0201 /* Blank */: if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00be /* MulBlank */: if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00d6 /* RString */:\n\t\t\t\tcase 0x0204 /* Label */: case 0x0004 /* BIFF2STR */:\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = (temp_val.XF && temp_val.XF.numFmtId) && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0x0000: case 0x0200 /* Dimensions */: {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fc /* SST */: {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x041e /* Format */: { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff >= 3 && opts.biff <= 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(table_fmt[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF__load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF__load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 0x001e /* BIFF2FORMAT */: {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(table_fmt[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF__load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x00e5 /* MergeCells */: merges = merges.concat(val); break;\n\n\t\t\t\tcase 0x005d /* Obj */: objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 0x01b6 /* TxO */: opts.lastobj.TxO = val; break;\n\t\t\t\tcase 0x007f /* ImData */: opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 0x01b8 /* HLink */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0800 /* HLinkTooltip */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x001c /* Note */: {\n\t\t\t\t\t/* TODO: comment continuation (row == -1 / 0xFFFF) */\n\t\t\t\t\tcc = options.dense ? (out[\"!data\"][val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tif(!cc) {\n\t\t\t\t\t\tif(options.dense) {\n\t\t\t\t\t\t\tif(!out[\"!data\"][val[0].r]) out[\"!data\"][val[0].r] = [];\n\t\t\t\t\t\t\tcc = out[\"!data\"][val[0].r][val[0].c] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcc = out[encode_cell(val[0])] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.e.r = Math.max(range.e.r, val[0].r);\n\t\t\t\t\t\trange.s.r = Math.min(range.s.r, val[0].r);\n\t\t\t\t\t\trange.e.c = Math.max(range.e.c, val[0].c);\n\t\t\t\t\t\trange.s.c = Math.min(range.s.c, val[0].c);\n\t\t\t\t\t}\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) cmnt = {a:\"SheetJ5\", t:val[1]};\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\t\tif(val[3] != null && !(val[3] & 0x02)) cc.c.hidden = true;\n\t\t\t\t\t}\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\t\t\t\tcase 0x087d /* XFExt */: update_xfext(XFs[val.ixfe], val.ext); break;\n\t\t\t\tcase 0x007d /* ColInfo */: {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0208 /* Row */: {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0026 /* LeftMargin */:\n\t\t\t\tcase 0x0027 /* RightMargin */:\n\t\t\t\tcase 0x0028 /* TopMargin */:\n\t\t\t\tcase 0x0029 /* BottomMargin */:\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][({0x26: \"left\", 0x27:\"right\", 0x28:\"top\", 0x29:\"bottom\"})[RecordType]] = val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x00a1 /* Setup */: // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x023e /* Window2 */: // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0092 /* Palette */: palette = val; break;\n\t\t\t\tcase 0x0896 /* Theme */: themes = val; break;\n\t\t\t\tcase 0x008c /* Country */: country = val; break;\n\t\t\t\tcase 0x01ba /* CodeName */: {\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\tif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t}\n\t\t} else {\n\t\t\tif(!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n\t\t\tblob.l += length;\n\t\t}\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(!wb.SheetNames.length && Preamble[\"!ref\"]) {\n\t\twb.SheetNames.push(\"Sheet1\");\n\t\t/*jshint -W069 */\n\t\tif(wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n\t\t/*jshint +W069 */\n\t} else wb.Preamble=Preamble;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Strings = sst;\n\twb.SSF = dup(table_fmt);\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb/*:CFBContainer*/, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '/!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb/*:Workbook*/, cfb/*:CFBContainer*/) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tvar DocSummaryRE/*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n\tvar SummaryRE/*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!Object.prototype.hasOwnProperty.call((wb.Props||{}), Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj/*:?CFBEntry*/, WB/*:?any*/;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64_decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb}/*:any*/);\n}\nvar /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;\n\nvar _data/*:?any*/;\nif(CompObj) /*::CompObjP = */parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);\nelse/*:: if(cfb instanceof CFBContainer) */ {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Works 4 for Mac */\n\telse if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:CFBContainer*/ {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n\t0x0000: { /* n:\"BrtRowHdr\", */ f:parse_BrtRowHdr },\n\t0x0001: { /* n:\"BrtCellBlank\", */ f:parse_BrtCellBlank },\n\t0x0002: { /* n:\"BrtCellRk\", */ f:parse_BrtCellRk },\n\t0x0003: { /* n:\"BrtCellError\", */ f:parse_BrtCellError },\n\t0x0004: { /* n:\"BrtCellBool\", */ f:parse_BrtCellBool },\n\t0x0005: { /* n:\"BrtCellReal\", */ f:parse_BrtCellReal },\n\t0x0006: { /* n:\"BrtCellSt\", */ f:parse_BrtCellSt },\n\t0x0007: { /* n:\"BrtCellIsst\", */ f:parse_BrtCellIsst },\n\t0x0008: { /* n:\"BrtFmlaString\", */ f:parse_BrtFmlaString },\n\t0x0009: { /* n:\"BrtFmlaNum\", */ f:parse_BrtFmlaNum },\n\t0x000A: { /* n:\"BrtFmlaBool\", */ f:parse_BrtFmlaBool },\n\t0x000B: { /* n:\"BrtFmlaError\", */ f:parse_BrtFmlaError },\n\t0x000C: { /* n:\"BrtShortBlank\", */ f:parse_BrtShortBlank },\n\t0x000D: { /* n:\"BrtShortRk\", */ f:parse_BrtShortRk },\n\t0x000E: { /* n:\"BrtShortError\", */ f:parse_BrtShortError },\n\t0x000F: { /* n:\"BrtShortBool\", */ f:parse_BrtShortBool },\n\t0x0010: { /* n:\"BrtShortReal\", */ f:parse_BrtShortReal },\n\t0x0011: { /* n:\"BrtShortSt\", */ f:parse_BrtShortSt },\n\t0x0012: { /* n:\"BrtShortIsst\", */ f:parse_BrtShortIsst },\n\t0x0013: { /* n:\"BrtSSTItem\", */ f:parse_RichStr },\n\t0x0014: { /* n:\"BrtPCDIMissing\" */ },\n\t0x0015: { /* n:\"BrtPCDINumber\" */ },\n\t0x0016: { /* n:\"BrtPCDIBoolean\" */ },\n\t0x0017: { /* n:\"BrtPCDIError\" */ },\n\t0x0018: { /* n:\"BrtPCDIString\" */ },\n\t0x0019: { /* n:\"BrtPCDIDatetime\" */ },\n\t0x001A: { /* n:\"BrtPCDIIndex\" */ },\n\t0x001B: { /* n:\"BrtPCDIAMissing\" */ },\n\t0x001C: { /* n:\"BrtPCDIANumber\" */ },\n\t0x001D: { /* n:\"BrtPCDIABoolean\" */ },\n\t0x001E: { /* n:\"BrtPCDIAError\" */ },\n\t0x001F: { /* n:\"BrtPCDIAString\" */ },\n\t0x0020: { /* n:\"BrtPCDIADatetime\" */ },\n\t0x0021: { /* n:\"BrtPCRRecord\" */ },\n\t0x0022: { /* n:\"BrtPCRRecordDt\" */ },\n\t0x0023: { /* n:\"BrtFRTBegin\", */ T:1 },\n\t0x0024: { /* n:\"BrtFRTEnd\", */ T:-1 },\n\t0x0025: { /* n:\"BrtACBegin\", */ T:1 },\n\t0x0026: { /* n:\"BrtACEnd\", */ T:-1 },\n\t0x0027: { /* n:\"BrtName\", */ f:parse_BrtName },\n\t0x0028: { /* n:\"BrtIndexRowBlock\" */ },\n\t0x002A: { /* n:\"BrtIndexBlock\" */ },\n\t0x002B: { /* n:\"BrtFont\", */ f:parse_BrtFont },\n\t0x002C: { /* n:\"BrtFmt\", */ f:parse_BrtFmt },\n\t0x002D: { /* n:\"BrtFill\", */ f:parse_BrtFill },\n\t0x002E: { /* n:\"BrtBorder\", */ f:parse_BrtBorder },\n\t0x002F: { /* n:\"BrtXF\", */ f:parse_BrtXF },\n\t0x0030: { /* n:\"BrtStyle\" */ },\n\t0x0031: { /* n:\"BrtCellMeta\", */ f:parse_Int32LE },\n\t0x0032: { /* n:\"BrtValueMeta\" */ },\n\t0x0033: { /* n:\"BrtMdb\" */ f:parse_BrtMdb },\n\t0x0034: { /* n:\"BrtBeginFmd\", */ T:1 },\n\t0x0035: { /* n:\"BrtEndFmd\", */ T:-1 },\n\t0x0036: { /* n:\"BrtBeginMdx\", */ T:1 },\n\t0x0037: { /* n:\"BrtEndMdx\", */ T:-1 },\n\t0x0038: { /* n:\"BrtBeginMdxTuple\", */ T:1 },\n\t0x0039: { /* n:\"BrtEndMdxTuple\", */ T:-1 },\n\t0x003A: { /* n:\"BrtMdxMbrIstr\" */ },\n\t0x003B: { /* n:\"BrtStr\" */ },\n\t0x003C: { /* n:\"BrtColInfo\", */ f:parse_ColInfo },\n\t0x003E: { /* n:\"BrtCellRString\", */ f:parse_BrtCellRString },\n\t0x003F: { /* n:\"BrtCalcChainItem$\", */ f:parse_BrtCalcChainItem$ },\n\t0x0040: { /* n:\"BrtDVal\", */ f:parse_BrtDVal },\n\t0x0041: { /* n:\"BrtSxvcellNum\" */ },\n\t0x0042: { /* n:\"BrtSxvcellStr\" */ },\n\t0x0043: { /* n:\"BrtSxvcellBool\" */ },\n\t0x0044: { /* n:\"BrtSxvcellErr\" */ },\n\t0x0045: { /* n:\"BrtSxvcellDate\" */ },\n\t0x0046: { /* n:\"BrtSxvcellNil\" */ },\n\t0x0080: { /* n:\"BrtFileVersion\" */ },\n\t0x0081: { /* n:\"BrtBeginSheet\", */ T:1 },\n\t0x0082: { /* n:\"BrtEndSheet\", */ T:-1 },\n\t0x0083: { /* n:\"BrtBeginBook\", */ T:1, f:parsenoop, p:0 },\n\t0x0084: { /* n:\"BrtEndBook\", */ T:-1 },\n\t0x0085: { /* n:\"BrtBeginWsViews\", */ T:1 },\n\t0x0086: { /* n:\"BrtEndWsViews\", */ T:-1 },\n\t0x0087: { /* n:\"BrtBeginBookViews\", */ T:1 },\n\t0x0088: { /* n:\"BrtEndBookViews\", */ T:-1 },\n\t0x0089: { /* n:\"BrtBeginWsView\", */ T:1, f:parse_BrtBeginWsView },\n\t0x008A: { /* n:\"BrtEndWsView\", */ T:-1 },\n\t0x008B: { /* n:\"BrtBeginCsViews\", */ T:1 },\n\t0x008C: { /* n:\"BrtEndCsViews\", */ T:-1 },\n\t0x008D: { /* n:\"BrtBeginCsView\", */ T:1 },\n\t0x008E: { /* n:\"BrtEndCsView\", */ T:-1 },\n\t0x008F: { /* n:\"BrtBeginBundleShs\", */ T:1 },\n\t0x0090: { /* n:\"BrtEndBundleShs\", */ T:-1 },\n\t0x0091: { /* n:\"BrtBeginSheetData\", */ T:1 },\n\t0x0092: { /* n:\"BrtEndSheetData\", */ T:-1 },\n\t0x0093: { /* n:\"BrtWsProp\", */ f:parse_BrtWsProp },\n\t0x0094: { /* n:\"BrtWsDim\", */ f:parse_BrtWsDim, p:16 },\n\t0x0097: { /* n:\"BrtPane\", */ f:parse_BrtPane },\n\t0x0098: { /* n:\"BrtSel\" */ },\n\t0x0099: { /* n:\"BrtWbProp\", */ f:parse_BrtWbProp },\n\t0x009A: { /* n:\"BrtWbFactoid\" */ },\n\t0x009B: { /* n:\"BrtFileRecover\" */ },\n\t0x009C: { /* n:\"BrtBundleSh\", */ f:parse_BrtBundleSh },\n\t0x009D: { /* n:\"BrtCalcProp\" */ },\n\t0x009E: { /* n:\"BrtBookView\" */ },\n\t0x009F: { /* n:\"BrtBeginSst\", */ T:1, f:parse_BrtBeginSst },\n\t0x00A0: { /* n:\"BrtEndSst\", */ T:-1 },\n\t0x00A1: { /* n:\"BrtBeginAFilter\", */ T:1, f:parse_UncheckedRfX },\n\t0x00A2: { /* n:\"BrtEndAFilter\", */ T:-1 },\n\t0x00A3: { /* n:\"BrtBeginFilterColumn\", */ T:1 },\n\t0x00A4: { /* n:\"BrtEndFilterColumn\", */ T:-1 },\n\t0x00A5: { /* n:\"BrtBeginFilters\", */ T:1 },\n\t0x00A6: { /* n:\"BrtEndFilters\", */ T:-1 },\n\t0x00A7: { /* n:\"BrtFilter\" */ },\n\t0x00A8: { /* n:\"BrtColorFilter\" */ },\n\t0x00A9: { /* n:\"BrtIconFilter\" */ },\n\t0x00AA: { /* n:\"BrtTop10Filter\" */ },\n\t0x00AB: { /* n:\"BrtDynamicFilter\" */ },\n\t0x00AC: { /* n:\"BrtBeginCustomFilters\", */ T:1 },\n\t0x00AD: { /* n:\"BrtEndCustomFilters\", */ T:-1 },\n\t0x00AE: { /* n:\"BrtCustomFilter\" */ },\n\t0x00AF: { /* n:\"BrtAFilterDateGroupItem\" */ },\n\t0x00B0: { /* n:\"BrtMergeCell\", */ f:parse_BrtMergeCell },\n\t0x00B1: { /* n:\"BrtBeginMergeCells\", */ T:1 },\n\t0x00B2: { /* n:\"BrtEndMergeCells\", */ T:-1 },\n\t0x00B3: { /* n:\"BrtBeginPivotCacheDef\", */ T:1 },\n\t0x00B4: { /* n:\"BrtEndPivotCacheDef\", */ T:-1 },\n\t0x00B5: { /* n:\"BrtBeginPCDFields\", */ T:1 },\n\t0x00B6: { /* n:\"BrtEndPCDFields\", */ T:-1 },\n\t0x00B7: { /* n:\"BrtBeginPCDField\", */ T:1 },\n\t0x00B8: { /* n:\"BrtEndPCDField\", */ T:-1 },\n\t0x00B9: { /* n:\"BrtBeginPCDSource\", */ T:1 },\n\t0x00BA: { /* n:\"BrtEndPCDSource\", */ T:-1 },\n\t0x00BB: { /* n:\"BrtBeginPCDSRange\", */ T:1 },\n\t0x00BC: { /* n:\"BrtEndPCDSRange\", */ T:-1 },\n\t0x00BD: { /* n:\"BrtBeginPCDFAtbl\", */ T:1 },\n\t0x00BE: { /* n:\"BrtEndPCDFAtbl\", */ T:-1 },\n\t0x00BF: { /* n:\"BrtBeginPCDIRun\", */ T:1 },\n\t0x00C0: { /* n:\"BrtEndPCDIRun\", */ T:-1 },\n\t0x00C1: { /* n:\"BrtBeginPivotCacheRecords\", */ T:1 },\n\t0x00C2: { /* n:\"BrtEndPivotCacheRecords\", */ T:-1 },\n\t0x00C3: { /* n:\"BrtBeginPCDHierarchies\", */ T:1 },\n\t0x00C4: { /* n:\"BrtEndPCDHierarchies\", */ T:-1 },\n\t0x00C5: { /* n:\"BrtBeginPCDHierarchy\", */ T:1 },\n\t0x00C6: { /* n:\"BrtEndPCDHierarchy\", */ T:-1 },\n\t0x00C7: { /* n:\"BrtBeginPCDHFieldsUsage\", */ T:1 },\n\t0x00C8: { /* n:\"BrtEndPCDHFieldsUsage\", */ T:-1 },\n\t0x00C9: { /* n:\"BrtBeginExtConnection\", */ T:1 },\n\t0x00CA: { /* n:\"BrtEndExtConnection\", */ T:-1 },\n\t0x00CB: { /* n:\"BrtBeginECDbProps\", */ T:1 },\n\t0x00CC: { /* n:\"BrtEndECDbProps\", */ T:-1 },\n\t0x00CD: { /* n:\"BrtBeginECOlapProps\", */ T:1 },\n\t0x00CE: { /* n:\"BrtEndECOlapProps\", */ T:-1 },\n\t0x00CF: { /* n:\"BrtBeginPCDSConsol\", */ T:1 },\n\t0x00D0: { /* n:\"BrtEndPCDSConsol\", */ T:-1 },\n\t0x00D1: { /* n:\"BrtBeginPCDSCPages\", */ T:1 },\n\t0x00D2: { /* n:\"BrtEndPCDSCPages\", */ T:-1 },\n\t0x00D3: { /* n:\"BrtBeginPCDSCPage\", */ T:1 },\n\t0x00D4: { /* n:\"BrtEndPCDSCPage\", */ T:-1 },\n\t0x00D5: { /* n:\"BrtBeginPCDSCPItem\", */ T:1 },\n\t0x00D6: { /* n:\"BrtEndPCDSCPItem\", */ T:-1 },\n\t0x00D7: { /* n:\"BrtBeginPCDSCSets\", */ T:1 },\n\t0x00D8: { /* n:\"BrtEndPCDSCSets\", */ T:-1 },\n\t0x00D9: { /* n:\"BrtBeginPCDSCSet\", */ T:1 },\n\t0x00DA: { /* n:\"BrtEndPCDSCSet\", */ T:-1 },\n\t0x00DB: { /* n:\"BrtBeginPCDFGroup\", */ T:1 },\n\t0x00DC: { /* n:\"BrtEndPCDFGroup\", */ T:-1 },\n\t0x00DD: { /* n:\"BrtBeginPCDFGItems\", */ T:1 },\n\t0x00DE: { /* n:\"BrtEndPCDFGItems\", */ T:-1 },\n\t0x00DF: { /* n:\"BrtBeginPCDFGRange\", */ T:1 },\n\t0x00E0: { /* n:\"BrtEndPCDFGRange\", */ T:-1 },\n\t0x00E1: { /* n:\"BrtBeginPCDFGDiscrete\", */ T:1 },\n\t0x00E2: { /* n:\"BrtEndPCDFGDiscrete\", */ T:-1 },\n\t0x00E3: { /* n:\"BrtBeginPCDSDTupleCache\", */ T:1 },\n\t0x00E4: { /* n:\"BrtEndPCDSDTupleCache\", */ T:-1 },\n\t0x00E5: { /* n:\"BrtBeginPCDSDTCEntries\", */ T:1 },\n\t0x00E6: { /* n:\"BrtEndPCDSDTCEntries\", */ T:-1 },\n\t0x00E7: { /* n:\"BrtBeginPCDSDTCEMembers\", */ T:1 },\n\t0x00E8: { /* n:\"BrtEndPCDSDTCEMembers\", */ T:-1 },\n\t0x00E9: { /* n:\"BrtBeginPCDSDTCEMember\", */ T:1 },\n\t0x00EA: { /* n:\"BrtEndPCDSDTCEMember\", */ T:-1 },\n\t0x00EB: { /* n:\"BrtBeginPCDSDTCQueries\", */ T:1 },\n\t0x00EC: { /* n:\"BrtEndPCDSDTCQueries\", */ T:-1 },\n\t0x00ED: { /* n:\"BrtBeginPCDSDTCQuery\", */ T:1 },\n\t0x00EE: { /* n:\"BrtEndPCDSDTCQuery\", */ T:-1 },\n\t0x00EF: { /* n:\"BrtBeginPCDSDTCSets\", */ T:1 },\n\t0x00F0: { /* n:\"BrtEndPCDSDTCSets\", */ T:-1 },\n\t0x00F1: { /* n:\"BrtBeginPCDSDTCSet\", */ T:1 },\n\t0x00F2: { /* n:\"BrtEndPCDSDTCSet\", */ T:-1 },\n\t0x00F3: { /* n:\"BrtBeginPCDCalcItems\", */ T:1 },\n\t0x00F4: { /* n:\"BrtEndPCDCalcItems\", */ T:-1 },\n\t0x00F5: { /* n:\"BrtBeginPCDCalcItem\", */ T:1 },\n\t0x00F6: { /* n:\"BrtEndPCDCalcItem\", */ T:-1 },\n\t0x00F7: { /* n:\"BrtBeginPRule\", */ T:1 },\n\t0x00F8: { /* n:\"BrtEndPRule\", */ T:-1 },\n\t0x00F9: { /* n:\"BrtBeginPRFilters\", */ T:1 },\n\t0x00FA: { /* n:\"BrtEndPRFilters\", */ T:-1 },\n\t0x00FB: { /* n:\"BrtBeginPRFilter\", */ T:1 },\n\t0x00FC: { /* n:\"BrtEndPRFilter\", */ T:-1 },\n\t0x00FD: { /* n:\"BrtBeginPNames\", */ T:1 },\n\t0x00FE: { /* n:\"BrtEndPNames\", */ T:-1 },\n\t0x00FF: { /* n:\"BrtBeginPName\", */ T:1 },\n\t0x0100: { /* n:\"BrtEndPName\", */ T:-1 },\n\t0x0101: { /* n:\"BrtBeginPNPairs\", */ T:1 },\n\t0x0102: { /* n:\"BrtEndPNPairs\", */ T:-1 },\n\t0x0103: { /* n:\"BrtBeginPNPair\", */ T:1 },\n\t0x0104: { /* n:\"BrtEndPNPair\", */ T:-1 },\n\t0x0105: { /* n:\"BrtBeginECWebProps\", */ T:1 },\n\t0x0106: { /* n:\"BrtEndECWebProps\", */ T:-1 },\n\t0x0107: { /* n:\"BrtBeginEcWpTables\", */ T:1 },\n\t0x0108: { /* n:\"BrtEndECWPTables\", */ T:-1 },\n\t0x0109: { /* n:\"BrtBeginECParams\", */ T:1 },\n\t0x010A: { /* n:\"BrtEndECParams\", */ T:-1 },\n\t0x010B: { /* n:\"BrtBeginECParam\", */ T:1 },\n\t0x010C: { /* n:\"BrtEndECParam\", */ T:-1 },\n\t0x010D: { /* n:\"BrtBeginPCDKPIs\", */ T:1 },\n\t0x010E: { /* n:\"BrtEndPCDKPIs\", */ T:-1 },\n\t0x010F: { /* n:\"BrtBeginPCDKPI\", */ T:1 },\n\t0x0110: { /* n:\"BrtEndPCDKPI\", */ T:-1 },\n\t0x0111: { /* n:\"BrtBeginDims\", */ T:1 },\n\t0x0112: { /* n:\"BrtEndDims\", */ T:-1 },\n\t0x0113: { /* n:\"BrtBeginDim\", */ T:1 },\n\t0x0114: { /* n:\"BrtEndDim\", */ T:-1 },\n\t0x0115: { /* n:\"BrtIndexPartEnd\" */ },\n\t0x0116: { /* n:\"BrtBeginStyleSheet\", */ T:1 },\n\t0x0117: { /* n:\"BrtEndStyleSheet\", */ T:-1 },\n\t0x0118: { /* n:\"BrtBeginSXView\", */ T:1 },\n\t0x0119: { /* n:\"BrtEndSXVI\", */ T:-1 },\n\t0x011A: { /* n:\"BrtBeginSXVI\", */ T:1 },\n\t0x011B: { /* n:\"BrtBeginSXVIs\", */ T:1 },\n\t0x011C: { /* n:\"BrtEndSXVIs\", */ T:-1 },\n\t0x011D: { /* n:\"BrtBeginSXVD\", */ T:1 },\n\t0x011E: { /* n:\"BrtEndSXVD\", */ T:-1 },\n\t0x011F: { /* n:\"BrtBeginSXVDs\", */ T:1 },\n\t0x0120: { /* n:\"BrtEndSXVDs\", */ T:-1 },\n\t0x0121: { /* n:\"BrtBeginSXPI\", */ T:1 },\n\t0x0122: { /* n:\"BrtEndSXPI\", */ T:-1 },\n\t0x0123: { /* n:\"BrtBeginSXPIs\", */ T:1 },\n\t0x0124: { /* n:\"BrtEndSXPIs\", */ T:-1 },\n\t0x0125: { /* n:\"BrtBeginSXDI\", */ T:1 },\n\t0x0126: { /* n:\"BrtEndSXDI\", */ T:-1 },\n\t0x0127: { /* n:\"BrtBeginSXDIs\", */ T:1 },\n\t0x0128: { /* n:\"BrtEndSXDIs\", */ T:-1 },\n\t0x0129: { /* n:\"BrtBeginSXLI\", */ T:1 },\n\t0x012A: { /* n:\"BrtEndSXLI\", */ T:-1 },\n\t0x012B: { /* n:\"BrtBeginSXLIRws\", */ T:1 },\n\t0x012C: { /* n:\"BrtEndSXLIRws\", */ T:-1 },\n\t0x012D: { /* n:\"BrtBeginSXLICols\", */ T:1 },\n\t0x012E: { /* n:\"BrtEndSXLICols\", */ T:-1 },\n\t0x012F: { /* n:\"BrtBeginSXFormat\", */ T:1 },\n\t0x0130: { /* n:\"BrtEndSXFormat\", */ T:-1 },\n\t0x0131: { /* n:\"BrtBeginSXFormats\", */ T:1 },\n\t0x0132: { /* n:\"BrtEndSxFormats\", */ T:-1 },\n\t0x0133: { /* n:\"BrtBeginSxSelect\", */ T:1 },\n\t0x0134: { /* n:\"BrtEndSxSelect\", */ T:-1 },\n\t0x0135: { /* n:\"BrtBeginISXVDRws\", */ T:1 },\n\t0x0136: { /* n:\"BrtEndISXVDRws\", */ T:-1 },\n\t0x0137: { /* n:\"BrtBeginISXVDCols\", */ T:1 },\n\t0x0138: { /* n:\"BrtEndISXVDCols\", */ T:-1 },\n\t0x0139: { /* n:\"BrtEndSXLocation\", */ T:-1 },\n\t0x013A: { /* n:\"BrtBeginSXLocation\", */ T:1 },\n\t0x013B: { /* n:\"BrtEndSXView\", */ T:-1 },\n\t0x013C: { /* n:\"BrtBeginSXTHs\", */ T:1 },\n\t0x013D: { /* n:\"BrtEndSXTHs\", */ T:-1 },\n\t0x013E: { /* n:\"BrtBeginSXTH\", */ T:1 },\n\t0x013F: { /* n:\"BrtEndSXTH\", */ T:-1 },\n\t0x0140: { /* n:\"BrtBeginISXTHRws\", */ T:1 },\n\t0x0141: { /* n:\"BrtEndISXTHRws\", */ T:-1 },\n\t0x0142: { /* n:\"BrtBeginISXTHCols\", */ T:1 },\n\t0x0143: { /* n:\"BrtEndISXTHCols\", */ T:-1 },\n\t0x0144: { /* n:\"BrtBeginSXTDMPS\", */ T:1 },\n\t0x0145: { /* n:\"BrtEndSXTDMPs\", */ T:-1 },\n\t0x0146: { /* n:\"BrtBeginSXTDMP\", */ T:1 },\n\t0x0147: { /* n:\"BrtEndSXTDMP\", */ T:-1 },\n\t0x0148: { /* n:\"BrtBeginSXTHItems\", */ T:1 },\n\t0x0149: { /* n:\"BrtEndSXTHItems\", */ T:-1 },\n\t0x014A: { /* n:\"BrtBeginSXTHItem\", */ T:1 },\n\t0x014B: { /* n:\"BrtEndSXTHItem\", */ T:-1 },\n\t0x014C: { /* n:\"BrtBeginMetadata\", */ T:1 },\n\t0x014D: { /* n:\"BrtEndMetadata\", */ T:-1 },\n\t0x014E: { /* n:\"BrtBeginEsmdtinfo\", */ T:1 },\n\t0x014F: { /* n:\"BrtMdtinfo\", */ f:parse_BrtMdtinfo },\n\t0x0150: { /* n:\"BrtEndEsmdtinfo\", */ T:-1 },\n\t0x0151: { /* n:\"BrtBeginEsmdb\", */ f:parse_BrtBeginEsmdb, T:1 },\n\t0x0152: { /* n:\"BrtEndEsmdb\", */ T:-1 },\n\t0x0153: { /* n:\"BrtBeginEsfmd\", */ T:1 },\n\t0x0154: { /* n:\"BrtEndEsfmd\", */ T:-1 },\n\t0x0155: { /* n:\"BrtBeginSingleCells\", */ T:1 },\n\t0x0156: { /* n:\"BrtEndSingleCells\", */ T:-1 },\n\t0x0157: { /* n:\"BrtBeginList\", */ T:1 },\n\t0x0158: { /* n:\"BrtEndList\", */ T:-1 },\n\t0x0159: { /* n:\"BrtBeginListCols\", */ T:1 },\n\t0x015A: { /* n:\"BrtEndListCols\", */ T:-1 },\n\t0x015B: { /* n:\"BrtBeginListCol\", */ T:1 },\n\t0x015C: { /* n:\"BrtEndListCol\", */ T:-1 },\n\t0x015D: { /* n:\"BrtBeginListXmlCPr\", */ T:1 },\n\t0x015E: { /* n:\"BrtEndListXmlCPr\", */ T:-1 },\n\t0x015F: { /* n:\"BrtListCCFmla\" */ },\n\t0x0160: { /* n:\"BrtListTrFmla\" */ },\n\t0x0161: { /* n:\"BrtBeginExternals\", */ T:1 },\n\t0x0162: { /* n:\"BrtEndExternals\", */ T:-1 },\n\t0x0163: { /* n:\"BrtSupBookSrc\", */ f:parse_RelID},\n\t0x0165: { /* n:\"BrtSupSelf\" */ },\n\t0x0166: { /* n:\"BrtSupSame\" */ },\n\t0x0167: { /* n:\"BrtSupTabs\" */ },\n\t0x0168: { /* n:\"BrtBeginSupBook\", */ T:1 },\n\t0x0169: { /* n:\"BrtPlaceholderName\" */ },\n\t0x016A: { /* n:\"BrtExternSheet\", */ f:parse_ExternSheet },\n\t0x016B: { /* n:\"BrtExternTableStart\" */ },\n\t0x016C: { /* n:\"BrtExternTableEnd\" */ },\n\t0x016E: { /* n:\"BrtExternRowHdr\" */ },\n\t0x016F: { /* n:\"BrtExternCellBlank\" */ },\n\t0x0170: { /* n:\"BrtExternCellReal\" */ },\n\t0x0171: { /* n:\"BrtExternCellBool\" */ },\n\t0x0172: { /* n:\"BrtExternCellError\" */ },\n\t0x0173: { /* n:\"BrtExternCellString\" */ },\n\t0x0174: { /* n:\"BrtBeginEsmdx\", */ T:1 },\n\t0x0175: { /* n:\"BrtEndEsmdx\", */ T:-1 },\n\t0x0176: { /* n:\"BrtBeginMdxSet\", */ T:1 },\n\t0x0177: { /* n:\"BrtEndMdxSet\", */ T:-1 },\n\t0x0178: { /* n:\"BrtBeginMdxMbrProp\", */ T:1 },\n\t0x0179: { /* n:\"BrtEndMdxMbrProp\", */ T:-1 },\n\t0x017A: { /* n:\"BrtBeginMdxKPI\", */ T:1 },\n\t0x017B: { /* n:\"BrtEndMdxKPI\", */ T:-1 },\n\t0x017C: { /* n:\"BrtBeginEsstr\", */ T:1 },\n\t0x017D: { /* n:\"BrtEndEsstr\", */ T:-1 },\n\t0x017E: { /* n:\"BrtBeginPRFItem\", */ T:1 },\n\t0x017F: { /* n:\"BrtEndPRFItem\", */ T:-1 },\n\t0x0180: { /* n:\"BrtBeginPivotCacheIDs\", */ T:1 },\n\t0x0181: { /* n:\"BrtEndPivotCacheIDs\", */ T:-1 },\n\t0x0182: { /* n:\"BrtBeginPivotCacheID\", */ T:1 },\n\t0x0183: { /* n:\"BrtEndPivotCacheID\", */ T:-1 },\n\t0x0184: { /* n:\"BrtBeginISXVIs\", */ T:1 },\n\t0x0185: { /* n:\"BrtEndISXVIs\", */ T:-1 },\n\t0x0186: { /* n:\"BrtBeginColInfos\", */ T:1 },\n\t0x0187: { /* n:\"BrtEndColInfos\", */ T:-1 },\n\t0x0188: { /* n:\"BrtBeginRwBrk\", */ T:1 },\n\t0x0189: { /* n:\"BrtEndRwBrk\", */ T:-1 },\n\t0x018A: { /* n:\"BrtBeginColBrk\", */ T:1 },\n\t0x018B: { /* n:\"BrtEndColBrk\", */ T:-1 },\n\t0x018C: { /* n:\"BrtBrk\" */ },\n\t0x018D: { /* n:\"BrtUserBookView\" */ },\n\t0x018E: { /* n:\"BrtInfo\" */ },\n\t0x018F: { /* n:\"BrtCUsr\" */ },\n\t0x0190: { /* n:\"BrtUsr\" */ },\n\t0x0191: { /* n:\"BrtBeginUsers\", */ T:1 },\n\t0x0193: { /* n:\"BrtEOF\" */ },\n\t0x0194: { /* n:\"BrtUCR\" */ },\n\t0x0195: { /* n:\"BrtRRInsDel\" */ },\n\t0x0196: { /* n:\"BrtRREndInsDel\" */ },\n\t0x0197: { /* n:\"BrtRRMove\" */ },\n\t0x0198: { /* n:\"BrtRREndMove\" */ },\n\t0x0199: { /* n:\"BrtRRChgCell\" */ },\n\t0x019A: { /* n:\"BrtRREndChgCell\" */ },\n\t0x019B: { /* n:\"BrtRRHeader\" */ },\n\t0x019C: { /* n:\"BrtRRUserView\" */ },\n\t0x019D: { /* n:\"BrtRRRenSheet\" */ },\n\t0x019E: { /* n:\"BrtRRInsertSh\" */ },\n\t0x019F: { /* n:\"BrtRRDefName\" */ },\n\t0x01A0: { /* n:\"BrtRRNote\" */ },\n\t0x01A1: { /* n:\"BrtRRConflict\" */ },\n\t0x01A2: { /* n:\"BrtRRTQSIF\" */ },\n\t0x01A3: { /* n:\"BrtRRFormat\" */ },\n\t0x01A4: { /* n:\"BrtRREndFormat\" */ },\n\t0x01A5: { /* n:\"BrtRRAutoFmt\" */ },\n\t0x01A6: { /* n:\"BrtBeginUserShViews\", */ T:1 },\n\t0x01A7: { /* n:\"BrtBeginUserShView\", */ T:1 },\n\t0x01A8: { /* n:\"BrtEndUserShView\", */ T:-1 },\n\t0x01A9: { /* n:\"BrtEndUserShViews\", */ T:-1 },\n\t0x01AA: { /* n:\"BrtArrFmla\", */ f:parse_BrtArrFmla },\n\t0x01AB: { /* n:\"BrtShrFmla\", */ f:parse_BrtShrFmla },\n\t0x01AC: { /* n:\"BrtTable\" */ },\n\t0x01AD: { /* n:\"BrtBeginExtConnections\", */ T:1 },\n\t0x01AE: { /* n:\"BrtEndExtConnections\", */ T:-1 },\n\t0x01AF: { /* n:\"BrtBeginPCDCalcMems\", */ T:1 },\n\t0x01B0: { /* n:\"BrtEndPCDCalcMems\", */ T:-1 },\n\t0x01B1: { /* n:\"BrtBeginPCDCalcMem\", */ T:1 },\n\t0x01B2: { /* n:\"BrtEndPCDCalcMem\", */ T:-1 },\n\t0x01B3: { /* n:\"BrtBeginPCDHGLevels\", */ T:1 },\n\t0x01B4: { /* n:\"BrtEndPCDHGLevels\", */ T:-1 },\n\t0x01B5: { /* n:\"BrtBeginPCDHGLevel\", */ T:1 },\n\t0x01B6: { /* n:\"BrtEndPCDHGLevel\", */ T:-1 },\n\t0x01B7: { /* n:\"BrtBeginPCDHGLGroups\", */ T:1 },\n\t0x01B8: { /* n:\"BrtEndPCDHGLGroups\", */ T:-1 },\n\t0x01B9: { /* n:\"BrtBeginPCDHGLGroup\", */ T:1 },\n\t0x01BA: { /* n:\"BrtEndPCDHGLGroup\", */ T:-1 },\n\t0x01BB: { /* n:\"BrtBeginPCDHGLGMembers\", */ T:1 },\n\t0x01BC: { /* n:\"BrtEndPCDHGLGMembers\", */ T:-1 },\n\t0x01BD: { /* n:\"BrtBeginPCDHGLGMember\", */ T:1 },\n\t0x01BE: { /* n:\"BrtEndPCDHGLGMember\", */ T:-1 },\n\t0x01BF: { /* n:\"BrtBeginQSI\", */ T:1 },\n\t0x01C0: { /* n:\"BrtEndQSI\", */ T:-1 },\n\t0x01C1: { /* n:\"BrtBeginQSIR\", */ T:1 },\n\t0x01C2: { /* n:\"BrtEndQSIR\", */ T:-1 },\n\t0x01C3: { /* n:\"BrtBeginDeletedNames\", */ T:1 },\n\t0x01C4: { /* n:\"BrtEndDeletedNames\", */ T:-1 },\n\t0x01C5: { /* n:\"BrtBeginDeletedName\", */ T:1 },\n\t0x01C6: { /* n:\"BrtEndDeletedName\", */ T:-1 },\n\t0x01C7: { /* n:\"BrtBeginQSIFs\", */ T:1 },\n\t0x01C8: { /* n:\"BrtEndQSIFs\", */ T:-1 },\n\t0x01C9: { /* n:\"BrtBeginQSIF\", */ T:1 },\n\t0x01CA: { /* n:\"BrtEndQSIF\", */ T:-1 },\n\t0x01CB: { /* n:\"BrtBeginAutoSortScope\", */ T:1 },\n\t0x01CC: { /* n:\"BrtEndAutoSortScope\", */ T:-1 },\n\t0x01CD: { /* n:\"BrtBeginConditionalFormatting\", */ T:1 },\n\t0x01CE: { /* n:\"BrtEndConditionalFormatting\", */ T:-1 },\n\t0x01CF: { /* n:\"BrtBeginCFRule\", */ T:1 },\n\t0x01D0: { /* n:\"BrtEndCFRule\", */ T:-1 },\n\t0x01D1: { /* n:\"BrtBeginIconSet\", */ T:1 },\n\t0x01D2: { /* n:\"BrtEndIconSet\", */ T:-1 },\n\t0x01D3: { /* n:\"BrtBeginDatabar\", */ T:1 },\n\t0x01D4: { /* n:\"BrtEndDatabar\", */ T:-1 },\n\t0x01D5: { /* n:\"BrtBeginColorScale\", */ T:1 },\n\t0x01D6: { /* n:\"BrtEndColorScale\", */ T:-1 },\n\t0x01D7: { /* n:\"BrtCFVO\" */ },\n\t0x01D8: { /* n:\"BrtExternValueMeta\" */ },\n\t0x01D9: { /* n:\"BrtBeginColorPalette\", */ T:1 },\n\t0x01DA: { /* n:\"BrtEndColorPalette\", */ T:-1 },\n\t0x01DB: { /* n:\"BrtIndexedColor\" */ },\n\t0x01DC: { /* n:\"BrtMargins\", */ f:parse_BrtMargins },\n\t0x01DD: { /* n:\"BrtPrintOptions\" */ },\n\t0x01DE: { /* n:\"BrtPageSetup\" */ },\n\t0x01DF: { /* n:\"BrtBeginHeaderFooter\", */ T:1 },\n\t0x01E0: { /* n:\"BrtEndHeaderFooter\", */ T:-1 },\n\t0x01E1: { /* n:\"BrtBeginSXCrtFormat\", */ T:1 },\n\t0x01E2: { /* n:\"BrtEndSXCrtFormat\", */ T:-1 },\n\t0x01E3: { /* n:\"BrtBeginSXCrtFormats\", */ T:1 },\n\t0x01E4: { /* n:\"BrtEndSXCrtFormats\", */ T:-1 },\n\t0x01E5: { /* n:\"BrtWsFmtInfo\", */ f:parse_BrtWsFmtInfo },\n\t0x01E6: { /* n:\"BrtBeginMgs\", */ T:1 },\n\t0x01E7: { /* n:\"BrtEndMGs\", */ T:-1 },\n\t0x01E8: { /* n:\"BrtBeginMGMaps\", */ T:1 },\n\t0x01E9: { /* n:\"BrtEndMGMaps\", */ T:-1 },\n\t0x01EA: { /* n:\"BrtBeginMG\", */ T:1 },\n\t0x01EB: { /* n:\"BrtEndMG\", */ T:-1 },\n\t0x01EC: { /* n:\"BrtBeginMap\", */ T:1 },\n\t0x01ED: { /* n:\"BrtEndMap\", */ T:-1 },\n\t0x01EE: { /* n:\"BrtHLink\", */ f:parse_BrtHLink },\n\t0x01EF: { /* n:\"BrtBeginDCon\", */ T:1 },\n\t0x01F0: { /* n:\"BrtEndDCon\", */ T:-1 },\n\t0x01F1: { /* n:\"BrtBeginDRefs\", */ T:1 },\n\t0x01F2: { /* n:\"BrtEndDRefs\", */ T:-1 },\n\t0x01F3: { /* n:\"BrtDRef\" */ },\n\t0x01F4: { /* n:\"BrtBeginScenMan\", */ T:1 },\n\t0x01F5: { /* n:\"BrtEndScenMan\", */ T:-1 },\n\t0x01F6: { /* n:\"BrtBeginSct\", */ T:1 },\n\t0x01F7: { /* n:\"BrtEndSct\", */ T:-1 },\n\t0x01F8: { /* n:\"BrtSlc\" */ },\n\t0x01F9: { /* n:\"BrtBeginDXFs\", */ T:1 },\n\t0x01FA: { /* n:\"BrtEndDXFs\", */ T:-1 },\n\t0x01FB: { /* n:\"BrtDXF\" */ },\n\t0x01FC: { /* n:\"BrtBeginTableStyles\", */ T:1 },\n\t0x01FD: { /* n:\"BrtEndTableStyles\", */ T:-1 },\n\t0x01FE: { /* n:\"BrtBeginTableStyle\", */ T:1 },\n\t0x01FF: { /* n:\"BrtEndTableStyle\", */ T:-1 },\n\t0x0200: { /* n:\"BrtTableStyleElement\" */ },\n\t0x0201: { /* n:\"BrtTableStyleClient\" */ },\n\t0x0202: { /* n:\"BrtBeginVolDeps\", */ T:1 },\n\t0x0203: { /* n:\"BrtEndVolDeps\", */ T:-1 },\n\t0x0204: { /* n:\"BrtBeginVolType\", */ T:1 },\n\t0x0205: { /* n:\"BrtEndVolType\", */ T:-1 },\n\t0x0206: { /* n:\"BrtBeginVolMain\", */ T:1 },\n\t0x0207: { /* n:\"BrtEndVolMain\", */ T:-1 },\n\t0x0208: { /* n:\"BrtBeginVolTopic\", */ T:1 },\n\t0x0209: { /* n:\"BrtEndVolTopic\", */ T:-1 },\n\t0x020A: { /* n:\"BrtVolSubtopic\" */ },\n\t0x020B: { /* n:\"BrtVolRef\" */ },\n\t0x020C: { /* n:\"BrtVolNum\" */ },\n\t0x020D: { /* n:\"BrtVolErr\" */ },\n\t0x020E: { /* n:\"BrtVolStr\" */ },\n\t0x020F: { /* n:\"BrtVolBool\" */ },\n\t0x0210: { /* n:\"BrtBeginCalcChain$\", */ T:1 },\n\t0x0211: { /* n:\"BrtEndCalcChain$\", */ T:-1 },\n\t0x0212: { /* n:\"BrtBeginSortState\", */ T:1 },\n\t0x0213: { /* n:\"BrtEndSortState\", */ T:-1 },\n\t0x0214: { /* n:\"BrtBeginSortCond\", */ T:1 },\n\t0x0215: { /* n:\"BrtEndSortCond\", */ T:-1 },\n\t0x0216: { /* n:\"BrtBookProtection\" */ },\n\t0x0217: { /* n:\"BrtSheetProtection\" */ },\n\t0x0218: { /* n:\"BrtRangeProtection\" */ },\n\t0x0219: { /* n:\"BrtPhoneticInfo\" */ },\n\t0x021A: { /* n:\"BrtBeginECTxtWiz\", */ T:1 },\n\t0x021B: { /* n:\"BrtEndECTxtWiz\", */ T:-1 },\n\t0x021C: { /* n:\"BrtBeginECTWFldInfoLst\", */ T:1 },\n\t0x021D: { /* n:\"BrtEndECTWFldInfoLst\", */ T:-1 },\n\t0x021E: { /* n:\"BrtBeginECTwFldInfo\", */ T:1 },\n\t0x0224: { /* n:\"BrtFileSharing\" */ },\n\t0x0225: { /* n:\"BrtOleSize\" */ },\n\t0x0226: { /* n:\"BrtDrawing\", */ f:parse_RelID },\n\t0x0227: { /* n:\"BrtLegacyDrawing\", */ f:parse_XLNullableWideString },\n\t0x0228: { /* n:\"BrtLegacyDrawingHF\" */ },\n\t0x0229: { /* n:\"BrtWebOpt\" */ },\n\t0x022A: { /* n:\"BrtBeginWebPubItems\", */ T:1 },\n\t0x022B: { /* n:\"BrtEndWebPubItems\", */ T:-1 },\n\t0x022C: { /* n:\"BrtBeginWebPubItem\", */ T:1 },\n\t0x022D: { /* n:\"BrtEndWebPubItem\", */ T:-1 },\n\t0x022E: { /* n:\"BrtBeginSXCondFmt\", */ T:1 },\n\t0x022F: { /* n:\"BrtEndSXCondFmt\", */ T:-1 },\n\t0x0230: { /* n:\"BrtBeginSXCondFmts\", */ T:1 },\n\t0x0231: { /* n:\"BrtEndSXCondFmts\", */ T:-1 },\n\t0x0232: { /* n:\"BrtBkHim\" */ },\n\t0x0234: { /* n:\"BrtColor\" */ },\n\t0x0235: { /* n:\"BrtBeginIndexedColors\", */ T:1 },\n\t0x0236: { /* n:\"BrtEndIndexedColors\", */ T:-1 },\n\t0x0239: { /* n:\"BrtBeginMRUColors\", */ T:1 },\n\t0x023A: { /* n:\"BrtEndMRUColors\", */ T:-1 },\n\t0x023C: { /* n:\"BrtMRUColor\" */ },\n\t0x023D: { /* n:\"BrtBeginDVals\", */ T:1 },\n\t0x023E: { /* n:\"BrtEndDVals\", */ T:-1 },\n\t0x0241: { /* n:\"BrtSupNameStart\" */ },\n\t0x0242: { /* n:\"BrtSupNameValueStart\" */ },\n\t0x0243: { /* n:\"BrtSupNameValueEnd\" */ },\n\t0x0244: { /* n:\"BrtSupNameNum\" */ },\n\t0x0245: { /* n:\"BrtSupNameErr\" */ },\n\t0x0246: { /* n:\"BrtSupNameSt\" */ },\n\t0x0247: { /* n:\"BrtSupNameNil\" */ },\n\t0x0248: { /* n:\"BrtSupNameBool\" */ },\n\t0x0249: { /* n:\"BrtSupNameFmla\" */ },\n\t0x024A: { /* n:\"BrtSupNameBits\" */ },\n\t0x024B: { /* n:\"BrtSupNameEnd\" */ },\n\t0x024C: { /* n:\"BrtEndSupBook\", */ T:-1 },\n\t0x024D: { /* n:\"BrtCellSmartTagProperty\" */ },\n\t0x024E: { /* n:\"BrtBeginCellSmartTag\", */ T:1 },\n\t0x024F: { /* n:\"BrtEndCellSmartTag\", */ T:-1 },\n\t0x0250: { /* n:\"BrtBeginCellSmartTags\", */ T:1 },\n\t0x0251: { /* n:\"BrtEndCellSmartTags\", */ T:-1 },\n\t0x0252: { /* n:\"BrtBeginSmartTags\", */ T:1 },\n\t0x0253: { /* n:\"BrtEndSmartTags\", */ T:-1 },\n\t0x0254: { /* n:\"BrtSmartTagType\" */ },\n\t0x0255: { /* n:\"BrtBeginSmartTagTypes\", */ T:1 },\n\t0x0256: { /* n:\"BrtEndSmartTagTypes\", */ T:-1 },\n\t0x0257: { /* n:\"BrtBeginSXFilters\", */ T:1 },\n\t0x0258: { /* n:\"BrtEndSXFilters\", */ T:-1 },\n\t0x0259: { /* n:\"BrtBeginSXFILTER\", */ T:1 },\n\t0x025A: { /* n:\"BrtEndSXFilter\", */ T:-1 },\n\t0x025B: { /* n:\"BrtBeginFills\", */ T:1 },\n\t0x025C: { /* n:\"BrtEndFills\", */ T:-1 },\n\t0x025D: { /* n:\"BrtBeginCellWatches\", */ T:1 },\n\t0x025E: { /* n:\"BrtEndCellWatches\", */ T:-1 },\n\t0x025F: { /* n:\"BrtCellWatch\" */ },\n\t0x0260: { /* n:\"BrtBeginCRErrs\", */ T:1 },\n\t0x0261: { /* n:\"BrtEndCRErrs\", */ T:-1 },\n\t0x0262: { /* n:\"BrtCrashRecErr\" */ },\n\t0x0263: { /* n:\"BrtBeginFonts\", */ T:1 },\n\t0x0264: { /* n:\"BrtEndFonts\", */ T:-1 },\n\t0x0265: { /* n:\"BrtBeginBorders\", */ T:1 },\n\t0x0266: { /* n:\"BrtEndBorders\", */ T:-1 },\n\t0x0267: { /* n:\"BrtBeginFmts\", */ T:1 },\n\t0x0268: { /* n:\"BrtEndFmts\", */ T:-1 },\n\t0x0269: { /* n:\"BrtBeginCellXFs\", */ T:1 },\n\t0x026A: { /* n:\"BrtEndCellXFs\", */ T:-1 },\n\t0x026B: { /* n:\"BrtBeginStyles\", */ T:1 },\n\t0x026C: { /* n:\"BrtEndStyles\", */ T:-1 },\n\t0x0271: { /* n:\"BrtBigName\" */ },\n\t0x0272: { /* n:\"BrtBeginCellStyleXFs\", */ T:1 },\n\t0x0273: { /* n:\"BrtEndCellStyleXFs\", */ T:-1 },\n\t0x0274: { /* n:\"BrtBeginComments\", */ T:1 },\n\t0x0275: { /* n:\"BrtEndComments\", */ T:-1 },\n\t0x0276: { /* n:\"BrtBeginCommentAuthors\", */ T:1 },\n\t0x0277: { /* n:\"BrtEndCommentAuthors\", */ T:-1 },\n\t0x0278: { /* n:\"BrtCommentAuthor\", */ f:parse_BrtCommentAuthor },\n\t0x0279: { /* n:\"BrtBeginCommentList\", */ T:1 },\n\t0x027A: { /* n:\"BrtEndCommentList\", */ T:-1 },\n\t0x027B: { /* n:\"BrtBeginComment\", */ T:1, f:parse_BrtBeginComment},\n\t0x027C: { /* n:\"BrtEndComment\", */ T:-1 },\n\t0x027D: { /* n:\"BrtCommentText\", */ f:parse_BrtCommentText },\n\t0x027E: { /* n:\"BrtBeginOleObjects\", */ T:1 },\n\t0x027F: { /* n:\"BrtOleObject\" */ },\n\t0x0280: { /* n:\"BrtEndOleObjects\", */ T:-1 },\n\t0x0281: { /* n:\"BrtBeginSxrules\", */ T:1 },\n\t0x0282: { /* n:\"BrtEndSxRules\", */ T:-1 },\n\t0x0283: { /* n:\"BrtBeginActiveXControls\", */ T:1 },\n\t0x0284: { /* n:\"BrtActiveX\" */ },\n\t0x0285: { /* n:\"BrtEndActiveXControls\", */ T:-1 },\n\t0x0286: { /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */ T:1 },\n\t0x0288: { /* n:\"BrtBeginCellIgnoreECs\", */ T:1 },\n\t0x0289: { /* n:\"BrtCellIgnoreEC\" */ },\n\t0x028A: { /* n:\"BrtEndCellIgnoreECs\", */ T:-1 },\n\t0x028B: { /* n:\"BrtCsProp\", */ f:parse_BrtCsProp },\n\t0x028C: { /* n:\"BrtCsPageSetup\" */ },\n\t0x028D: { /* n:\"BrtBeginUserCsViews\", */ T:1 },\n\t0x028E: { /* n:\"BrtEndUserCsViews\", */ T:-1 },\n\t0x028F: { /* n:\"BrtBeginUserCsView\", */ T:1 },\n\t0x0290: { /* n:\"BrtEndUserCsView\", */ T:-1 },\n\t0x0291: { /* n:\"BrtBeginPcdSFCIEntries\", */ T:1 },\n\t0x0292: { /* n:\"BrtEndPCDSFCIEntries\", */ T:-1 },\n\t0x0293: { /* n:\"BrtPCDSFCIEntry\" */ },\n\t0x0294: { /* n:\"BrtBeginListParts\", */ T:1 },\n\t0x0295: { /* n:\"BrtListPart\" */ },\n\t0x0296: { /* n:\"BrtEndListParts\", */ T:-1 },\n\t0x0297: { /* n:\"BrtSheetCalcProp\" */ },\n\t0x0298: { /* n:\"BrtBeginFnGroup\", */ T:1 },\n\t0x0299: { /* n:\"BrtFnGroup\" */ },\n\t0x029A: { /* n:\"BrtEndFnGroup\", */ T:-1 },\n\t0x029B: { /* n:\"BrtSupAddin\" */ },\n\t0x029C: { /* n:\"BrtSXTDMPOrder\" */ },\n\t0x029D: { /* n:\"BrtCsProtection\" */ },\n\t0x029F: { /* n:\"BrtBeginWsSortMap\", */ T:1 },\n\t0x02A0: { /* n:\"BrtEndWsSortMap\", */ T:-1 },\n\t0x02A1: { /* n:\"BrtBeginRRSort\", */ T:1 },\n\t0x02A2: { /* n:\"BrtEndRRSort\", */ T:-1 },\n\t0x02A3: { /* n:\"BrtRRSortItem\" */ },\n\t0x02A4: { /* n:\"BrtFileSharingIso\" */ },\n\t0x02A5: { /* n:\"BrtBookProtectionIso\" */ },\n\t0x02A6: { /* n:\"BrtSheetProtectionIso\" */ },\n\t0x02A7: { /* n:\"BrtCsProtectionIso\" */ },\n\t0x02A8: { /* n:\"BrtRangeProtectionIso\" */ },\n\t0x02A9: { /* n:\"BrtDValList\" */ },\n\t0x0400: { /* n:\"BrtRwDescent\" */ },\n\t0x0401: { /* n:\"BrtKnownFonts\" */ },\n\t0x0402: { /* n:\"BrtBeginSXTupleSet\", */ T:1 },\n\t0x0403: { /* n:\"BrtEndSXTupleSet\", */ T:-1 },\n\t0x0404: { /* n:\"BrtBeginSXTupleSetHeader\", */ T:1 },\n\t0x0405: { /* n:\"BrtEndSXTupleSetHeader\", */ T:-1 },\n\t0x0406: { /* n:\"BrtSXTupleSetHeaderItem\" */ },\n\t0x0407: { /* n:\"BrtBeginSXTupleSetData\", */ T:1 },\n\t0x0408: { /* n:\"BrtEndSXTupleSetData\", */ T:-1 },\n\t0x0409: { /* n:\"BrtBeginSXTupleSetRow\", */ T:1 },\n\t0x040A: { /* n:\"BrtEndSXTupleSetRow\", */ T:-1 },\n\t0x040B: { /* n:\"BrtSXTupleSetRowItem\" */ },\n\t0x040C: { /* n:\"BrtNameExt\" */ },\n\t0x040D: { /* n:\"BrtPCDH14\" */ },\n\t0x040E: { /* n:\"BrtBeginPCDCalcMem14\", */ T:1 },\n\t0x040F: { /* n:\"BrtEndPCDCalcMem14\", */ T:-1 },\n\t0x0410: { /* n:\"BrtSXTH14\" */ },\n\t0x0411: { /* n:\"BrtBeginSparklineGroup\", */ T:1 },\n\t0x0412: { /* n:\"BrtEndSparklineGroup\", */ T:-1 },\n\t0x0413: { /* n:\"BrtSparkline\" */ },\n\t0x0414: { /* n:\"BrtSXDI14\" */ },\n\t0x0415: { /* n:\"BrtWsFmtInfoEx14\" */ },\n\t0x0416: { /* n:\"BrtBeginConditionalFormatting14\", */ T:1 },\n\t0x0417: { /* n:\"BrtEndConditionalFormatting14\", */ T:-1 },\n\t0x0418: { /* n:\"BrtBeginCFRule14\", */ T:1 },\n\t0x0419: { /* n:\"BrtEndCFRule14\", */ T:-1 },\n\t0x041A: { /* n:\"BrtCFVO14\" */ },\n\t0x041B: { /* n:\"BrtBeginDatabar14\", */ T:1 },\n\t0x041C: { /* n:\"BrtBeginIconSet14\", */ T:1 },\n\t0x041D: { /* n:\"BrtDVal14\", */ f: parse_BrtDVal14 },\n\t0x041E: { /* n:\"BrtBeginDVals14\", */ T:1 },\n\t0x041F: { /* n:\"BrtColor14\" */ },\n\t0x0420: { /* n:\"BrtBeginSparklines\", */ T:1 },\n\t0x0421: { /* n:\"BrtEndSparklines\", */ T:-1 },\n\t0x0422: { /* n:\"BrtBeginSparklineGroups\", */ T:1 },\n\t0x0423: { /* n:\"BrtEndSparklineGroups\", */ T:-1 },\n\t0x0425: { /* n:\"BrtSXVD14\" */ },\n\t0x0426: { /* n:\"BrtBeginSXView14\", */ T:1 },\n\t0x0427: { /* n:\"BrtEndSXView14\", */ T:-1 },\n\t0x0428: { /* n:\"BrtBeginSXView16\", */ T:1 },\n\t0x0429: { /* n:\"BrtEndSXView16\", */ T:-1 },\n\t0x042A: { /* n:\"BrtBeginPCD14\", */ T:1 },\n\t0x042B: { /* n:\"BrtEndPCD14\", */ T:-1 },\n\t0x042C: { /* n:\"BrtBeginExtConn14\", */ T:1 },\n\t0x042D: { /* n:\"BrtEndExtConn14\", */ T:-1 },\n\t0x042E: { /* n:\"BrtBeginSlicerCacheIDs\", */ T:1 },\n\t0x042F: { /* n:\"BrtEndSlicerCacheIDs\", */ T:-1 },\n\t0x0430: { /* n:\"BrtBeginSlicerCacheID\", */ T:1 },\n\t0x0431: { /* n:\"BrtEndSlicerCacheID\", */ T:-1 },\n\t0x0433: { /* n:\"BrtBeginSlicerCache\", */ T:1 },\n\t0x0434: { /* n:\"BrtEndSlicerCache\", */ T:-1 },\n\t0x0435: { /* n:\"BrtBeginSlicerCacheDef\", */ T:1 },\n\t0x0436: { /* n:\"BrtEndSlicerCacheDef\", */ T:-1 },\n\t0x0437: { /* n:\"BrtBeginSlicersEx\", */ T:1 },\n\t0x0438: { /* n:\"BrtEndSlicersEx\", */ T:-1 },\n\t0x0439: { /* n:\"BrtBeginSlicerEx\", */ T:1 },\n\t0x043A: { /* n:\"BrtEndSlicerEx\", */ T:-1 },\n\t0x043B: { /* n:\"BrtBeginSlicer\", */ T:1 },\n\t0x043C: { /* n:\"BrtEndSlicer\", */ T:-1 },\n\t0x043D: { /* n:\"BrtSlicerCachePivotTables\" */ },\n\t0x043E: { /* n:\"BrtBeginSlicerCacheOlapImpl\", */ T:1 },\n\t0x043F: { /* n:\"BrtEndSlicerCacheOlapImpl\", */ T:-1 },\n\t0x0440: { /* n:\"BrtBeginSlicerCacheLevelsData\", */ T:1 },\n\t0x0441: { /* n:\"BrtEndSlicerCacheLevelsData\", */ T:-1 },\n\t0x0442: { /* n:\"BrtBeginSlicerCacheLevelData\", */ T:1 },\n\t0x0443: { /* n:\"BrtEndSlicerCacheLevelData\", */ T:-1 },\n\t0x0444: { /* n:\"BrtBeginSlicerCacheSiRanges\", */ T:1 },\n\t0x0445: { /* n:\"BrtEndSlicerCacheSiRanges\", */ T:-1 },\n\t0x0446: { /* n:\"BrtBeginSlicerCacheSiRange\", */ T:1 },\n\t0x0447: { /* n:\"BrtEndSlicerCacheSiRange\", */ T:-1 },\n\t0x0448: { /* n:\"BrtSlicerCacheOlapItem\" */ },\n\t0x0449: { /* n:\"BrtBeginSlicerCacheSelections\", */ T:1 },\n\t0x044A: { /* n:\"BrtSlicerCacheSelection\" */ },\n\t0x044B: { /* n:\"BrtEndSlicerCacheSelections\", */ T:-1 },\n\t0x044C: { /* n:\"BrtBeginSlicerCacheNative\", */ T:1 },\n\t0x044D: { /* n:\"BrtEndSlicerCacheNative\", */ T:-1 },\n\t0x044E: { /* n:\"BrtSlicerCacheNativeItem\" */ },\n\t0x044F: { /* n:\"BrtRangeProtection14\" */ },\n\t0x0450: { /* n:\"BrtRangeProtectionIso14\" */ },\n\t0x0451: { /* n:\"BrtCellIgnoreEC14\" */ },\n\t0x0457: { /* n:\"BrtList14\" */ },\n\t0x0458: { /* n:\"BrtCFIcon\" */ },\n\t0x0459: { /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */ T:1 },\n\t0x045A: { /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */ T:-1 },\n\t0x045B: { /* n:\"BrtBeginSlicers\", */ T:1 },\n\t0x045C: { /* n:\"BrtEndSlicers\", */ T:-1 },\n\t0x045D: { /* n:\"BrtWbProp14\" */ },\n\t0x045E: { /* n:\"BrtBeginSXEdit\", */ T:1 },\n\t0x045F: { /* n:\"BrtEndSXEdit\", */ T:-1 },\n\t0x0460: { /* n:\"BrtBeginSXEdits\", */ T:1 },\n\t0x0461: { /* n:\"BrtEndSXEdits\", */ T:-1 },\n\t0x0462: { /* n:\"BrtBeginSXChange\", */ T:1 },\n\t0x0463: { /* n:\"BrtEndSXChange\", */ T:-1 },\n\t0x0464: { /* n:\"BrtBeginSXChanges\", */ T:1 },\n\t0x0465: { /* n:\"BrtEndSXChanges\", */ T:-1 },\n\t0x0466: { /* n:\"BrtSXTupleItems\" */ },\n\t0x0468: { /* n:\"BrtBeginSlicerStyle\", */ T:1 },\n\t0x0469: { /* n:\"BrtEndSlicerStyle\", */ T:-1 },\n\t0x046A: { /* n:\"BrtSlicerStyleElement\" */ },\n\t0x046B: { /* n:\"BrtBeginStyleSheetExt14\", */ T:1 },\n\t0x046C: { /* n:\"BrtEndStyleSheetExt14\", */ T:-1 },\n\t0x046D: { /* n:\"BrtBeginSlicerCachesPivotCacheID\", */ T:1 },\n\t0x046E: { /* n:\"BrtEndSlicerCachesPivotCacheID\", */ T:-1 },\n\t0x046F: { /* n:\"BrtBeginConditionalFormattings\", */ T:1 },\n\t0x0470: { /* n:\"BrtEndConditionalFormattings\", */ T:-1 },\n\t0x0471: { /* n:\"BrtBeginPCDCalcMemExt\", */ T:1 },\n\t0x0472: { /* n:\"BrtEndPCDCalcMemExt\", */ T:-1 },\n\t0x0473: { /* n:\"BrtBeginPCDCalcMemsExt\", */ T:1 },\n\t0x0474: { /* n:\"BrtEndPCDCalcMemsExt\", */ T:-1 },\n\t0x0475: { /* n:\"BrtPCDField14\" */ },\n\t0x0476: { /* n:\"BrtBeginSlicerStyles\", */ T:1 },\n\t0x0477: { /* n:\"BrtEndSlicerStyles\", */ T:-1 },\n\t0x0478: { /* n:\"BrtBeginSlicerStyleElements\", */ T:1 },\n\t0x0479: { /* n:\"BrtEndSlicerStyleElements\", */ T:-1 },\n\t0x047A: { /* n:\"BrtCFRuleExt\" */ },\n\t0x047B: { /* n:\"BrtBeginSXCondFmt14\", */ T:1 },\n\t0x047C: { /* n:\"BrtEndSXCondFmt14\", */ T:-1 },\n\t0x047D: { /* n:\"BrtBeginSXCondFmts14\", */ T:1 },\n\t0x047E: { /* n:\"BrtEndSXCondFmts14\", */ T:-1 },\n\t0x0480: { /* n:\"BrtBeginSortCond14\", */ T:1 },\n\t0x0481: { /* n:\"BrtEndSortCond14\", */ T:-1 },\n\t0x0482: { /* n:\"BrtEndDVals14\", */ T:-1 },\n\t0x0483: { /* n:\"BrtEndIconSet14\", */ T:-1 },\n\t0x0484: { /* n:\"BrtEndDatabar14\", */ T:-1 },\n\t0x0485: { /* n:\"BrtBeginColorScale14\", */ T:1 },\n\t0x0486: { /* n:\"BrtEndColorScale14\", */ T:-1 },\n\t0x0487: { /* n:\"BrtBeginSxrules14\", */ T:1 },\n\t0x0488: { /* n:\"BrtEndSxrules14\", */ T:-1 },\n\t0x0489: { /* n:\"BrtBeginPRule14\", */ T:1 },\n\t0x048A: { /* n:\"BrtEndPRule14\", */ T:-1 },\n\t0x048B: { /* n:\"BrtBeginPRFilters14\", */ T:1 },\n\t0x048C: { /* n:\"BrtEndPRFilters14\", */ T:-1 },\n\t0x048D: { /* n:\"BrtBeginPRFilter14\", */ T:1 },\n\t0x048E: { /* n:\"BrtEndPRFilter14\", */ T:-1 },\n\t0x048F: { /* n:\"BrtBeginPRFItem14\", */ T:1 },\n\t0x0490: { /* n:\"BrtEndPRFItem14\", */ T:-1 },\n\t0x0491: { /* n:\"BrtBeginCellIgnoreECs14\", */ T:1 },\n\t0x0492: { /* n:\"BrtEndCellIgnoreECs14\", */ T:-1 },\n\t0x0493: { /* n:\"BrtDxf14\" */ },\n\t0x0494: { /* n:\"BrtBeginDxF14s\", */ T:1 },\n\t0x0495: { /* n:\"BrtEndDxf14s\", */ T:-1 },\n\t0x0499: { /* n:\"BrtFilter14\" */ },\n\t0x049A: { /* n:\"BrtBeginCustomFilters14\", */ T:1 },\n\t0x049C: { /* n:\"BrtCustomFilter14\" */ },\n\t0x049D: { /* n:\"BrtIconFilter14\" */ },\n\t0x049E: { /* n:\"BrtPivotCacheConnectionName\" */ },\n\t0x0800: { /* n:\"BrtBeginDecoupledPivotCacheIDs\", */ T:1 },\n\t0x0801: { /* n:\"BrtEndDecoupledPivotCacheIDs\", */ T:-1 },\n\t0x0802: { /* n:\"BrtDecoupledPivotCacheID\" */ },\n\t0x0803: { /* n:\"BrtBeginPivotTableRefs\", */ T:1 },\n\t0x0804: { /* n:\"BrtEndPivotTableRefs\", */ T:-1 },\n\t0x0805: { /* n:\"BrtPivotTableRef\" */ },\n\t0x0806: { /* n:\"BrtSlicerCacheBookPivotTables\" */ },\n\t0x0807: { /* n:\"BrtBeginSxvcells\", */ T:1 },\n\t0x0808: { /* n:\"BrtEndSxvcells\", */ T:-1 },\n\t0x0809: { /* n:\"BrtBeginSxRow\", */ T:1 },\n\t0x080A: { /* n:\"BrtEndSxRow\", */ T:-1 },\n\t0x080C: { /* n:\"BrtPcdCalcMem15\" */ },\n\t0x0813: { /* n:\"BrtQsi15\" */ },\n\t0x0814: { /* n:\"BrtBeginWebExtensions\", */ T:1 },\n\t0x0815: { /* n:\"BrtEndWebExtensions\", */ T:-1 },\n\t0x0816: { /* n:\"BrtWebExtension\" */ },\n\t0x0817: { /* n:\"BrtAbsPath15\" */ },\n\t0x0818: { /* n:\"BrtBeginPivotTableUISettings\", */ T:1 },\n\t0x0819: { /* n:\"BrtEndPivotTableUISettings\", */ T:-1 },\n\t0x081B: { /* n:\"BrtTableSlicerCacheIDs\" */ },\n\t0x081C: { /* n:\"BrtTableSlicerCacheID\" */ },\n\t0x081D: { /* n:\"BrtBeginTableSlicerCache\", */ T:1 },\n\t0x081E: { /* n:\"BrtEndTableSlicerCache\", */ T:-1 },\n\t0x081F: { /* n:\"BrtSxFilter15\" */ },\n\t0x0820: { /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */ T:1 },\n\t0x0821: { /* n:\"BrtEndTimelineCachePivotCacheIDs\", */ T:-1 },\n\t0x0822: { /* n:\"BrtTimelineCachePivotCacheID\" */ },\n\t0x0823: { /* n:\"BrtBeginTimelineCacheIDs\", */ T:1 },\n\t0x0824: { /* n:\"BrtEndTimelineCacheIDs\", */ T:-1 },\n\t0x0825: { /* n:\"BrtBeginTimelineCacheID\", */ T:1 },\n\t0x0826: { /* n:\"BrtEndTimelineCacheID\", */ T:-1 },\n\t0x0827: { /* n:\"BrtBeginTimelinesEx\", */ T:1 },\n\t0x0828: { /* n:\"BrtEndTimelinesEx\", */ T:-1 },\n\t0x0829: { /* n:\"BrtBeginTimelineEx\", */ T:1 },\n\t0x082A: { /* n:\"BrtEndTimelineEx\", */ T:-1 },\n\t0x082B: { /* n:\"BrtWorkBookPr15\" */ },\n\t0x082C: { /* n:\"BrtPCDH15\" */ },\n\t0x082D: { /* n:\"BrtBeginTimelineStyle\", */ T:1 },\n\t0x082E: { /* n:\"BrtEndTimelineStyle\", */ T:-1 },\n\t0x082F: { /* n:\"BrtTimelineStyleElement\" */ },\n\t0x0830: { /* n:\"BrtBeginTimelineStylesheetExt15\", */ T:1 },\n\t0x0831: { /* n:\"BrtEndTimelineStylesheetExt15\", */ T:-1 },\n\t0x0832: { /* n:\"BrtBeginTimelineStyles\", */ T:1 },\n\t0x0833: { /* n:\"BrtEndTimelineStyles\", */ T:-1 },\n\t0x0834: { /* n:\"BrtBeginTimelineStyleElements\", */ T:1 },\n\t0x0835: { /* n:\"BrtEndTimelineStyleElements\", */ T:-1 },\n\t0x0836: { /* n:\"BrtDxf15\" */ },\n\t0x0837: { /* n:\"BrtBeginDxfs15\", */ T:1 },\n\t0x0838: { /* n:\"BrtEndDxfs15\", */ T:-1 },\n\t0x0839: { /* n:\"BrtSlicerCacheHideItemsWithNoData\" */ },\n\t0x083A: { /* n:\"BrtBeginItemUniqueNames\", */ T:1 },\n\t0x083B: { /* n:\"BrtEndItemUniqueNames\", */ T:-1 },\n\t0x083C: { /* n:\"BrtItemUniqueName\" */ },\n\t0x083D: { /* n:\"BrtBeginExtConn15\", */ T:1 },\n\t0x083E: { /* n:\"BrtEndExtConn15\", */ T:-1 },\n\t0x083F: { /* n:\"BrtBeginOledbPr15\", */ T:1 },\n\t0x0840: { /* n:\"BrtEndOledbPr15\", */ T:-1 },\n\t0x0841: { /* n:\"BrtBeginDataFeedPr15\", */ T:1 },\n\t0x0842: { /* n:\"BrtEndDataFeedPr15\", */ T:-1 },\n\t0x0843: { /* n:\"BrtTextPr15\" */ },\n\t0x0844: { /* n:\"BrtRangePr15\" */ },\n\t0x0845: { /* n:\"BrtDbCommand15\" */ },\n\t0x0846: { /* n:\"BrtBeginDbTables15\", */ T:1 },\n\t0x0847: { /* n:\"BrtEndDbTables15\", */ T:-1 },\n\t0x0848: { /* n:\"BrtDbTable15\" */ },\n\t0x0849: { /* n:\"BrtBeginDataModel\", */ T:1 },\n\t0x084A: { /* n:\"BrtEndDataModel\", */ T:-1 },\n\t0x084B: { /* n:\"BrtBeginModelTables\", */ T:1 },\n\t0x084C: { /* n:\"BrtEndModelTables\", */ T:-1 },\n\t0x084D: { /* n:\"BrtModelTable\" */ },\n\t0x084E: { /* n:\"BrtBeginModelRelationships\", */ T:1 },\n\t0x084F: { /* n:\"BrtEndModelRelationships\", */ T:-1 },\n\t0x0850: { /* n:\"BrtModelRelationship\" */ },\n\t0x0851: { /* n:\"BrtBeginECTxtWiz15\", */ T:1 },\n\t0x0852: { /* n:\"BrtEndECTxtWiz15\", */ T:-1 },\n\t0x0853: { /* n:\"BrtBeginECTWFldInfoLst15\", */ T:1 },\n\t0x0854: { /* n:\"BrtEndECTWFldInfoLst15\", */ T:-1 },\n\t0x0855: { /* n:\"BrtBeginECTWFldInfo15\", */ T:1 },\n\t0x0856: { /* n:\"BrtFieldListActiveItem\" */ },\n\t0x0857: { /* n:\"BrtPivotCacheIdVersion\" */ },\n\t0x0858: { /* n:\"BrtSXDI15\" */ },\n\t0x0859: { /* n:\"BrtBeginModelTimeGroupings\", */ T:1 },\n\t0x085A: { /* n:\"BrtEndModelTimeGroupings\", */ T:-1 },\n\t0x085B: { /* n:\"BrtBeginModelTimeGrouping\", */ T:1 },\n\t0x085C: { /* n:\"BrtEndModelTimeGrouping\", */ T:-1 },\n\t0x085D: { /* n:\"BrtModelTimeGroupingCalcCol\" */ },\n\t0x0C00: { /* n:\"BrtUid\" */ },\n\t0x0C01: { /* n:\"BrtRevisionPtr\" */ },\n\t0x1000: { /* n:\"BrtBeginDynamicArrayPr\", */ T:1 },\n\t0x1001: { /* n:\"BrtEndDynamicArrayPr\", */ T:-1 },\n\t0x138A: { /* n:\"BrtBeginRichValueBlock\", */ T:1 },\n\t0x138B: { /* n:\"BrtEndRichValueBlock\", */ T:-1 },\n\t0x13D9: { /* n:\"BrtBeginRichFilters\", */ T:1 },\n\t0x13DA: { /* n:\"BrtEndRichFilters\", */ T:-1 },\n\t0x13DB: { /* n:\"BrtRichFilter\" */ },\n\t0x13DC: { /* n:\"BrtBeginRichFilterColumn\", */ T:1 },\n\t0x13DD: { /* n:\"BrtEndRichFilterColumn\", */ T:-1 },\n\t0x13DE: { /* n:\"BrtBeginCustomRichFilters\", */ T:1 },\n\t0x13DF: { /* n:\"BrtEndCustomRichFilters\", */ T:-1 },\n\t0x13E0: { /* n:\"BrtCustomRichFilter\" */ },\n\t0x13E1: { /* n:\"BrtTop10RichFilter\" */ },\n\t0x13E2: { /* n:\"BrtDynamicRichFilter\" */ },\n\t0x13E4: { /* n:\"BrtBeginRichSortCondition\", */ T:1 },\n\t0x13E5: { /* n:\"BrtEndRichSortCondition\", */ T:-1 },\n\t0x13E6: { /* n:\"BrtRichFilterDateGroupItem\" */ },\n\t0x13E7: { /* n:\"BrtBeginCalcFeatures\", */ T:1 },\n\t0x13E8: { /* n:\"BrtEndCalcFeatures\", */ T:-1 },\n\t0x13E9: { /* n:\"BrtCalcFeature\" */ },\n\t0x13EB: { /* n:\"BrtExternalLinksPr\" */ },\n\t0xFFFF: { n:\"\" }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n\t/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n\t0x0006: { /* n:\"Formula\", */ f:parse_Formula },\n\t0x000a: { /* n:\"EOF\", */ f:parsenoop2 },\n\t0x000c: { /* n:\"CalcCount\", */ f:parseuint16 }, //\n\t0x000d: { /* n:\"CalcMode\", */ f:parseuint16 }, //\n\t0x000e: { /* n:\"CalcPrecision\", */ f:parsebool }, //\n\t0x000f: { /* n:\"CalcRefMode\", */ f:parsebool }, //\n\t0x0010: { /* n:\"CalcDelta\", */ f:parse_Xnum }, //\n\t0x0011: { /* n:\"CalcIter\", */ f:parsebool }, //\n\t0x0012: { /* n:\"Protect\", */ f:parsebool },\n\t0x0013: { /* n:\"Password\", */ f:parseuint16 },\n\t0x0014: { /* n:\"Header\", */ f:parse_XLHeaderFooter },\n\t0x0015: { /* n:\"Footer\", */ f:parse_XLHeaderFooter },\n\t0x0017: { /* n:\"ExternSheet\", */ f:parse_ExternSheet },\n\t0x0018: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t0x0019: { /* n:\"WinProtect\", */ f:parsebool },\n\t0x001a: { /* n:\"VerticalPageBreaks\", */ },\n\t0x001b: { /* n:\"HorizontalPageBreaks\", */ },\n\t0x001c: { /* n:\"Note\", */ f:parse_Note },\n\t0x001d: { /* n:\"Selection\", */ },\n\t0x0022: { /* n:\"Date1904\", */ f:parsebool },\n\t0x0023: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t0x0026: { /* n:\"LeftMargin\", */ f:parse_Xnum }, // *\n\t0x0027: { /* n:\"RightMargin\", */ f:parse_Xnum }, // *\n\t0x0028: { /* n:\"TopMargin\", */ f:parse_Xnum }, // *\n\t0x0029: { /* n:\"BottomMargin\", */ f:parse_Xnum }, // *\n\t0x002a: { /* n:\"PrintRowCol\", */ f:parsebool },\n\t0x002b: { /* n:\"PrintGrid\", */ f:parsebool },\n\t0x002f: { /* n:\"FilePass\", */ f:parse_FilePass },\n\t0x0031: { /* n:\"Font\", */ f:parse_Font },\n\t0x0033: { /* n:\"PrintSize\", */ f:parseuint16 },\n\t0x003c: { /* n:\"Continue\", */ },\n\t0x003d: { /* n:\"Window1\", */ f:parse_Window1 },\n\t0x0040: { /* n:\"Backup\", */ f:parsebool },\n\t0x0041: { /* n:\"Pane\", */ f:parse_Pane },\n\t0x0042: { /* n:\"CodePage\", */ f:parseuint16 },\n\t0x004d: { /* n:\"Pls\", */ },\n\t0x0050: { /* n:\"DCon\", */ },\n\t0x0051: { /* n:\"DConRef\", */ },\n\t0x0052: { /* n:\"DConName\", */ },\n\t0x0055: { /* n:\"DefColWidth\", */ f:parseuint16 },\n\t0x0059: { /* n:\"XCT\", */ },\n\t0x005a: { /* n:\"CRN\", */ },\n\t0x005b: { /* n:\"FileSharing\", */ },\n\t0x005c: { /* n:\"WriteAccess\", */ f:parse_WriteAccess },\n\t0x005d: { /* n:\"Obj\", */ f:parse_Obj },\n\t0x005e: { /* n:\"Uncalced\", */ },\n\t0x005f: { /* n:\"CalcSaveRecalc\", */ f:parsebool }, //\n\t0x0060: { /* n:\"Template\", */ },\n\t0x0061: { /* n:\"Intl\", */ },\n\t0x0063: { /* n:\"ObjProtect\", */ f:parsebool },\n\t0x007d: { /* n:\"ColInfo\", */ f:parse_ColInfo },\n\t0x0080: { /* n:\"Guts\", */ f:parse_Guts },\n\t0x0081: { /* n:\"WsBool\", */ f:parse_WsBool },\n\t0x0082: { /* n:\"GridSet\", */ f:parseuint16 },\n\t0x0083: { /* n:\"HCenter\", */ f:parsebool },\n\t0x0084: { /* n:\"VCenter\", */ f:parsebool },\n\t0x0085: { /* n:\"BoundSheet8\", */ f:parse_BoundSheet8 },\n\t0x0086: { /* n:\"WriteProtect\", */ },\n\t0x008c: { /* n:\"Country\", */ f:parse_Country },\n\t0x008d: { /* n:\"HideObj\", */ f:parseuint16 },\n\t0x0090: { /* n:\"Sort\", */ },\n\t0x0092: { /* n:\"Palette\", */ f:parse_Palette },\n\t0x0097: { /* n:\"Sync\", */ },\n\t0x0098: { /* n:\"LPr\", */ },\n\t0x0099: { /* n:\"DxGCol\", */ },\n\t0x009a: { /* n:\"FnGroupName\", */ },\n\t0x009b: { /* n:\"FilterMode\", */ },\n\t0x009c: { /* n:\"BuiltInFnGroupCount\", */ f:parseuint16 },\n\t0x009d: { /* n:\"AutoFilterInfo\", */ },\n\t0x009e: { /* n:\"AutoFilter\", */ },\n\t0x00a0: { /* n:\"Scl\", */ f:parse_Scl },\n\t0x00a1: { /* n:\"Setup\", */ f:parse_Setup },\n\t0x00ae: { /* n:\"ScenMan\", */ },\n\t0x00af: { /* n:\"SCENARIO\", */ },\n\t0x00b0: { /* n:\"SxView\", */ },\n\t0x00b1: { /* n:\"Sxvd\", */ },\n\t0x00b2: { /* n:\"SXVI\", */ },\n\t0x00b4: { /* n:\"SxIvd\", */ },\n\t0x00b5: { /* n:\"SXLI\", */ },\n\t0x00b6: { /* n:\"SXPI\", */ },\n\t0x00b8: { /* n:\"DocRoute\", */ },\n\t0x00b9: { /* n:\"RecipName\", */ },\n\t0x00bd: { /* n:\"MulRk\", */ f:parse_MulRk },\n\t0x00be: { /* n:\"MulBlank\", */ f:parse_MulBlank },\n\t0x00c1: { /* n:\"Mms\", */ f:parsenoop2 },\n\t0x00c5: { /* n:\"SXDI\", */ },\n\t0x00c6: { /* n:\"SXDB\", */ },\n\t0x00c7: { /* n:\"SXFDB\", */ },\n\t0x00c8: { /* n:\"SXDBB\", */ },\n\t0x00c9: { /* n:\"SXNum\", */ },\n\t0x00ca: { /* n:\"SxBool\", */ f:parsebool },\n\t0x00cb: { /* n:\"SxErr\", */ },\n\t0x00cc: { /* n:\"SXInt\", */ },\n\t0x00cd: { /* n:\"SXString\", */ },\n\t0x00ce: { /* n:\"SXDtr\", */ },\n\t0x00cf: { /* n:\"SxNil\", */ },\n\t0x00d0: { /* n:\"SXTbl\", */ },\n\t0x00d1: { /* n:\"SXTBRGIITM\", */ },\n\t0x00d2: { /* n:\"SxTbpg\", */ },\n\t0x00d3: { /* n:\"ObProj\", */ },\n\t0x00d5: { /* n:\"SXStreamID\", */ },\n\t0x00d7: { /* n:\"DBCell\", */ },\n\t0x00d8: { /* n:\"SXRng\", */ },\n\t0x00d9: { /* n:\"SxIsxoper\", */ },\n\t0x00da: { /* n:\"BookBool\", */ f:parseuint16 },\n\t0x00dc: { /* n:\"DbOrParamQry\", */ },\n\t0x00dd: { /* n:\"ScenarioProtect\", */ f:parsebool },\n\t0x00de: { /* n:\"OleObjectSize\", */ },\n\t0x00e0: { /* n:\"XF\", */ f:parse_XF },\n\t0x00e1: { /* n:\"InterfaceHdr\", */ f:parse_InterfaceHdr },\n\t0x00e2: { /* n:\"InterfaceEnd\", */ f:parsenoop2 },\n\t0x00e3: { /* n:\"SXVS\", */ },\n\t0x00e5: { /* n:\"MergeCells\", */ f:parse_MergeCells },\n\t0x00e9: { /* n:\"BkHim\", */ },\n\t0x00eb: { /* n:\"MsoDrawingGroup\", */ },\n\t0x00ec: { /* n:\"MsoDrawing\", */ },\n\t0x00ed: { /* n:\"MsoDrawingSelection\", */ },\n\t0x00ef: { /* n:\"PhoneticInfo\", */ },\n\t0x00f0: { /* n:\"SxRule\", */ },\n\t0x00f1: { /* n:\"SXEx\", */ },\n\t0x00f2: { /* n:\"SxFilt\", */ },\n\t0x00f4: { /* n:\"SxDXF\", */ },\n\t0x00f5: { /* n:\"SxItm\", */ },\n\t0x00f6: { /* n:\"SxName\", */ },\n\t0x00f7: { /* n:\"SxSelect\", */ },\n\t0x00f8: { /* n:\"SXPair\", */ },\n\t0x00f9: { /* n:\"SxFmla\", */ },\n\t0x00fb: { /* n:\"SxFormat\", */ },\n\t0x00fc: { /* n:\"SST\", */ f:parse_SST },\n\t0x00fd: { /* n:\"LabelSst\", */ f:parse_LabelSst },\n\t0x00ff: { /* n:\"ExtSST\", */ f:parse_ExtSST },\n\t0x0100: { /* n:\"SXVDEx\", */ },\n\t0x0103: { /* n:\"SXFormula\", */ },\n\t0x0122: { /* n:\"SXDBEx\", */ },\n\t0x0137: { /* n:\"RRDInsDel\", */ },\n\t0x0138: { /* n:\"RRDHead\", */ },\n\t0x013b: { /* n:\"RRDChgCell\", */ },\n\t0x013d: { /* n:\"RRTabId\", */ f:parseuint16a },\n\t0x013e: { /* n:\"RRDRenSheet\", */ },\n\t0x013f: { /* n:\"RRSort\", */ },\n\t0x0140: { /* n:\"RRDMove\", */ },\n\t0x014a: { /* n:\"RRFormat\", */ },\n\t0x014b: { /* n:\"RRAutoFmt\", */ },\n\t0x014d: { /* n:\"RRInsertSh\", */ },\n\t0x014e: { /* n:\"RRDMoveBegin\", */ },\n\t0x014f: { /* n:\"RRDMoveEnd\", */ },\n\t0x0150: { /* n:\"RRDInsDelBegin\", */ },\n\t0x0151: { /* n:\"RRDInsDelEnd\", */ },\n\t0x0152: { /* n:\"RRDConflict\", */ },\n\t0x0153: { /* n:\"RRDDefName\", */ },\n\t0x0154: { /* n:\"RRDRstEtxp\", */ },\n\t0x015f: { /* n:\"LRng\", */ },\n\t0x0160: { /* n:\"UsesELFs\", */ f:parsebool },\n\t0x0161: { /* n:\"DSF\", */ f:parsenoop2 },\n\t0x0191: { /* n:\"CUsr\", */ },\n\t0x0192: { /* n:\"CbUsr\", */ },\n\t0x0193: { /* n:\"UsrInfo\", */ },\n\t0x0194: { /* n:\"UsrExcl\", */ },\n\t0x0195: { /* n:\"FileLock\", */ },\n\t0x0196: { /* n:\"RRDInfo\", */ },\n\t0x0197: { /* n:\"BCUsrs\", */ },\n\t0x0198: { /* n:\"UsrChk\", */ },\n\t0x01a9: { /* n:\"UserBView\", */ },\n\t0x01aa: { /* n:\"UserSViewBegin\", */ },\n\t0x01ab: { /* n:\"UserSViewEnd\", */ },\n\t0x01ac: { /* n:\"RRDUserView\", */ },\n\t0x01ad: { /* n:\"Qsi\", */ },\n\t0x01ae: { /* n:\"SupBook\", */ f:parse_SupBook },\n\t0x01af: { /* n:\"Prot4Rev\", */ f:parsebool },\n\t0x01b0: { /* n:\"CondFmt\", */ },\n\t0x01b1: { /* n:\"CF\", */ },\n\t0x01b2: { /* n:\"DVal\", */ },\n\t0x01b5: { /* n:\"DConBin\", */ },\n\t0x01b6: { /* n:\"TxO\", */ f:parse_TxO },\n\t0x01b7: { /* n:\"RefreshAll\", */ f:parsebool }, //\n\t0x01b8: { /* n:\"HLink\", */ f:parse_HLink },\n\t0x01b9: { /* n:\"Lel\", */ },\n\t0x01ba: { /* n:\"CodeName\", */ f:parse_XLUnicodeString },\n\t0x01bb: { /* n:\"SXFDBType\", */ },\n\t0x01bc: { /* n:\"Prot4RevPass\", */ f:parseuint16 },\n\t0x01bd: { /* n:\"ObNoMacros\", */ },\n\t0x01be: { /* n:\"Dv\", */ },\n\t0x01c0: { /* n:\"Excel9File\", */ f:parsenoop2 },\n\t0x01c1: { /* n:\"RecalcId\", */ f:parse_RecalcId, r:2},\n\t0x01c2: { /* n:\"EntExU2\", */ f:parsenoop2 },\n\t0x0200: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t0x0201: { /* n:\"Blank\", */ f:parse_Blank },\n\t0x0203: { /* n:\"Number\", */ f:parse_Number },\n\t0x0204: { /* n:\"Label\", */ f:parse_Label },\n\t0x0205: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t0x0207: { /* n:\"String\", */ f:parse_String },\n\t0x0208: { /* n:\"Row\", */ f:parse_Row },\n\t0x020b: { /* n:\"Index\", */ },\n\t0x0221: { /* n:\"Array\", */ f:parse_Array },\n\t0x0225: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t0x0236: { /* n:\"Table\", */ },\n\t0x023e: { /* n:\"Window2\", */ f:parse_Window2 },\n\t0x027e: { /* n:\"RK\", */ f:parse_RK },\n\t0x0293: { /* n:\"Style\", */ },\n\t0x0418: { /* n:\"BigName\", */ },\n\t0x041e: { /* n:\"Format\", */ f:parse_Format },\n\t0x043c: { /* n:\"ContinueBigName\", */ },\n\t0x04bc: { /* n:\"ShrFmla\", */ f:parse_ShrFmla },\n\t0x0800: { /* n:\"HLinkTooltip\", */ f:parse_HLinkTooltip },\n\t0x0801: { /* n:\"WebPub\", */ },\n\t0x0802: { /* n:\"QsiSXTag\", */ },\n\t0x0803: { /* n:\"DBQueryExt\", */ },\n\t0x0804: { /* n:\"ExtString\", */ },\n\t0x0805: { /* n:\"TxtQry\", */ },\n\t0x0806: { /* n:\"Qsir\", */ },\n\t0x0807: { /* n:\"Qsif\", */ },\n\t0x0808: { /* n:\"RRDTQSIF\", */ },\n\t0x0809: { /* n:\"BOF\", */ f:parse_BOF },\n\t0x080a: { /* n:\"OleDbConn\", */ },\n\t0x080b: { /* n:\"WOpt\", */ },\n\t0x080c: { /* n:\"SXViewEx\", */ },\n\t0x080d: { /* n:\"SXTH\", */ },\n\t0x080e: { /* n:\"SXPIEx\", */ },\n\t0x080f: { /* n:\"SXVDTEx\", */ },\n\t0x0810: { /* n:\"SXViewEx9\", */ },\n\t0x0812: { /* n:\"ContinueFrt\", */ },\n\t0x0813: { /* n:\"RealTimeData\", */ },\n\t0x0850: { /* n:\"ChartFrtInfo\", */ },\n\t0x0851: { /* n:\"FrtWrapper\", */ },\n\t0x0852: { /* n:\"StartBlock\", */ },\n\t0x0853: { /* n:\"EndBlock\", */ },\n\t0x0854: { /* n:\"StartObject\", */ },\n\t0x0855: { /* n:\"EndObject\", */ },\n\t0x0856: { /* n:\"CatLab\", */ },\n\t0x0857: { /* n:\"YMult\", */ },\n\t0x0858: { /* n:\"SXViewLink\", */ },\n\t0x0859: { /* n:\"PivotChartBits\", */ },\n\t0x085a: { /* n:\"FrtFontList\", */ },\n\t0x0862: { /* n:\"SheetExt\", */ },\n\t0x0863: { /* n:\"BookExt\", */ r:12},\n\t0x0864: { /* n:\"SXAddl\", */ },\n\t0x0865: { /* n:\"CrErr\", */ },\n\t0x0866: { /* n:\"HFPicture\", */ },\n\t0x0867: { /* n:\"FeatHdr\", */ f:parsenoop2 },\n\t0x0868: { /* n:\"Feat\", */ },\n\t0x086a: { /* n:\"DataLabExt\", */ },\n\t0x086b: { /* n:\"DataLabExtContents\", */ },\n\t0x086c: { /* n:\"CellWatch\", */ },\n\t0x0871: { /* n:\"FeatHdr11\", */ },\n\t0x0872: { /* n:\"Feature11\", */ },\n\t0x0874: { /* n:\"DropDownObjIds\", */ },\n\t0x0875: { /* n:\"ContinueFrt11\", */ },\n\t0x0876: { /* n:\"DConn\", */ },\n\t0x0877: { /* n:\"List12\", */ },\n\t0x0878: { /* n:\"Feature12\", */ },\n\t0x0879: { /* n:\"CondFmt12\", */ },\n\t0x087a: { /* n:\"CF12\", */ },\n\t0x087b: { /* n:\"CFEx\", */ },\n\t0x087c: { /* n:\"XFCRC\", */ f:parse_XFCRC, r:12 },\n\t0x087d: { /* n:\"XFExt\", */ f:parse_XFExt, r:12 },\n\t0x087e: { /* n:\"AutoFilter12\", */ },\n\t0x087f: { /* n:\"ContinueFrt12\", */ },\n\t0x0884: { /* n:\"MDTInfo\", */ },\n\t0x0885: { /* n:\"MDXStr\", */ },\n\t0x0886: { /* n:\"MDXTuple\", */ },\n\t0x0887: { /* n:\"MDXSet\", */ },\n\t0x0888: { /* n:\"MDXProp\", */ },\n\t0x0889: { /* n:\"MDXKPI\", */ },\n\t0x088a: { /* n:\"MDB\", */ },\n\t0x088b: { /* n:\"PLV\", */ },\n\t0x088c: { /* n:\"Compat12\", */ f:parsebool, r:12 },\n\t0x088d: { /* n:\"DXF\", */ },\n\t0x088e: { /* n:\"TableStyles\", */ r:12 },\n\t0x088f: { /* n:\"TableStyle\", */ },\n\t0x0890: { /* n:\"TableStyleElement\", */ },\n\t0x0892: { /* n:\"StyleExt\", */ },\n\t0x0893: { /* n:\"NamePublish\", */ },\n\t0x0894: { /* n:\"NameCmt\", */ f:parse_NameCmt, r:12 },\n\t0x0895: { /* n:\"SortData\", */ },\n\t0x0896: { /* n:\"Theme\", */ f:parse_Theme, r:12 },\n\t0x0897: { /* n:\"GUIDTypeLib\", */ },\n\t0x0898: { /* n:\"FnGrp12\", */ },\n\t0x0899: { /* n:\"NameFnGrp12\", */ },\n\t0x089a: { /* n:\"MTRSettings\", */ f:parse_MTRSettings, r:12 },\n\t0x089b: { /* n:\"CompressPictures\", */ f:parsenoop2 },\n\t0x089c: { /* n:\"HeaderFooter\", */ },\n\t0x089d: { /* n:\"CrtLayout12\", */ },\n\t0x089e: { /* n:\"CrtMlFrt\", */ },\n\t0x089f: { /* n:\"CrtMlFrtContinue\", */ },\n\t0x08a3: { /* n:\"ForceFullCalculation\", */ f:parse_ForceFullCalculation },\n\t0x08a4: { /* n:\"ShapePropsStream\", */ },\n\t0x08a5: { /* n:\"TextPropsStream\", */ },\n\t0x08a6: { /* n:\"RichTextStream\", */ },\n\t0x08a7: { /* n:\"CrtLayout12A\", */ },\n\t0x1001: { /* n:\"Units\", */ },\n\t0x1002: { /* n:\"Chart\", */ },\n\t0x1003: { /* n:\"Series\", */ },\n\t0x1006: { /* n:\"DataFormat\", */ },\n\t0x1007: { /* n:\"LineFormat\", */ },\n\t0x1009: { /* n:\"MarkerFormat\", */ },\n\t0x100a: { /* n:\"AreaFormat\", */ },\n\t0x100b: { /* n:\"PieFormat\", */ },\n\t0x100c: { /* n:\"AttachedLabel\", */ },\n\t0x100d: { /* n:\"SeriesText\", */ },\n\t0x1014: { /* n:\"ChartFormat\", */ },\n\t0x1015: { /* n:\"Legend\", */ },\n\t0x1016: { /* n:\"SeriesList\", */ },\n\t0x1017: { /* n:\"Bar\", */ },\n\t0x1018: { /* n:\"Line\", */ },\n\t0x1019: { /* n:\"Pie\", */ },\n\t0x101a: { /* n:\"Area\", */ },\n\t0x101b: { /* n:\"Scatter\", */ },\n\t0x101c: { /* n:\"CrtLine\", */ },\n\t0x101d: { /* n:\"Axis\", */ },\n\t0x101e: { /* n:\"Tick\", */ },\n\t0x101f: { /* n:\"ValueRange\", */ },\n\t0x1020: { /* n:\"CatSerRange\", */ },\n\t0x1021: { /* n:\"AxisLine\", */ },\n\t0x1022: { /* n:\"CrtLink\", */ },\n\t0x1024: { /* n:\"DefaultText\", */ },\n\t0x1025: { /* n:\"Text\", */ },\n\t0x1026: { /* n:\"FontX\", */ f:parseuint16 },\n\t0x1027: { /* n:\"ObjectLink\", */ },\n\t0x1032: { /* n:\"Frame\", */ },\n\t0x1033: { /* n:\"Begin\", */ },\n\t0x1034: { /* n:\"End\", */ },\n\t0x1035: { /* n:\"PlotArea\", */ },\n\t0x103a: { /* n:\"Chart3d\", */ },\n\t0x103c: { /* n:\"PicF\", */ },\n\t0x103d: { /* n:\"DropBar\", */ },\n\t0x103e: { /* n:\"Radar\", */ },\n\t0x103f: { /* n:\"Surf\", */ },\n\t0x1040: { /* n:\"RadarArea\", */ },\n\t0x1041: { /* n:\"AxisParent\", */ },\n\t0x1043: { /* n:\"LegendException\", */ },\n\t0x1044: { /* n:\"ShtProps\", */ f:parse_ShtProps },\n\t0x1045: { /* n:\"SerToCrt\", */ },\n\t0x1046: { /* n:\"AxesUsed\", */ },\n\t0x1048: { /* n:\"SBaseRef\", */ },\n\t0x104a: { /* n:\"SerParent\", */ },\n\t0x104b: { /* n:\"SerAuxTrend\", */ },\n\t0x104e: { /* n:\"IFmtRecord\", */ },\n\t0x104f: { /* n:\"Pos\", */ },\n\t0x1050: { /* n:\"AlRuns\", */ },\n\t0x1051: { /* n:\"BRAI\", */ },\n\t0x105b: { /* n:\"SerAuxErrBar\", */ },\n\t0x105c: { /* n:\"ClrtClient\", */ f:parse_ClrtClient },\n\t0x105d: { /* n:\"SerFmt\", */ },\n\t0x105f: { /* n:\"Chart3DBarShape\", */ },\n\t0x1060: { /* n:\"Fbi\", */ },\n\t0x1061: { /* n:\"BopPop\", */ },\n\t0x1062: { /* n:\"AxcExt\", */ },\n\t0x1063: { /* n:\"Dat\", */ },\n\t0x1064: { /* n:\"PlotGrowth\", */ },\n\t0x1065: { /* n:\"SIIndex\", */ },\n\t0x1066: { /* n:\"GelFrame\", */ },\n\t0x1067: { /* n:\"BopPopCustom\", */ },\n\t0x1068: { /* n:\"Fbi2\", */ },\n\n\t0x0000: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t0x0001: { /* n:\"BIFF2BLANK\", */ },\n\t0x0002: { /* n:\"BIFF2INT\", */ f:parse_BIFF2INT },\n\t0x0003: { /* n:\"BIFF2NUM\", */ f:parse_BIFF2NUM },\n\t0x0004: { /* n:\"BIFF2STR\", */ f:parse_BIFF2STR },\n\t0x0005: { /* n:\"BIFF2BOOLERR\", */ f:parse_BIFF2BOOLERR },\n\t0x0007: { /* n:\"String\", */ f:parse_BIFF2STRING },\n\t0x0008: { /* n:\"BIFF2ROW\", */ },\n\t0x0009: { /* n:\"BOF\", */ f:parse_BOF },\n\t0x000b: { /* n:\"Index\", */ },\n\t0x0016: { /* n:\"ExternCount\", */ f:parseuint16 },\n\t0x001e: { /* n:\"BIFF2FORMAT\", */ f:parse_BIFF2Format },\n\t0x001f: { /* n:\"BIFF2FMTCNT\", */ }, /* 16-bit cnt of BIFF2FORMAT records */\n\t0x0020: { /* n:\"BIFF2COLINFO\", */ },\n\t0x0021: { /* n:\"Array\", */ f:parse_Array },\n\t0x0024: { /* n:\"COLWIDTH\", */ },\n\t0x0025: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t// 0x002c ??\n\t// 0x002d ??\n\t// 0x002e ??\n\t// 0x0030 FONTCOUNT: number of fonts\n\t0x0032: { /* n:\"BIFF2FONTXTRA\", */ f:parse_BIFF2FONTXTRA },\n\t// 0x0035: INFOOPTS\n\t// 0x0036: TABLE (BIFF2 only)\n\t// 0x0037: TABLE2 (BIFF2 only)\n\t// 0x0038: WNDESK\n\t// 0x0039 ??\n\t// 0x003a: BEGINPREF\n\t// 0x003b: ENDPREF\n\t0x003e: { /* n:\"BIFF2WINDOW2\", */ },\n\t// 0x003f ??\n\t// 0x0046: SHOWSCROLL\n\t// 0x0047: SHOWFORMULA\n\t// 0x0048: STATUSBAR\n\t// 0x0049: SHORTMENUS\n\t// 0x004A:\n\t// 0x004B:\n\t// 0x004C:\n\t// 0x004E:\n\t// 0x004F:\n\t// 0x0058: TOOLBAR (BIFF3)\n\n\t/* - - - */\n\t0x0034: { /* n:\"DDEObjName\", */ },\n\t0x0043: { /* n:\"BIFF2XF\", */ f:parse_BIFF2XF },\n\t0x0044: { /* n:\"BIFF2XFINDEX\", */ f:parseuint16 },\n\t0x0045: { /* n:\"BIFF2FONTCLR\", */ },\n\t0x0056: { /* n:\"BIFF4FMTCNT\", */ }, /* 16-bit cnt, similar to BIFF2 */\n\t0x007e: { /* n:\"RK\", */ }, /* Not necessarily same as 0x027e */\n\t0x007f: { /* n:\"ImData\", */ f:parse_ImData },\n\t0x0087: { /* n:\"Addin\", */ },\n\t0x0088: { /* n:\"Edg\", */ },\n\t0x0089: { /* n:\"Pub\", */ },\n\t// 0x8A\n\t// 0x8B LH: alternate menu key flag (BIFF3/4)\n\t// 0x8E\n\t0x008F: { /* n:\"BIFF4SheetInfo\", */ f:parse_BIFF4SheetInfo },\n\t0x0091: { /* n:\"Sub\", */ },\n\t// 0x93 STYLE\n\t0x0094: { /* n:\"LHRecord\", */ },\n\t0x0095: { /* n:\"LHNGraph\", */ },\n\t0x0096: { /* n:\"Sound\", */ },\n\t// 0xA2 FNPROTO: function prototypes (BIFF4)\n\t// 0xA3\n\t// 0xA8\n\t0x00a9: { /* n:\"CoordList\", */ },\n\t0x00ab: { /* n:\"GCW\", */ },\n\t0x00bc: { /* n:\"ShrFmla\", */ }, /* Not necessarily same as 0x04bc */\n\t0x00bf: { /* n:\"ToolbarHdr\", */ },\n\t0x00c0: { /* n:\"ToolbarEnd\", */ },\n\t0x00c2: { /* n:\"AddMenu\", */ },\n\t0x00c3: { /* n:\"DelMenu\", */ },\n\t0x00d6: { /* n:\"RString\", */ f:parse_RString },\n\t0x00df: { /* n:\"UDDesc\", */ },\n\t0x00ea: { /* n:\"TabIdConf\", */ },\n\t0x0162: { /* n:\"XL5Modify\", */ },\n\t0x01a5: { /* n:\"FileSharing2\", */ },\n\t0x0206: { /* n:\"Formula\", */ f:parse_Formula },\n\t0x0209: { /* n:\"BOF\", */ f:parse_BOF },\n\t0x0218: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t0x0223: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t0x0231: { /* n:\"Font\", */ },\n\t0x0243: { /* n:\"BIFF3XF\", */ f:parse_BIFF3XF },\n\t0x0406: { /* n:\"Formula\", */ f:parse_Formula },\n\t0x0409: { /* n:\"BOF\", */ f:parse_BOF },\n\t0x0443: { /* n:\"BIFF4XF\", */ f:parse_BIFF4XF },\n\t0x086d: { /* n:\"FeatInfo\", */ },\n\t0x0873: { /* n:\"FeatInfo11\", */ },\n\t0x0881: { /* n:\"SXAddl12\", */ },\n\t0x08c0: { /* n:\"AutoWebPub\", */ },\n\t0x08c1: { /* n:\"ListObj\", */ },\n\t0x08c2: { /* n:\"ListField\", */ },\n\t0x08c3: { /* n:\"ListDV\", */ },\n\t0x08c4: { /* n:\"ListCondFmt\", */ },\n\t0x08c5: { /* n:\"ListCF\", */ },\n\t0x08c6: { /* n:\"FMQry\", */ },\n\t0x08c7: { /* n:\"FMSQry\", */ },\n\t0x08c8: { /* n:\"PLV\", */ },\n\t0x08c9: { /* n:\"LnExt\", */ },\n\t0x08ca: { /* n:\"MkrExt\", */ },\n\t0x08cb: { /* n:\"CrtCoopt\", */ },\n\t0x08d6: { /* n:\"FRTArchId$\", */ r:12 },\n\n\t/* --- multiplan 4 records --- */\n\t0x0065: { /* n:\"\", */ }, // one per window\n\t0x0066: { /* n:\"\", */ }, // calc settings\n\t0x0069: { /* n:\"\", */ }, // print header\n\t0x006a: { /* n:\"\", */ }, // print footer\n\t0x006b: { /* n:\"\", */ }, // print settings\n\t0x006d: { /* n:\"\", */ }, // one per window\n\t0x0070: { /* n:\"\", */ }, // includes default col width\n\t0x0072: { /* n:\"\", */ }, // includes selected cell\n\n\t0x7262: {}\n};\n\nfunction write_biff_rec(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar t/*:number*/ = type;\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_biff_continue(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar len = length || (payload||[]).length || 0;\n\tif(len <= 8224) return write_biff_rec(ba, type, payload, len);\n\tvar t = type;\n\tif(isNaN(t)) return;\n\tvar parts = payload.parts || [], sidx = 0;\n\tvar i = 0, w = 0;\n\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, w);\n\tba.push(payload.slice(i, i + w));\n\ti += w;\n\twhile(i < len) {\n\t\to = ba.next(4);\n\t\to.write_shift(2, 0x3c); // TODO: figure out correct continue type\n\t\tw = 0;\n\t\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\t\to.write_shift(2, w);\n\t\tba.push(payload.slice(i, i+w)); i+= w;\n\t}\n}\n\nfunction write_BIFF2BERR(r/*:number*/, c/*:number*/, val, t/*:?string*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\twrite_Bes(val, t || 'b', out);\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r/*:number*/, c/*:number*/, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_comments_biff2(ba/*:BufArray*/, comments/*:Array<[Comment[], number, number]>*/) {\n\tcomments.forEach(function(data) {\n\t\tvar text = data[0].map(function(cc) { return cc.t; }).join(\"\");\n\t\t// TODO: should '\\n' be translated to '\\r' to correct for Excel 5.0 bug when exporting to BIFF2/3 ?\n\t\tif(text.length <= 2048) return write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text, data[1], data[2]));\n\t\twrite_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(0, 2048), data[1], data[2], text.length));\n\t\tfor(var i = 2048; i < text.length; i += 2048)\n\t\t\twrite_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(i, Math.min(i+2048, text.length)), -1, -1, Math.min(2048, text.length - i)));\n\t});\n}\n\n/* TODO: BIFF3/4 use different records -- see comments*/\nfunction write_ws_biff2_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, date1904/*:boolean*/) {\n\tvar ifmt = 0;\n\tif(cell.z != null) {\n\t\tifmt = opts._BIFF2FmtTable.indexOf(cell.z);\n\t\tif(ifmt == -1) { opts._BIFF2FmtTable.push(cell.z); ifmt = opts._BIFF2FmtTable.length - 1; }\n\t}\n\tvar ixfe = 0;\n\tif(cell.z != null) {\n\t\tfor(; ixfe < opts.cellXfs.length; ++ixfe) if(opts.cellXfs[ixfe].numFmtId == ifmt) break;\n\t\tif(ixfe == opts.cellXfs.length) opts.cellXfs.push({numFmtId: ifmt});\n\t}\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v, date1904), date1904) : cell.v;\n\t\t\tif(opts.biff == 2 && (v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\t// 0x027E (RK) in BIFF3/4\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v, ixfe, ifmt));\n\t\t\telse if(isNaN(v))\n\t\t\t\t// 0x0205 in BIFF3/4\n\t\t\t\twrite_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x24, \"e\")); // #NUM!\n\t\t\telse if(!isFinite(v))\n\t\t\t\t// 0x0205 in BIFF3/4\n\t\t\t\twrite_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x07, \"e\")); // #DIV/0!\n\t\t\telse\n\t\t\t\t// 0x0203 in BIFF3/4\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v, ixfe, ifmt));\n\t\t\treturn;\n\t\tcase 'b': case 'e':\n\t\t\t// 0x0205 in BIFF3/4\n\t\t\twrite_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\t// 0x0204 in BIFF3/4\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v == null ? \"\" : String(cell.v).slice(0,255)));\n\t\t\treturn;\n\t}\n\t// 0x0201 in BIFF3/4\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba/*:BufArray*/, ws/*:Worksheet*/, idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar dense = ws[\"!data\"] != null;\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), rr = \"\", cols/*:Array<string>*/ = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t}\n\tvar date1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\tvar row = [], comments = [];\n\t/* TODO: 0x0000 / 0x0200 dimensions? */\n\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tif(dense) row = ws[\"!data\"][R] || [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar cell = dense ? row[C] : ws[cols[C] + rr];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts, date1904);\n\t\t\tif(cell.c) comments.push([cell.c, R, C]);\n\t\t}\n\t}\n\n\t/* ... 0x12 0x19 0x13 (Password) */\n\twrite_comments_biff2(ba, comments);\n\t/* 0x3d (Window1) ... */\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, (o.biff == 4 ? 0x0409 : (o.biff == 3 ? 0x0209 : 0x0009)), write_BOF(wb, 0x10, o));\n\tif(((wb.Workbook||{}).WBProps||{}).date1904) write_biff_rec(ba, 0x0022, writebool(true));\n\to.cellXfs = [{numFmtId: 0}];\n\to._BIFF2FmtTable/*:Array<string>*/ = [\"General\"]; o._Fonts = [];\n\tvar body = buf_array();\n\twrite_ws_biff2(body, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\n\to._BIFF2FmtTable.forEach(function(f) {\n\t\tif(o.biff <= 3) write_biff_rec(ba, 0x001E, write_BIFF2Format(f));\n\t\telse write_biff_rec(ba, 0x041E, write_BIFF4Format(f));\n\t});\n\to.cellXfs.forEach(function(xf) {\n\t\tswitch(o.biff) {\n\t\t\tcase 2: write_biff_rec(ba, 0x0043, write_BIFF2XF(xf)); break;\n\t\t\tcase 3: write_biff_rec(ba, 0x0243, write_BIFF3XF(xf)); break;\n\t\t\tcase 4: write_biff_rec(ba, 0x0443, write_BIFF4XF(xf)); break;\n\t\t}\n\t});\n\tdelete o._BIFF2FmtTable; delete o.cellXfs; delete o._Fonts;\n\n\tba.push(body.end());\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nvar b8oid = 1, b8ocnts/*:Array<[number, number, number]>*/ = [];\nfunction write_MsoDrawingGroup() {\n\tvar buf = new_buf(82 + 8 * b8ocnts.length);\n\t/* [MS-ODRAW] 2.2.12 OfficeArtDggContainer */\n\tbuf.write_shift(2, 0x0F);\n\tbuf.write_shift(2, 0xF000);\n\tbuf.write_shift(4, 74 + 8 * b8ocnts.length);\n\t/* 2.2.48 OfficeArtFDGGBlock */\n\t{\n\t\tbuf.write_shift(2, 0);\n\t\tbuf.write_shift(2, 0xF006);\n\t\tbuf.write_shift(4, 16 + 8 * b8ocnts.length);\n\t\t/* 2.2.47 OfficeArtFDGG */\n\t\t{\n\t\t\tbuf.write_shift(4, b8oid);\n\t\t\tbuf.write_shift(4, b8ocnts.length+1);\n\t\t\tvar acc = 0; for(var i = 0; i < b8ocnts.length; ++i) acc += (b8ocnts[i] && b8ocnts[i][1] || 0); buf.write_shift(4, acc);\n\t\t\tbuf.write_shift(4, b8ocnts.length);\n\t\t}\n\t\t/* 2.2.46 OfficeArtIDCL + */\n\t\tb8ocnts.forEach(function(b8) {\n\t\t\tbuf.write_shift(4, b8[0]);\n\t\t\tbuf.write_shift(4, b8[2]);\n\t\t});\n\t}\n\t/* 2.2.9 OfficeArtFOPT */\n\t{\n\t\tbuf.write_shift(2, 0x33); // 0x03 | (3 << 4)\n\t\tbuf.write_shift(2, 0xF00B);\n\t\tbuf.write_shift(4, 0x12); // 3 * 6\n\t\t/* 2.3.21.15 Text Boolean Properties */\n\t\tbuf.write_shift(2, 0xBF); buf.write_shift(4, 0x00080008);\n\t\t/* 2.3.7.2 fillColor */\n\t\tbuf.write_shift(2, 0x0181); buf.write_shift(4, 0x08000041);\n\t\t/* 2.3.8.1 lineColor */\n\t\tbuf.write_shift(2, 0x01C0); buf.write_shift(4, 0x08000040);\n\t}\n\t/* 2.2.45 OfficeArtSplitMenuColorContainer */\n\t{\n\t\tbuf.write_shift(2, 0x40);\n\t\tbuf.write_shift(2, 0xF11E);\n\t\tbuf.write_shift(4, 16);\n\t\tbuf.write_shift(4, 0x0800000D);\n\t\tbuf.write_shift(4, 0x0800000C);\n\t\tbuf.write_shift(4, 0x08000017);\n\t\tbuf.write_shift(4, 0x100000F7);\n\t}\n\treturn buf;\n}\nfunction write_comments_biff8(ba/*:BufArray*/, comments/*:Array<[Comment[], number, number]>*/) {\n\tvar notes/*:Array<RawData>*/ = [], sz = 0, pl = buf_array(), baseid = b8oid;\n\tvar _oasc;\n\tcomments.forEach(function(c, ci) {\n\t\tvar author = \"\";\n\t\tvar text = c[0].map(function(t) { if(t.a && !author) author = t.a; return t.t; }).join(\"\");\n\t\t++b8oid;\n\n\t\t/* 2.2.14 OfficeArtSpContainer */\n\t\t{\n\t\t\tvar oasc = new_buf(0x96);\n\t\t\toasc.write_shift(2, 0x0F);\n\t\t\toasc.write_shift(2, 0xF004);\n\t\t\toasc.write_shift(4, 0x96);\n\t\t\t/* 2.2.40 OfficeArtFSP */\n\t\t\t{\n\t\t\t\toasc.write_shift(2, 0xca2); // 0x02 | (0xca << 4)\n\t\t\t\toasc.write_shift(2, 0xF00A);\n\t\t\t\toasc.write_shift(4, 8);\n\t\t\t\toasc.write_shift(4, b8oid);\n\t\t\t\toasc.write_shift(4, 0xA00);\n\t\t\t}\n\t\t\t/* 2.2.9 OfficeArtFOPT */\n\t\t\t{\n\t\t\t\toasc.write_shift(2, 0xE3); // 0x03 | (14 << 4)\n\t\t\t\toasc.write_shift(2, 0xF00B);\n\t\t\t\toasc.write_shift(4, 0x54); // 14 * 6\n\t\t\t\t/* 2.3.21.1 ITxid */\n\t\t\t\toasc.write_shift(2, 0x80); oasc.write_shift(4, 0);\n\t\t\t\t/* 2.3.21.12 txdir */\n\t\t\t\toasc.write_shift(2, 0x8B); oasc.write_shift(4, 0x02);\n\t\t\t\t/* 2.3.21.15 Text Boolean Properties */\n\t\t\t\toasc.write_shift(2, 0xBF); oasc.write_shift(4, 0x00080008);\n\t\t\t\t/* 2.3.6.30 cxk */\n\t\t\t\toasc.write_shift(2, 0x0158); oasc.l += 4;\n\t\t\t\t/* 2.3.7.2 fillColor */\n\t\t\t\toasc.write_shift(2, 0x0181); oasc.write_shift(4, 0x08000050);\n\t\t\t\t/* 2.3.7.4 fillBackColor */\n\t\t\t\toasc.write_shift(2, 0x0183); oasc.write_shift(4, 0x08000050);\n\t\t\t\t/* 2.3.7.6 fillCrMod */\n\t\t\t\toasc.write_shift(2, 0x0185); oasc.write_shift(4, 0x100000F4);\n\t\t\t\t/* 2.3.7.43 Fill Style Boolean Properties */\n\t\t\t\toasc.write_shift(2, 0x01BF); oasc.write_shift(4, 0x00100010);\n\t\t\t\t/* 2.3.8.1 lineColor */\n\t\t\t\toasc.write_shift(2, 0x01C0); oasc.write_shift(4, 0x08000051);\n\t\t\t\t/* 2.3.8.4 lineCrMod */\n\t\t\t\toasc.write_shift(2, 0x01C3); oasc.write_shift(4, 0x100000F4);\n\t\t\t\t/* 2.3.13.2 shadowColor */\n\t\t\t\toasc.write_shift(2, 0x0201); oasc.write_shift(4, 0x08000051);\n\t\t\t\t/* 2.3.13.4 shadowCrMod */\n\t\t\t\toasc.write_shift(2, 0x0203); oasc.write_shift(4, 0x100000F4);\n\t\t\t\t/* 2.3.13.23 Shadow Style Boolean Properties */\n\t\t\t\toasc.write_shift(2, 0x023F); oasc.write_shift(4, 0x00030001);\n\t\t\t\t/* 2.3.4.44 Group Shape Boolean Properties */\n\t\t\t\toasc.write_shift(2, 0x03BF); oasc.write_shift(4, 0x00020000 | (c[0].hidden ? 2 : 0));\n\t\t\t}\n\t\t\t/* [MS-XLS] 2.5.193 OfficeArtClientAnchorSheet */\n\t\t\t{\n\t\t\t\toasc.l += 2;\n\t\t\t\toasc.write_shift(2, 0xF010);\n\t\t\t\toasc.write_shift(4, 0x12);\n\t\t\t\toasc.write_shift(2, 0x3); // do not move or size with cells\n\t\t\t\toasc.write_shift(2, c[2] + 2); oasc.l += 2;\n\t\t\t\toasc.write_shift(2, c[1] + 1); oasc.l += 2;\n\t\t\t\toasc.write_shift(2, c[2] + 4); oasc.l += 2;\n\t\t\t\toasc.write_shift(2, c[1] + 5); oasc.l += 2;\n\t\t\t}\n\t\t\t/* [MS-XLS] 2.5.194 OfficeArtClientData */\n\t\t\t{\n\t\t\t\toasc.l += 2;\n\t\t\t\toasc.write_shift(2, 0xF011);\n\t\t\t\toasc.l += 4;\n\t\t\t}\n\t\t\toasc.l = 0x96;\n\t\t\tif(ci == 0) /* write_biff_rec(pl, 0x003C, oasc); */ _oasc = oasc;\n\t\t\telse write_biff_rec(pl, 0x00EC, oasc);\n\t\t}\n\t\tsz += 0x96;\n\n\t\t/* [MS-XLS] 2.4.181 Obj */\n\t\t{\n\t\t\tvar obj = new_buf(52); // 22 + 26 + 4\n\t\t\t/* [MS-XLS] 2.5.143 FtCmo */\n\t\t\tobj.write_shift(2, 0x15);\n\t\t\tobj.write_shift(2, 0x12);\n\t\t\tobj.write_shift(2, 0x19);\n\t\t\tobj.write_shift(2, b8oid);\n\t\t\tobj.write_shift(2, 0);\n\t\t\tobj.l = 22;\n\t\t\t/* [MS-XLS] 2.5.149 FtNts */\n\t\t\tobj.write_shift(2, 0x0D);\n\t\t\tobj.write_shift(2, 0x16);\n\t\t\tobj.write_shift(4, 0x62726272);\n\t\t\tobj.write_shift(4, 0x95374305);\n\t\t\tobj.write_shift(4, 0x80301328);\n\t\t\tobj.write_shift(4, 0x69696904 + b8oid*256);\n\t\t\tobj.write_shift(2,0);\n\t\t\tobj.write_shift(4,0);\n\t\t\t// reserved\n\t\t\tobj.l += 4;\n\t\t\twrite_biff_rec(pl, 0x005D, obj);\n\t\t}\n\n\t\t/* [MS-XLS] 2.5.195 OfficeArtClientTextbox */\n\t\t{\n\t\t\tvar oact = new_buf(8);\n\t\t\toact.l += 2;\n\t\t\toact.write_shift(2, 0xF00D);\n\t\t\toact.l += 4;\n\t\t\twrite_biff_rec(pl, 0x00EC, oact);\n\t\t}\n\t\tsz += 8;\n\n\t\t/* [MS-XLS] 2.4.329 TxO */\n\t\t{\n\t\t\tvar txo = new_buf(18);\n\t\t\ttxo.write_shift(2, 0x12);\n\t\t\ttxo.l += 8;\n\t\t\ttxo.write_shift(2, text.length);\n\t\t\ttxo.write_shift(2, 0x10);\n\t\t\ttxo.l += 4;\n\t\t\twrite_biff_rec(pl, 0x01b6, txo);\n\t\t\t/* text continue record TODO: switch to wide strings */\n\t\t\t{\n\t\t\t\tvar cont = new_buf(1 + text.length);\n\t\t\t\tcont.write_shift(1, 0);\n\t\t\t\tcont.write_shift(text.length, text, \"sbcs\");\n\t\t\t\twrite_biff_rec(pl, 0x003C, cont);\n\t\t\t}\n\t\t\t/* formatting continue records */\n\t\t\t{\n\t\t\t\tvar conf = new_buf(0x10);\n\t\t\t\tconf.l += 8;\n\t\t\t\tconf.write_shift(2, text.length);\n\t\t\t\tconf.l += 6;\n\t\t\t\twrite_biff_rec(pl, 0x003C, conf);\n\t\t\t}\n\t\t}\n\n\t\t/* 2.4.179 Note */\n\t\t{\n\t\t\tvar notesh = new_buf(12 + author.length);\n\t\t\tnotesh.write_shift(2, c[1]);\n\t\t\tnotesh.write_shift(2, c[2]);\n\t\t\tnotesh.write_shift(2, 0 | (c[0].hidden ? 0 : 2));\n\t\t\tnotesh.write_shift(2, b8oid);\n\t\t\tnotesh.write_shift(2, author.length);\n\t\t\tnotesh.write_shift(1, 0);\n\t\t\tnotesh.write_shift(author.length, author, \"sbcs\");\n\t\t\tnotesh.l ++;\n\t\t\tnotes.push(notesh);\n\t\t}\n\t});\n\t/* [MS-ODRAW] 2.2.13 OfficeArtDgContainer */\n\t{\n\t\tvar hdr = new_buf(80);\n\t\thdr.write_shift(2, 0x0F);\n\t\thdr.write_shift(2, 0xF002);\n\t\thdr.write_shift(4, sz + hdr.length - 8);\n\t\t/* [MS-ODRAW] 2.2.49 OfficeArtFDG */\n\t\t{\n\t\t\thdr.write_shift(2, 0x10);\n\t\t\thdr.write_shift(2, 0xF008);\n\t\t\thdr.write_shift(4, 0x08);\n\t\t\thdr.write_shift(4, comments.length + 1);\n\t\t\thdr.write_shift(4, b8oid);\n\t\t}\n\t\t/* [MS-ODRAW] 2.2.16 OfficeArtSpgrContainer */\n\t\t{\n\t\t\thdr.write_shift(2, 0x0f);\n\t\t\thdr.write_shift(2, 0xF003);\n\t\t\thdr.write_shift(4, sz + 0x30);\n\t\t\t/* [MS-ODRAW] 2.2.14 OfficeArtSpContainer */\n\t\t\t{\n\t\t\t\thdr.write_shift(2, 0x0f);\n\t\t\t\thdr.write_shift(2, 0xF004);\n\t\t\t\thdr.write_shift(4, 0x28);\n\t\t\t\t/* [MS-ODRAW] 2.2.38 OfficeArtFSPGR */\n\t\t\t\t{\n\t\t\t\t\thdr.write_shift(2, 0x01);\n\t\t\t\t\thdr.write_shift(2, 0xF009);\n\t\t\t\t\thdr.write_shift(4, 0x10);\n\t\t\t\t\thdr.l += 16;\n\t\t\t\t}\n\t\t\t\t/* [MS-ODRAW] 2.2.40 OfficeArtFSP */\n\t\t\t\t{\n\t\t\t\t\thdr.write_shift(2, 0x02);\n\t\t\t\t\thdr.write_shift(2, 0xF00A);\n\t\t\t\t\thdr.write_shift(4, 0x08);\n\t\t\t\t\thdr.write_shift(4, baseid);\n\t\t\t\t\thdr.write_shift(4, 0x05);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twrite_biff_rec(ba, 0x00EC, /* hdr */ _oasc ? bconcat([hdr, _oasc]) : hdr);\n\t}\n\tba.push(pl.end());\n\tnotes.forEach(function(n) { write_biff_rec(ba, 0x001C, n); });\n\tb8ocnts.push([baseid, comments.length + 1, b8oid]);\n\t++b8oid;\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, 0x0031 /* Font */, write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF/*:?SSFTable*/, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, 0x0868 /* Feat */, o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba/*:BufArray*/, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_cols_biff8(ba, cols) {\n\tif(!cols) return;\n\tvar cnt = 0;\n\tcols.forEach(function(col, idx) {\n\t\tif(++cnt <= 256 && col) {\n\t\t\twrite_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n\t\t}\n\t});\n}\n\nfunction write_ws_biff8_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, date1904/*:boolean*/) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v == null && !cell.bf) {\n\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t\treturn;\n\t}\n\tif(cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));\n\telse switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v, date1904), date1904) : cell.v;\n\t\t\tif(isNaN(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x24, os, opts, \"e\")); // #NUM!\n\t\t\telse if(!isFinite(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x07, os, opts, \"e\")); // #DIV/0!\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\telse write_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n\t\t\tbreak;\n\t\tcase 'b': case 'e':\n\t\t\twrite_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n\t\t\tbreak;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvar isst = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v), opts.revStrings);\n\t\t\t\twrite_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n\t\t\t} else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v == null ? \"\" : String(cell.v)).slice(0,255), os, opts));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t}\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheet/*:WBWSProp*/ = ((_WB.Sheets||[])[idx]||{}/*:any*/);\n\tvar dense = ws[\"!data\"] != null;\n\tvar b8 = opts.biff == 8;\n\tvar ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* [Uncalced] Index */\n\twrite_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n\twrite_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n\twrite_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n\twrite_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n\twrite_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n\twrite_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n\twrite_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n\twrite_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n\twrite_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n\twrite_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0,0]));\n\t/* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n\t/* Header (string) */\n\t/* Footer (string) */\n\twrite_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n\twrite_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n\t/* ... */\n\tif(b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n\t/* ... */\n\twrite_biff_rec(ba, 0x0200 /* Dimensions */, write_Dimensions(range, opts));\n\t/* ... */\n\n\tvar date1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\tif(b8) ws['!links'] = [];\n\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tvar comments = [];\n\tvar row = [];\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tif(dense) row = ws[\"!data\"][R] || [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? row[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts, date1904);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t\tif(cell.c) comments.push([cell.c, R, C]);\n\t\t}\n\t}\n\tvar cname/*:string*/ = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\tif(b8) write_comments_biff8(ba, comments); else write_comments_biff2(ba, comments);\n\t/* ... */\n\tif(b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views||[])[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n\t/* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* [DVAL] */\n\twrite_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t/* *WebPub *CellWatch [SheetExt] */\n\tif(b8) write_FEAT(ba, ws);\n\t/* *FEAT11 *RECORD12 */\n\twrite_biff_rec(ba, 0x000a /* EOF */);\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb/*:Workbook*/, bufs, opts/*:WriteOpts*/) {\n\tvar A = buf_array();\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheets/*:Array<WBWSProp>*/ = (_WB.Sheets||[]);\n\tvar _wb/*:WBProps*/ = /*::((*/_WB.WBProps||{/*::CodeName:\"ThisWorkbook\"*/}/*:: ):any)*/;\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n\twrite_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n\tif(b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n\tif(b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n\twrite_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n\twrite_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n\t/* [FileSharing] */\n\twrite_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n\t/* *2047 Lel */\n\tif(b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n\twrite_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n\t/* [ObNoMacros] */\n\tif(b8 && wb.vbaraw) {\n\t\tvar cname/*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n\t/* *FnGroupName *FnGrp12 */\n\t/* *Lbl */\n\t/* [OleObjectSize] */\n\twrite_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n\twrite_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n\twrite_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n\tif(b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n\twrite_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n\twrite_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n\twrite_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n\twrite_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n\tif(b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n\twrite_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\t/* METADATA [MTRSettings] [ForceFullCalculation] */\n\tif(b8) write_biff_rec(C, 0x008C /* Country */, write_Country());\n\t/* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture */\n\n\t/* BIFF8: MsoDrawingGroup [*Continue] */\n\tif(b8 && b8ocnts.length) write_biff_rec(C, 0x00EB /* MsoDrawingGroup */, write_MsoDrawingGroup());\n\t/* BIFF8: [SST *Continue] ExtSST */\n\tif(b8 && opts.Strings) write_biff_continue(C, 0x00FC /* SST */, write_SST(opts.Strings, opts));\n\n\t/* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n\twrite_biff_rec(C, 0x000A /* EOF */);\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet/*:WBWSProp*/ = _sheets[j] || ({}/*:any*/);\n\t\twrite_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\n\tb8oid = 1; b8ocnts = [];\n\to.Strings = /*::((*/[]/*:: :any):SST)*/; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tfix_write_opts(o);\n\n\to.cellXfs = [];\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn bconcat(bufs);\n}\n\nfunction write_biff_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tfor(var i = 0; i <= wb.SheetNames.length; ++i) {\n\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\tif(range.e.c > 255) { // note: 255 is IV\n\t\t\tif(typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n\t\t}\n\t}\n\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar dense = (opts.dense != null) ? opts.dense : DENSE;\n\tvar ws/*:Worksheet*/ = ({}/*:any*/); if(dense) ws[\"!data\"] = [];\n\tstr = str_remove_ng(str, \"<!--\", \"-->\");\n\tvar mtch/*:any*/ = str.match(/<table/i);\n\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\tvar mtch2/*:any*/ = str.match(/<\\/table/i);\n\tvar i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;\n\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^<>]*>)/i, \"<tr>\");\n\tvar R = -1, C = 0, RS = 0, CS = 0;\n\tvar range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\tvar merges/*:Array<Range>*/ = [];\n\tfor(i = 0; i < rows.length; ++i) {\n\t\tvar row = rows[i].trim();\n\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\tvar cell = cells[j].trim();\n\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\tvar m = cell, cc = 0;\n\t\t\t/* TODO: parse styles etc */\n\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\tfor(var midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar _merge/*:Range*/ = merges[midx];\n\t\t\t\tif(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }\n\t\t\t}\n\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\tvar _t/*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n\t\t\t/* TODO: generate stub cells */\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tm = htmldecode(m);\n\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tvar o/*:Cell*/ = {t:'s', v:m};\n\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\to = ({t:'d', v:parseDate(m)}/*:any*/);\n\t\t\t\tif(opts.UTC === false) o.v = utc_to_local(o.v);\n\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t}\n\t\t\tif(o.cellText !== false) o.w = m;\n\t\t\tif(dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = o; }\n\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\tC += CS;\n\t\t}\n\t}\n\tws['!ref'] = encode_range(range);\n\tif(merges.length) ws[\"!merges\"] = merges;\n\treturn ws;\n}\nfunction make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar M/*:Array<Range>*/ = (ws['!merges'] ||[]);\n\tvar oo/*:Array<string>*/ = [];\n\tvar sp = ({}/*:any*/);\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar RS = 0, CS = 0;\n\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t}\n\t\tif(RS < 0) continue;\n\t\tvar coord = encode_col(C) + encode_row(R);\n\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t/* TODO: html entities */\n\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\tsp = ({}/*:any*/);\n\t\tif(RS > 1) sp.rowspan = RS;\n\t\tif(CS > 1) sp.colspan = CS;\n\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\telse if(cell) {\n\t\t\tsp[\"data-t\"] = cell && cell.t || 'z';\n\t\t\t// note: data-v is unaffected by the timezone interpretation\n\t\t\tif(cell.v != null) sp[\"data-v\"] = escapehtml(cell.v instanceof Date ? cell.v.toISOString() : cell.v);\n\t\t\tif(cell.z != null) sp[\"data-z\"] = cell.z;\n\t\t\tif(cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + escapehtml(cell.l.Target) +'\">' + w + '</a>';\n\t\t}\n\t\tsp.id = (o.id || \"sjs\") + \"-\" + coord;\n\t\too.push(writextag('td', w, sp));\n\t}\n\tvar preamble = \"<tr>\";\n\treturn preamble + oo.join(\"\") + \"</tr>\";\n}\n\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\n\nfunction html_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\tvar mtch = str_match_xml_ig(str, \"table\");\n\tif(!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n\tif(mtch.length == 1) {\n\t\tvar w = sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n\t\tw.bookType = \"html\";\n\t\treturn w;\n\t}\n\tvar wb = book_new();\n\tmtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx+1)); });\n\twb.bookType = \"html\";\n\treturn wb;\n}\n\nfunction make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\n\nfunction sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tvar out/*:Array<string>*/ = [header];\n\tvar r = decode_range(ws['!ref'] || \"A1\");\n\tout.push(make_html_preamble(ws, r, o));\n\tif(ws[\"!ref\"]) for(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\tout.push(\"</table>\" + footer);\n\treturn out.join(\"\");\n}\n\nfunction sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.rows;\n\tif(!rows) {\n\t\t/* not an HTML TABLE */\n\t\tthrow \"Unsupported origin when \" + table.tagName + \" is not a TABLE\";\n\t}\n\n\tvar opts = _opts || {};\n\tvar dense = ws[\"!data\"] != null;\n\tvar or_R = 0, or_C = 0;\n\tif(opts.origin != null) {\n\t\tif(typeof opts.origin == 'number') or_R = opts.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n\t\t\tor_R = _origin.r; or_C = _origin.c;\n\t\t}\n\t}\n\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\n\tvar range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};\n\tif(ws[\"!ref\"]) {\n\t\tvar _range/*:Range*/ = decode_range(ws[\"!ref\"]);\n\t\trange.s.r = Math.min(range.s.r, _range.s.r);\n\t\trange.s.c = Math.min(range.s.c, _range.s.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\tif(or_R == -1) range.e.r = or_R = _range.e.r + 1;\n\t}\n\tvar merges/*:Array<Range>*/ = [], midx = 0;\n\tvar rowinfo/*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n\tvar _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;\n\tif(!ws[\"!cols\"]) ws['!cols'] = [];\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row/*:HTMLTableRowElement*/ = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.cells);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt/*:HTMLTableCellElement*/ = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n\t\t\tvar z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m/*:Range*/ = merges[midx];\n\t\t\t\tif(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif( ((RS = (+elt.getAttribute(\"rowspan\") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});\n\t\t\tvar o/*:Cell*/ = {t:'s', v:v};\n\t\t\tvar _t/*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)}/*:any*/);\n\t\t\t\t\tif(opts.UTC) o.v = local_to_utc(o.v);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(o.z === undefined && z != null) o.z = z;\n\t\t\t/* The first link is used.  Links are assumed to be fully specified.\n\t\t\t * TODO: The right way to process relative links is to make a new <a> */\n\t\t\tvar l = \"\", Aelts = elt.getElementsByTagName(\"A\");\n\t\t\tif(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)\tif(Aelts[Aelti].hasAttribute(\"href\")) {\n\t\t\t\tl = Aelts[Aelti].getAttribute(\"href\"); if(l.charAt(0) != \"#\") break;\n\t\t\t}\n\t\t\tif(l && l.charAt(0) != \"#\" &&\tl.slice(0, 11).toLowerCase() != 'javascript:') o.l = ({ Target: l });\n\t\t\tif(dense) { if(!ws[\"!data\"][R + or_R]) ws[\"!data\"][R + or_R] = []; ws[\"!data\"][R + or_R][C + or_C] = o; }\n\t\t\telse ws[encode_cell({c:C + or_C, r:R + or_R})] = o;\n\t\t\tif(range.e.c < C + or_C) range.e.c = C + or_C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n\trange.e.r = Math.max(range.e.r, R - 1 + or_R);\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tvar ws/*:Worksheet*/ = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = [];\n\treturn sheet_add_dom(ws, table, _opts);\n}\n\nfunction table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {\n\tvar o = sheet_to_workbook(parse_dom_table(table, opts), opts);\n\t//o.bookType = \"dom\"; // TODO: define a type for this\n\treturn o;\n}\n\nfunction is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {\n\tvar display/*:string*/ = '';\n\tvar get_computed_style/*:?function*/ = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style && element.style.display;\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nfunction parse_text_p(text/*:string*//*::, tag*/)/*:Array<any>*/ {\n\t/* 6.1.2 White Space Characters */\n\tvar fixed = text\n\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t.replace(/<text:tab[^<>]*\\/>/g,\"\\t\")\n\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\tvar v = unescapexml(fixed.replace(/<[^<>]*>/g,\"\"));\n\n\treturn [v];\n}\n\n/* Note: ODS can stick styles in content.xml or styles.xml, FODS blurs lines */\nfunction parse_ods_styles(d/*:string*/, _opts, _nfm) {\n\tvar number_format_map = _nfm || {};\n\tvar str = xlml_normalize(d);\n\txlmlregex.lastIndex = 0;\n\tstr = remove_doctype(str_remove_ng(str, \"<!--\", \"-->\"));\n\tvar Rn, NFtag, NF = \"\", tNF = \"\", y, etpos = 0, tidx = -1, infmt = false, payload = \"\";\n\twhile((Rn = xlmlregex.exec(str))) {\n\t\tswitch((Rn[3]=Rn[3].replace(/_[\\s\\S]*$/,\"\"))) {\n\t\t/* Number Format Definitions */\n\t\tcase 'number-style': // <number:number-style> 16.29.2\n\t\tcase 'currency-style': // <number:currency-style> 16.29.8\n\t\tcase 'percentage-style': // <number:percentage-style> 16.29.10\n\t\tcase 'date-style': // <number:date-style> 16.29.11\n\t\tcase 'time-style': // <number:time-style> 16.29.19\n\t\tcase 'text-style': // <number:text-style> 16.29.26\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tinfmt = false;\n\t\t\t\tif(NFtag['truncate-on-overflow'] == \"false\") {\n\t\t\t\t\tif(NF.match(/h/)) NF = NF.replace(/h+/, \"[$&]\");\n\t\t\t\t\telse if(NF.match(/m/)) NF = NF.replace(/m+/, \"[$&]\");\n\t\t\t\t\telse if(NF.match(/s/)) NF = NF.replace(/s+/, \"[$&]\");\n\t\t\t\t}\n\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\tNF = \"\";\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tinfmt = true;\n\t\t\t\tNF = \"\";\n\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t} break;\n\n\t\t// LibreOffice bug https://bugs.documentfoundation.org/show_bug.cgi?id=149484\n\t\tcase 'boolean-style': // <number:boolean-style> 16.29.24\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tinfmt = false;\n\t\t\t\tnumber_format_map[NFtag.name] = \"General\";\n\t\t\t\tNF = \"\";\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tinfmt = true;\n\t\t\t\tNF = \"\";\n\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t} break;\n\n\t\t/* Number Format Elements */\n\t\tcase 'boolean': // <number:boolean> 16.29.25\n\t\t\tNF += \"General\"; // ODF spec is unfortunately underspecified here\n\t\t\tbreak;\n\n\t\tcase 'text': // <number:text> 16.29.27\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tpayload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n\t\t\t\t// NOTE: Excel has a different interpretation of \"%%\" and friends\n\t\t\t\tif(payload == \"%\" && NFtag[0] == '<number:percentage-style') NF += \"%\";\n\t\t\t\telse NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} break;\n\n\n\t\tcase 'day': { // <number:day> 16.29.12\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"d\"; break;\n\t\t\t\tcase \"long\": NF += \"dd\"; break;\n\t\t\t\tdefault: NF += \"dd\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'day-of-week': { // <number:day-of-week> 16.29.16\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"ddd\"; break;\n\t\t\t\tcase \"long\": NF += \"dddd\"; break;\n\t\t\t\tdefault: NF += \"ddd\"; break;\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'era': { // <number:era> 16.29.15 TODO: proper mapping\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"ee\"; break;\n\t\t\t\tcase \"long\": NF += \"eeee\"; break;\n\t\t\t\tdefault: NF += \"eeee\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'hours': { // <number:hours> 16.29.20\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"h\"; break;\n\t\t\t\tcase \"long\": NF += \"hh\"; break;\n\t\t\t\tdefault: NF += \"hh\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'minutes': { // <number:minutes> 16.29.21\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"m\"; break;\n\t\t\t\tcase \"long\": NF += \"mm\"; break;\n\t\t\t\tdefault: NF += \"mm\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'month': { // <number:month> 16.29.13\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(y[\"textual\"]) NF += \"mm\";\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"m\"; break;\n\t\t\t\tcase \"long\": NF += \"mm\"; break;\n\t\t\t\tdefault: NF += \"m\"; break;\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'seconds': { // <number:seconds> 16.29.22\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"s\"; break;\n\t\t\t\tcase \"long\": NF += \"ss\"; break;\n\t\t\t\tdefault: NF += \"ss\"; break; // TODO: error condition\n\t\t\t}\n\t\t\tif(y[\"decimal-places\"]) NF += \".\" + fill(\"0\", +y[\"decimal-places\"]);\n\t\t} break;\n\n\t\tcase 'year': { // <number:year> 16.29.14\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"yy\"; break;\n\t\t\t\tcase \"long\": NF += \"yyyy\"; break;\n\t\t\t\tdefault: NF += \"yy\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'am-pm': // <number:am-pm> 16.29.23\n\t\t\tNF += \"AM/PM\"; // LO autocorrects A/P -> AM/PM\n\t\t\tbreak;\n\n\t\tcase 'week-of-year': // <number:week-of-year> 16.29.17\n\t\tcase 'quarter': // <number:quarter> 16.29.18\n\t\t\tconsole.error(\"Excel does not support ODS format token \" + Rn[3]);\n\t\t\tbreak;\n\n\t\tcase 'fill-character': // <number:fill-character> 16.29.5\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tpayload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n\t\t\t\t// NOTE: Excel has a different interpretation of \"%%\" and friends\n\t\t\t\tNF += '\"' + payload.replace(/\"/g, '\"\"') + '\"*';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} break;\n\n\t\tcase 'scientific-number': // <number:scientific-number> 16.29.6\n\t\t\t// TODO: find a mapping for all parameters\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tNF += \"0.\" + fill(\"0\", +y[\"min-decimal-places\"] || +y[\"decimal-places\"] || 2) + fill(\"?\", +y[\"decimal-places\"] - +y[\"min-decimal-places\"] || 0) + \"E\" + (parsexmlbool(y[\"forced-exponent-sign\"]) ? \"+\" : \"\") + fill(\"0\", +y[\"min-exponent-digits\"] || 2);\n\t\t\tbreak;\n\n\t\tcase 'fraction': // <number:fraction> 16.29.7\n\t\t\t// TODO: find a mapping for all parameters\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(!+y[\"min-integer-digits\"]) NF += \"#\";\n\t\t\telse NF += fill(\"0\", +y[\"min-integer-digits\"]);\n\t\t\tNF += \" \";\n\t\t\tNF += fill(\"?\", +y[\"min-numerator-digits\"] || 1);\n\t\t\tNF += \"/\";\n\t\t\tif(+y[\"denominator-value\"]) NF += y[\"denominator-value\"];\n\t\t\telse NF += fill(\"?\", +y[\"min-denominator-digits\"] || 1);\n\t\t\tbreak;\n\n\t\tcase 'currency-symbol': // <number:currency-symbol> 16.29.9\n\t\t\t// TODO: localization with [$-...]\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tNF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} else NF += \"$\";\n\t\t\tbreak;\n\n\t\tcase 'text-properties': // <style:text-properties> 16.29.29\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch((y[\"color\"]||\"\").toLowerCase().replace(\"#\", \"\")) {\n\t\t\t\tcase \"ff0000\": case \"red\": NF = \"[Red]\" + NF; break;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'text-content': // <number:text-content> 16.29.28\n\t\t\tNF += \"@\";\n\t\t\tbreak;\n\n\t\tcase 'map': // <style:map> 16.3\n\t\t\t// TODO: handle more complex maps\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(unescapexml(y[\"condition\"]) == \"value()>=0\") NF = number_format_map[y[\"apply-style-name\"]] + \";\" + NF;\n\t\t\telse console.error(\"ODS number format may be incorrect: \" + y[\"condition\"]);\n\t\t\tbreak;\n\n\t\tcase 'number': // <number:number> 16.29.3\n\t\t\t// TODO: handle all the attributes\n\t\t\tif(Rn[1]==='/') break;\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\ttNF = \"\";\n\t\t\ttNF += fill(\"0\", +y[\"min-integer-digits\"] || 1);\n\t\t\tif(parsexmlbool(y[\"grouping\"])) tNF = commaify(fill(\"#\", Math.max(0, 4 - tNF.length)) + tNF);\n\t\t\tif(+y[\"min-decimal-places\"] || +y[\"decimal-places\"]) tNF += \".\";\n\t\t\tif(+y[\"min-decimal-places\"]) tNF += fill(\"0\", +y[\"min-decimal-places\"] || 1);\n\t\t\tif(+y[\"decimal-places\"] - (+y[\"min-decimal-places\"]||0)) tNF += fill(\"0\", +y[\"decimal-places\"] - (+y[\"min-decimal-places\"]||0)); // TODO: should this be \"#\" ?\n\t\t\tNF += tNF;\n\t\t\tbreak;\n\n\t\tcase 'embedded-text': // <number:embedded-text> 16.29.4\n\t\t\t// TODO: verify interplay with grouping et al\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tif(etpos == 0) NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n\t\t\t\telse NF = NF.slice(0, etpos) + '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"' + NF.slice(etpos);\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t\tetpos = -+parsexmltag(Rn[0], false)[\"position\"] || 0;\n\t\t\t} break;\n\n\t}}\n\treturn number_format_map;\n}\n\nfunction parse_content_xml(d/*:string*/, _opts, _nfm)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state/*:Array<any>*/ = [], tmp;\n\t\tvar tag/*:: = {}*/;\n\t\tvar nfidx, NF = \"\", pidx = 0;\n\t\tvar sheetag/*:: = {name:\"\", '名称':\"\"}*/;\n\t\tvar rowtag/*:: = {'行号':\"\"}*/;\n\t\tvar Sheets = {}, SheetNames/*:Array<string>*/ = [];\n\t\tvar ws = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = [];\n\t\tvar Rn, q/*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n\t\tvar ctag = ({value:\"\"}/*:any*/);\n\t\tvar textp = \"\", textpidx = 0, textptag/*:: = {}*/, oldtextp = \"\", oldtextpidx = 0;\n\t\tvar textR = [], oldtextR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = _nfm || {}, styles = {};\n\t\tvar merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\t\tvar WB = {Names:[], WBProps:{}};\n\t\tvar atag = ({}/*:any*/);\n\t\tvar _Ref/*:[string, string]*/ = [\"\", \"\"];\n\t\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = remove_doctype(str_remove_ng(str, \"<!--\", \"-->\"));\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_[\\s\\S]*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\telse ws['!ref'] = \"A1:A1\";\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = []; merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif(ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n\t\t\t\t\t\t\tws[\"!data\"][R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_col(C) + encode_row(R)] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\ttextp = oldtextp = \"\"; textpidx = oldtextpidx = 0; textR = []; oldtextR = [];\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({}/*:any*/);\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type TODO: verify ODS and UOS */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']) || (+ctag['boolean-value'] >= 1); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value);\n\t\t\t\t\t\t\tif(opts.cellDates && q.z && fmt_is_date(q.z)) { q.v = numdate(q.v + (WB.WBProps.date1904 ? 1462 : 0)); q.t = typeof q.v == \"number\" ? 'n' : 'd'; }\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value'], WB.WBProps.date1904);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v, WB.WBProps.date1904); }\n\t\t\t\t\t\t\tif(!q.z) q.z = 'm/d/yy'; break;\n\t\t\t\t\t\t/* NOTE: for `time`, Excel ODS export incorrectly uses durations relative to 1900 epoch even if 1904 is specified */\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;\n\t\t\t\t\t\t\tif(opts.cellDates) { q.v = numdate(q.v); q.t = typeof q.v == \"number\" ? 'n' : 'd'; }\n\t\t\t\t\t\t\tif(!q.z) q.z = 'HH:MM:SS'; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(isstub) { q.t = \"z\"; delete q.v; }\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[\"!data\"][R + rpt]) ws[\"!data\"][R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[\"!data\"][R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[\"!data\"][R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({}/*:any*/);\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\tcase 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) /*::(*/comment/*:: :any)*/.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t\ttextp = oldtextp; textpidx = oldtextpidx; textR = oldtextR;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\t\tvar annotag = parsexmltag(Rn[0], true);\n\t\t\t\t\t/* office:display TODO: check if there is a global override */\n\t\t\t\t\tif(!(annotag[\"display\"] && parsexmlbool(annotag[\"display\"]))) comments.hidden = true;\n\t\t\t\t\toldtextp = textp; oldtextpidx = textpidx; oldtextR = textR;\n\t\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\t}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // <number:scientific-number>\n\t\t\tcase 'currency-symbol': // <number:currency-symbol>\n\t\t\tcase 'fill-character': // 16.29.5 <number:fill-character>\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-style': // 16.27.25 <number:text-style>\n\t\t\tcase 'boolean-style': // 16.27.23 <number:boolean-style>\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'currency-style': // 16.29.8 <number:currency-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tvar xlmlidx = xlmlregex.lastIndex;\n\t\t\t\t\tparse_ods_styles(str.slice(nfidx, xlmlregex.lastIndex), _opts, number_format_map);\n\t\t\t\t\txlmlregex.lastIndex = xlmlidx;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tnfidx = xlmlregex.lastIndex - Rn[0].length;\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': { // 16.2 <style:style>\n\t\t\t\tvar styletag = parsexmltag(Rn[0], false);\n\t\t\t\tif(styletag[\"family\"] == \"table-cell\" && number_format_map[styletag[\"data-style-name\"]]) styles[styletag[\"name\"]] = number_format_map[styletag[\"data-style-name\"]];\n\t\t\t} break;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tbreak;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tbreak;\n\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': // 9.4.2 <table:null-date>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\tswitch(tag[\"date-value\"]) {\n\t\t\t\t\tcase \"1904-01-01\": WB.WBProps.date1904 = true; break;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else if(Rn[0].slice(-2) == \"/>\") {\n\t\t\t\t\t/* TODO: is self-closing 文本串 valid? */\n\t\t\t\t\ttextp += \"\\n\";\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\n\t\t\t/* 9.5 Filters */\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\t\t\tcase 'filter-set-item': break; // 9.5.6 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = unescapexml(atag.href); delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t} else if(atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out/*:Workbook*/ = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t}/*:any*/);\n\t\tif(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;\n\t\treturn out;\n}\n\nfunction parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\topts = opts || ({}/*:any*/);\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar styles = getzipstr(zip, 'styles.xml');\n\tvar Styles = styles && parse_ods_styles(utf8read(styles), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n\tvar wb = parse_content_xml(utf8read(content), opts, Styles);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\twb.bookType = \"ods\";\n\treturn wb;\n}\nfunction parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar wb = parse_content_xml(data, opts);\n\twb.bookType = \"fods\";\n\treturn wb;\n}\n\n/* OpenDocument */\nvar write_styles_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\tvar master_styles = [\n\t\t'<office:master-styles>',\n\t\t\t'<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">',\n\t\t\t\t'<style:header/>',\n\t\t\t\t'<style:header-left style:display=\"false\"/>',\n\t\t\t\t'<style:footer/>',\n\t\t\t\t'<style:footer-left style:display=\"false\"/>',\n\t\t\t'</style:master-page>',\n\t\t'</office:master-styles>'\n\t].join(\"\");\n\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '>' + master_styles + '</office:document-styles>';\n\n\treturn function wso(/*::wb, opts*/) {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\n\n// TODO: find out if anyone actually read the spec.  LO has some wild errors\nfunction write_number_format_ods(nf/*:string*/, nfidx/*:string*/)/*:string*/ {\n\tvar type = \"number\", payload = \"\", nopts = { \"style:name\": nfidx }, c = \"\", i = 0;\n\tnf = nf.replace(/\"[$]\"/g, \"$\");\n\t/* TODO: replace with an actual parser based on a real grammar */\n\tj: {\n\t\t// TODO: support style maps\n\t\tif(nf.indexOf(\";\") > -1) {\n\t\t\tconsole.error(\"Unsupported ODS Style Map exported.  Using first branch of \" + nf);\n\t\t\tnf = nf.slice(0, nf.indexOf(\";\"));\n\t\t}\n\n\t\tif(nf == \"@\") { type = \"text\"; payload = \"<number:text-content/>\"; break j; }\n\n\t\t/* currency flag */\n\t\tif(nf.indexOf(/\\$/) > -1) { type = \"currency\"; }\n\n\t\t/* opening string literal */\n\t\tif(nf[i] == '\"') {\n\t\t\tc = \"\";\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tif(nf[i+1] == \"*\") {\n\t\t\t\ti++;\n\t\t\t\tpayload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n\t\t\t} else {\n\t\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t}\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\n\t\t/* fractions */\n\t\tvar t = nf.match(/# (\\?+)\\/(\\?+)/);\n\t\tif(t) { payload += writextag(\"number:fraction\", null, {\"number:min-integer-digits\":0, \"number:min-numerator-digits\": t[1].length, \"number:max-denominator-value\": Math.max(+(t[1].replace(/./g, \"9\")), +(t[2].replace(/./g, \"9\"))) }); break j; }\n\t\tif((t=nf.match(/# (\\?+)\\/(\\d+)/))) { payload += writextag(\"number:fraction\", null, {\"number:min-integer-digits\":0, \"number:min-numerator-digits\": t[1].length, \"number:denominator-value\": +t[2]}); break j; }\n\n\t\t/* percentages */\n\t\tif((t=nf.match(/\\b(\\d+)(|\\.\\d+)%/))) { type = \"percentage\"; payload += writextag(\"number:number\", null, {\"number:decimal-places\": t[2] && t.length - 1 || 0, \"number:min-decimal-places\": t[2] && t.length - 1 || 0, \"number:min-integer-digits\": t[1].length }) + \"<number:text>%</number:text>\"; break j; }\n\n\t\t/* datetime */\n\t\tvar has_time = false;\n\t\tif([\"y\",\"m\",\"d\"].indexOf(nf[0]) > -1) {\n\t\t\ttype = \"date\";\n\t\t\tk: for(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {\n\t\t\t\tcase \"h\": case \"s\": has_time = true; --i; break k;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tl: for(var h = i+1; h < nf.length; ++h) switch(nf[h]) {\n\t\t\t\t\t\tcase \"y\": case \"d\": break l;\n\t\t\t\t\t\tcase \"h\": case \"s\": has_time = true; --i; break k;\n\t\t\t\t\t}\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase \"y\": case \"d\":\n\t\t\t\t\twhile((nf[++i]||\"\").toLowerCase() == c[0]) c += c[0]; --i;\n\t\t\t\t\tswitch(c) {\n\t\t\t\t\t\tcase \"y\": case \"yy\": payload += \"<number:year/>\"; break;\n\t\t\t\t\t\tcase \"yyy\": case \"yyyy\": payload += '<number:year number:style=\"long\"/>'; break;\n\t\t\t\t\t\tcase \"mmmmm\": console.error(\"ODS has no equivalent of format |mmmmm|\");\n\t\t\t\t\t\t\t/* falls through */\n\t\t\t\t\t\tcase \"m\": case \"mm\": case \"mmm\": case \"mmmm\":\n\t\t\t\t\t\t\tpayload += '<number:month number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\" number:textual=\"' + (c.length >= 3 ? \"true\" : \"false\") + '\"/>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"d\": case \"dd\": payload += '<number:day number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"ddd\": case \"dddd\": payload += '<number:day-of-week number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\t\t\tpayload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\\\\': c = nf[++i];\n\t\t\t\t\tpayload += '<number:text>' + escapexml(c) + '</number:text>'; break;\n\t\t\t\tcase '/': case ':': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;\n\t\t\t\tdefault: console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n\t\t\t}\n\t\t\tif(!has_time) break j;\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\t\tif(nf.match(/^\\[?[hms]/)) {\n\t\t\tif(type == \"number\") type = \"time\";\n\t\t\tif(nf.match(/\\[/)) {\n\t\t\t\tnf = nf.replace(/[\\[\\]]/g, \"\");\n\t\t\t\tnopts['number:truncate-on-overflow'] = \"false\";\n\t\t\t}\n\t\t\tfor(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {\n\t\t\t\tcase \"h\": case \"m\": case \"s\":\n\t\t\t\t\twhile((nf[++i]||\"\").toLowerCase() == c[0]) c += c[0]; --i;\n\t\t\t\t\tswitch(c) {\n\t\t\t\t\t\tcase \"h\": case \"hh\": payload += '<number:hours number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"m\": case \"mm\": payload += '<number:minutes number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"s\": case \"ss\":\n\t\t\t\t\t\t\tif(nf[i+1] == \".\") do { c += nf[i+1]; ++i; } while(nf[i+1] == \"0\");\n\t\t\t\t\t\t\tpayload += '<number:seconds number:style=\"' + (c.match(\"ss\") ? \"long\" : \"short\") + '\"' + (c.match(/\\./) ? ' number:decimal-places=\"' + (c.match(/0+/)||[\"\"])[0].length + '\"' : \"\")+ '/>'; break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\t\t\tpayload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '/': case ':': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;\n\t\t\t\tcase \"a\":\n\t\t\t\t\tif(nf.slice(i, i+3).toLowerCase() == \"a/p\") { payload += '<number:am-pm/>'; i += 2; break; } // Note: ODF does not support A/P\n\t\t\t\t\tif(nf.slice(i, i+5).toLowerCase() == \"am/pm\")  { payload += '<number:am-pm/>'; i += 4; break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n\t\t\t}\n\t\t\tbreak j;\n\t\t}\n\n\t\t/* currency flag */\n\t\tif(nf.indexOf(/\\$/) > -1) { type = \"currency\"; }\n\n\t\t/* should be in a char loop */\n\t\tif(nf[0] == \"$\") { payload += '<number:currency-symbol number:language=\"en\" number:country=\"US\">$</number:currency-symbol>'; nf = nf.slice(1); i = 0; }\n\t\ti = 0; if(nf[i] == '\"') {\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tif(nf[i+1] == \"*\") {\n\t\t\t\ti++;\n\t\t\t\tpayload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n\t\t\t} else {\n\t\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t}\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\n\t\t/* number TODO: interstitial text e.g. 000)000-0000 */\n\t\tvar np = nf.match(/([#0][0#,]*)(\\.[0#]*|)(E[+]?0*|)/i);\n\t\tif(!np || !np[0]) console.error(\"Could not find numeric part of \" + nf);\n\t\telse {\n\t\t\tvar base = np[1].replace(/,/g, \"\");\n\t\t\tpayload += '<number:' + (np[3] ? \"scientific-\" : \"\")+ 'number' +\n\t\t\t\t' number:min-integer-digits=\"' + (base.indexOf(\"0\") == -1 ? \"0\" : base.length - base.indexOf(\"0\")) + '\"' +\n\t\t\t\t(np[0].indexOf(\",\") > -1 ? ' number:grouping=\"true\"' : \"\") +\n\t\t\t\t(np[2] && ' number:decimal-places=\"' + (np[2].length - 1) + '\"' || ' number:decimal-places=\"0\"') +\n\t\t\t\t(np[3] && np[3].indexOf(\"+\") > -1 ? ' number:forced-exponent-sign=\"true\"' : \"\" ) +\n\t\t\t\t(np[3] ? ' number:min-exponent-digits=\"' + np[3].match(/0+/)[0].length + '\"' : \"\" ) +\n\t\t\t\t'>' +\n\t\t\t\t/* TODO: interstitial text placeholders */\n\t\t\t\t'</number:' + (np[3] ? \"scientific-\" : \"\") + 'number>';\n\t\t\ti = np.index + np[0].length;\n\t\t}\n\n\t\t/* residual text */\n\t\tif(nf[i] == '\"') {\n\t\t\tc = \"\";\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t}\n\t}\n\n\tif(!payload) { console.error(\"Could not generate ODS number format for |\" + nf + \"|\"); return \"\"; }\n\treturn writextag(\"number:\" + type + \"-style\", payload, nopts);\n}\n\nfunction write_names_ods(Names, SheetNames, idx) {\n\t//var scoped = Names.filter(function(name) { return name.Sheet == (idx == -1 ? null : idx); });\n\tvar scoped = []; for(var namei = 0; namei < Names.length; ++namei) {\n\t\tvar name = Names[namei];\n\t\tif(!name) continue;\n\t\tif(name.Sheet == (idx == -1 ? null : idx)) scoped.push(name);\n\t}\n\tif(!scoped.length) return \"\";\n\treturn \"      <table:named-expressions>\\n\" + scoped.map(function(name) {\n\t\tvar odsref =  (idx == -1 ? \"$\" : \"\") + csf_to_ods_3D(name.Ref);\n\t\treturn \"        \" + writextag(\"table:named-range\", null, {\n\t\t\t\"table:name\": name.Name,\n\t\t\t\"table:cell-range-address\": odsref,\n\t\t\t\"table:base-cell-address\": odsref.replace(/[\\.][^\\.]*$/, \".$A$1\")\n\t\t});\n\t}).join(\"\\n\") + \"\\n      </table:named-expressions>\\n\";\n}\nvar write_content_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text/*:string*/, span)/*:string*/ {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, span ? \"<text:line-break/>\": \"</text:p><text:p>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar write_ws = function(ws, wb/*:Workbook*/, i/*:number*/, opts, nfs, date1904)/*:string*/ {\n\t\t/* Section 9 Tables */\n\t\tvar o/*:Array<string>*/ = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']||\"A1\");\n\t\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tif(ws[\"!cols\"]) {\n\t\t\tfor(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n\t\t}\n\t\tvar H = \"\", ROWS = ws[\"!rows\"]||[];\n\t\tfor(R = 0; R < range.s.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '></table:table-row>\\n');\n\t\t}\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push('          <table:covered-table-cell/>\\n'); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[\"!data\"][R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v == null ? \"\" : cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v, date1904).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v, date1904).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e': // TODO: translate to ODS errors\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue; // TODO: empty cell with comments\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target;\n\t\t\t\t\t_tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\t// TODO: choose correct parent path format based on link delimiters\n\t\t\t\t\tif(_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, \"&amp;\")});\n\t\t\t\t}\n\t\t\t\tif(nfs[cell.z]) ct[\"table:style-name\"] = \"ce\" + nfs[cell.z].slice(1);\n\t\t\t\tvar payload = writextag('text:p', text_p, {});\n\t\t\t\tif(cell.c) {\n\t\t\t\t\tvar acreator = \"\", apayload = \"\", aprops = {};\n\t\t\t\t\tfor(var ci = 0; ci < cell.c.length; ++ci) {\n\t\t\t\t\t\tif(!acreator && cell.c[ci].a) acreator = cell.c[ci].a;\n\t\t\t\t\t\tapayload += \"<text:p>\" + write_text_p(cell.c[ci].t) + \"</text:p>\";\n\t\t\t\t\t}\n\t\t\t\t\tif(!cell.c.hidden) aprops[\"office:display\"] = true;\n\t\t\t\t\tpayload = writextag('office:annotation', apayload, aprops) + payload;\n\t\t\t\t}\n\t\t\t\to.push('          ' + writextag('table:table-cell', payload, ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\tif((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, i));\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o/*:Array<string>*/, wb) {\n\t\to.push(' <office:automatic-styles>\\n');\n\n\t\t/* column styles */\n\t\tvar cidx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!cols\"]) {\n\t\t\t\tfor(var C = 0; C < ws[\"!cols\"].length; ++C) if(ws[\"!cols\"][C]) {\n\t\t\t\t\tvar colobj = ws[\"!cols\"][C];\n\t\t\t\t\tif(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n\t\t\t\t\tprocess_col(colobj);\n\t\t\t\t\tcolobj.ods = cidx;\n\t\t\t\t\tvar w = ws[\"!cols\"][C].wpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n\t\t\t\t\to.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++cidx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* row styles */\n\t\tvar ridx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!rows\"]) {\n\t\t\t\tfor(var R = 0; R < ws[\"!rows\"].length; ++R) if(ws[\"!rows\"][R]) {\n\t\t\t\t\tws[\"!rows\"][R].ods = ridx;\n\t\t\t\t\tvar h = ws[\"!rows\"][R].hpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n\t\t\t\t\to.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++ridx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* table */\n\t\to.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n\t\to.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n\t\to.push('  </style:style>\\n');\n\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\n\t\t/* number formats, table cells, text */\n\t\tvar nfs = {};\n\t\tvar nfi = 69;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tvar dense = (ws[\"!data\"] != null);\n\t\t\tif(!ws[\"!ref\"]) return;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tfor(var R = 0; R <= range.e.r; ++R) for(var C = 0; C <= range.e.c; ++C) {\n\t\t\t\tvar c = dense ? (ws[\"!data\"][R]||[])[C] : ws[encode_cell({r:R,c:C})];\n\t\t\t\tif(!c || !c.z || c.z.toLowerCase() == \"general\") continue;\n\t\t\t\tif(!nfs[c.z]) {\n\t\t\t\t\tvar out = write_number_format_ods(c.z, \"N\" + nfi);\n\t\t\t\t\tif(out) { nfs[c.z] = \"N\" + nfi; ++nfi; o.push(out + \"\\n\"); }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\t\tkeys(nfs).forEach(function(nf) {\n\t\t\to.push('<style:style style:name=\"ce' + nfs[nf].slice(1) + '\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"' + nfs[nf] + '\"/>\\n');\n\t\t});\n\n\t\t/* page-layout */\n\n\t\to.push(' </office:automatic-styles>\\n');\n\t\treturn nfs;\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") {\n\t\t\to.push('<office:document' + attr + fods + '>\\n');\n\t\t\to.push(write_meta_ods().replace(/<office:document-meta[^<>]*?>/, \"\").replace(/<\\/office:document-meta>/, \"\") + \"\\n\");\n\t\t\t// TODO: settings (equiv of settings.xml for ODS)\n\t\t} else o.push('<office:document-content' + attr  + '>\\n');\n\t\t// o.push('  <office:scripts/>\\n');\n\t\tvar nfs = write_automatic_styles_ods(o, wb);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tif(((wb.Workbook||{}).WBProps||{}).date1904) o.push('      <table:calculation-settings table:case-sensitive=\"false\" table:search-criteria-must-apply-to-whole-cell=\"true\" table:use-wildcards=\"true\" table:use-regular-expressions=\"false\" table:automatic-find-labels=\"false\">\\n        <table:null-date table:date-value=\"1904-01-01\"/>\\n      </table:calculation-settings>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts, nfs, ((wb.Workbook||{}).WBProps||{}).date1904));\n\t\tif((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, -1));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb/*:any*/, opts/*:any*/) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n\tvar zip = zip_new();\n\tvar f = \"\";\n\n\tvar manifest/*:Array<Array<string> >*/ = [];\n\tvar rdf/*:Array<[string, string]>*/ = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip_add_file(zip, f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip_add_file(zip, f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip_add_file(zip, f, XML_HEADER + write_meta_ods(/*::wb, opts*/));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip_add_file(zip, f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip_add_file(zip, f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nvar subarray = function() {\n  try {\n    if (typeof Uint8Array == \"undefined\")\n      return \"slice\";\n    if (typeof Uint8Array.prototype.subarray == \"undefined\")\n      return \"slice\";\n    if (typeof Buffer !== \"undefined\") {\n      if (typeof Buffer.prototype.subarray == \"undefined\")\n        return \"slice\";\n      if ((typeof Buffer.from == \"function\" ? Buffer.from([72, 62]) : new Buffer([72, 62])) instanceof Uint8Array)\n        return \"subarray\";\n      return \"slice\";\n    }\n    return \"subarray\";\n  } catch (e) {\n    return \"slice\";\n  }\n}();\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8concat(u8a) {\n  var len = 0;\n  for (var i = 0; i < u8a.length; ++i)\n    len += u8a[i].length;\n  var out = new Uint8Array(len);\n  var off = 0;\n  for (i = 0; i < u8a.length; ++i) {\n    var u8 = u8a[i], L = u8.length;\n    if (L < 250) {\n      for (var j = 0; j < L; ++j)\n        out[off++] = u8[j];\n    } else {\n      out.set(u8, off);\n      off += L;\n    }\n  }\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j)\n    mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 16;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256)\n    buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr.l;\n  var usz = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      usz |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 28);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 35);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 42);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n    }\n  ptr.l = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz:\n    if (v > 127) {\n      usz[L - 1] |= 128;\n      usz[L] = v >> 7 & 127;\n      ++L;\n      if (v <= 16383)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 14 & 127;\n      ++L;\n      if (v <= 2097151)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 21 & 127;\n      ++L;\n      if (v <= 268435455)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 256 >>> 21 & 127;\n      ++L;\n      if (v <= 34359738367)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 65536 >>> 21 & 127;\n      ++L;\n      if (v <= 4398046511103)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 16777216 >>> 21 & 127;\n      ++L;\n    }\n  return usz[subarray](0, L);\n}\nfunction parse_packed_varints(buf) {\n  var ptr = { l: 0 };\n  var out = [];\n  while (ptr.l < buf.length)\n    out.push(parse_varint49(buf, ptr));\n  return out;\n}\nfunction write_packed_varints(nums) {\n  return u8concat(nums.map(function(x) {\n    return write_varint49(x);\n  }));\n}\nfunction varint_to_i32(buf) {\n  var l = 0, i32 = buf[l] & 127;\n  if (buf[l++] < 128)\n    return i32;\n  i32 |= (buf[l] & 127) << 7;\n  if (buf[l++] < 128)\n    return i32;\n  i32 |= (buf[l] & 127) << 14;\n  if (buf[l++] < 128)\n    return i32;\n  i32 |= (buf[l] & 127) << 21;\n  if (buf[l++] < 128)\n    return i32;\n  i32 |= (buf[l] & 15) << 28;\n  return i32;\n}\nfunction varint_to_u64(buf) {\n  var l = 0, lo = buf[l] & 127, hi = 0;\n  varint:\n    if (buf[l++] >= 128) {\n      lo |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 28;\n      hi = buf[l] >> 4 & 7;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 3;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 10;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 17;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 24;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 31;\n    }\n  return [lo >>> 0, hi >>> 0];\n}\nfunction parse_shallow(buf) {\n  var out = [], ptr = { l: 0 };\n  while (ptr.l < buf.length) {\n    var off = ptr.l;\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = num / 8 | 0;\n    var data;\n    var l = ptr.l;\n    switch (type) {\n      case 0:\n        {\n          while (buf[l++] >= 128)\n            ;\n          data = buf[subarray](ptr.l, l);\n          ptr.l = l;\n        }\n        break;\n      case 1:\n        {\n          data = buf[subarray](l, l + 8);\n          ptr.l = l + 8;\n        }\n        break;\n      case 2:\n        {\n          var len = parse_varint49(buf, ptr);\n          data = buf[subarray](ptr.l, ptr.l + len);\n          ptr.l += len;\n        }\n        break;\n      case 5:\n        {\n          data = buf[subarray](l, l + 4);\n          ptr.l = l + 4;\n        }\n        break;\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = { data: data, type: type };\n    if (out[num] == null)\n      out[num] = [];\n    out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function(field, idx) {\n    if (idx == 0)\n      return;\n    field.forEach(function(item) {\n      if (!item.data)\n        return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2)\n        out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function(d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [], ptr = { l: 0 };\n  while (ptr.l < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf[subarray](ptr.l, ptr.l + len));\n    ptr.l += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function(b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf[subarray](ptr.l, ptr.l + fl)\n      });\n      ptr.l += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0])\n      res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function(ia) {\n    var ai = [\n      [],\n      [{ data: write_varint49(ia.id), type: 0 }],\n      []\n    ];\n    if (ia.merge != null)\n      ai[3] = [{ data: write_varint49(+!!ia.merge), type: 0 }];\n    var midata = [];\n    ia.messages.forEach(function(mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{ type: 0, data: write_varint49(mi.data.length) }];\n      ai[2].push({ data: write_shallow(mi.meta), type: 2 });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function(mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0)\n    throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = { l: 0 };\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  var l = ptr.l;\n  while (l < buf.length) {\n    var tag = buf[l] & 3;\n    if (tag == 0) {\n      var len = buf[l++] >> 2;\n      if (len < 60)\n        ++len;\n      else {\n        var c = len - 59;\n        len = buf[l];\n        if (c > 1)\n          len |= buf[l + 1] << 8;\n        if (c > 2)\n          len |= buf[l + 2] << 16;\n        if (c > 3)\n          len |= buf[l + 3] << 24;\n        len >>>= 0;\n        len++;\n        l += c;\n      }\n      chunks.push(buf[subarray](l, l + len));\n      l += len;\n      continue;\n    } else {\n      var offset = 0, length = 0;\n      if (tag == 1) {\n        length = (buf[l] >> 2 & 7) + 4;\n        offset = (buf[l++] & 224) << 3;\n        offset |= buf[l++];\n      } else {\n        length = (buf[l++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[l] | buf[l + 1] << 8;\n          l += 2;\n        } else {\n          offset = (buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16 | buf[l + 3] << 24) >>> 0;\n          l += 4;\n        }\n      }\n      if (offset == 0)\n        throw new Error(\"Invalid offset 0\");\n      var j = chunks.length - 1, off = offset;\n      while (j >= 0 && off >= chunks[j].length) {\n        off -= chunks[j].length;\n        --j;\n      }\n      if (j < 0) {\n        if (off == 0)\n          off = chunks[j = 0].length;\n        else\n          throw new Error(\"Invalid offset beyond length\");\n      }\n      if (length < off)\n        chunks.push(chunks[j][subarray](chunks[j].length - off, chunks[j].length - off + length));\n      else {\n        if (off > 0) {\n          chunks.push(chunks[j][subarray](chunks[j].length - off));\n          length -= off;\n        }\n        ++j;\n        while (length >= chunks[j].length) {\n          chunks.push(chunks[j]);\n          length -= chunks[j].length;\n          ++j;\n        }\n        if (length)\n          chunks.push(chunks[j][subarray](0, length));\n      }\n      if (chunks.length > 25)\n        chunks = [u8concat(chunks)];\n    }\n  }\n  var clen = 0;\n  for (var u8i = 0; u8i < chunks.length; ++u8i)\n    clen += chunks[u8i].length;\n  if (clen != usz)\n    throw new Error(\"Unexpected length: \".concat(clen, \" != \").concat(usz));\n  return chunks;\n}\nfunction decompress_iwa_file(buf) {\n  if (Array.isArray(buf))\n    buf = new Uint8Array(buf);\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push.apply(out, parse_snappy_chunk(t, buf[subarray](l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length)\n    throw new Error(\"data is not a valid framed stream!\");\n  return out.length == 1 ? out[0] : u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf[subarray](l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nvar numbers_lut_new = function() {\n  return { sst: [], rsst: [], ofmt: [], nfmt: [], fmla: [], ferr: [], cmnt: [] };\n};\nfunction numbers_format_cell(cell, t, flags, ofmt, nfmt) {\n  var _a, _b, _c, _d;\n  var ctype = t & 255, ver = t >> 8;\n  var fmt = ver >= 5 ? nfmt : ofmt;\n  dur:\n    if (flags & (ver > 4 ? 8 : 4) && cell.t == \"n\" && ctype == 7) {\n      var dstyle = ((_a = fmt[7]) == null ? void 0 : _a[0]) ? varint_to_i32(fmt[7][0].data) : -1;\n      if (dstyle == -1)\n        break dur;\n      var dmin = ((_b = fmt[15]) == null ? void 0 : _b[0]) ? varint_to_i32(fmt[15][0].data) : -1;\n      var dmax = ((_c = fmt[16]) == null ? void 0 : _c[0]) ? varint_to_i32(fmt[16][0].data) : -1;\n      var auto = ((_d = fmt[40]) == null ? void 0 : _d[0]) ? varint_to_i32(fmt[40][0].data) : -1;\n      var d = cell.v, dd = d;\n      autodur:\n        if (auto) {\n          if (d == 0) {\n            dmin = dmax = 2;\n            break autodur;\n          }\n          if (d >= 604800)\n            dmin = 1;\n          else if (d >= 86400)\n            dmin = 2;\n          else if (d >= 3600)\n            dmin = 4;\n          else if (d >= 60)\n            dmin = 8;\n          else if (d >= 1)\n            dmin = 16;\n          else\n            dmin = 32;\n          if (Math.floor(d) != d)\n            dmax = 32;\n          else if (d % 60)\n            dmax = 16;\n          else if (d % 3600)\n            dmax = 8;\n          else if (d % 86400)\n            dmax = 4;\n          else if (d % 604800)\n            dmax = 2;\n          if (dmax < dmin)\n            dmax = dmin;\n        }\n      if (dmin == -1 || dmax == -1)\n        break dur;\n      var dstr = [], zstr = [];\n      if (dmin == 1) {\n        dd = d / 604800;\n        if (dmax == 1) {\n          zstr.push('d\"d\"');\n        } else {\n          dd |= 0;\n          d -= 604800 * dd;\n        }\n        dstr.push(dd + (dstyle == 2 ? \" week\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"w\" : \"\"));\n      }\n      if (dmin <= 2 && dmax >= 2) {\n        dd = d / 86400;\n        if (dmax > 2) {\n          dd |= 0;\n          d -= 86400 * dd;\n        }\n        zstr.push('d\"d\"');\n        dstr.push(dd + (dstyle == 2 ? \" day\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"d\" : \"\"));\n      }\n      if (dmin <= 4 && dmax >= 4) {\n        dd = d / 3600;\n        if (dmax > 4) {\n          dd |= 0;\n          d -= 3600 * dd;\n        }\n        zstr.push((dmin >= 4 ? \"[h]\" : \"h\") + '\"h\"');\n        dstr.push(dd + (dstyle == 2 ? \" hour\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"h\" : \"\"));\n      }\n      if (dmin <= 8 && dmax >= 8) {\n        dd = d / 60;\n        if (dmax > 8) {\n          dd |= 0;\n          d -= 60 * dd;\n        }\n        zstr.push((dmin >= 8 ? \"[m]\" : \"m\") + '\"m\"');\n        if (dstyle == 0)\n          dstr.push((dmin == 8 && dmax == 8 || dd >= 10 ? \"\" : \"0\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" minute\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"m\" : \"\"));\n      }\n      if (dmin <= 16 && dmax >= 16) {\n        dd = d;\n        if (dmax > 16) {\n          dd |= 0;\n          d -= dd;\n        }\n        zstr.push((dmin >= 16 ? \"[s]\" : \"s\") + '\"s\"');\n        if (dstyle == 0)\n          dstr.push((dmax == 16 && dmin == 16 || dd >= 10 ? \"\" : \"0\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" second\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"s\" : \"\"));\n      }\n      if (dmax >= 32) {\n        dd = Math.round(1e3 * d);\n        if (dmin < 32)\n          zstr.push('.000\"ms\"');\n        if (dstyle == 0)\n          dstr.push((dd >= 100 ? \"\" : dd >= 10 ? \"0\" : \"00\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" millisecond\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"ms\" : \"\"));\n      }\n      cell.w = dstr.join(dstyle == 0 ? \":\" : \" \");\n      cell.z = zstr.join(dstyle == 0 ? '\":\"' : \" \");\n      if (dstyle == 0)\n        cell.w = cell.w.replace(/:(\\d\\d\\d)$/, \".$1\");\n    }\n}\nfunction parse_old_storage(buf, lut, v, opts) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var ridx = -1, sidx = -1, zidx = -1, ieee = NaN, dc = 0, dt = new Date(Date.UTC(2001, 0, 1));\n  var doff = v > 1 ? 12 : 8;\n  if (flags & 2) {\n    zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 3468 : 396)) * 4;\n  if (flags & 512) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (v > 1) {\n    flags = dv.getUint32(8, true) >>> 16;\n    if (flags & 255) {\n      if (zidx == -1)\n        zidx = dv.getUint32(doff, true);\n      doff += 4;\n    }\n  }\n  var ret;\n  var t = buf[v >= 4 ? 1 : 2];\n  switch (t) {\n    case 0:\n      return void 0;\n    case 2:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 3:\n      ret = { t: \"s\", v: lut.sst[sidx] };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates)\n          ret = { t: \"d\", v: dt };\n        else\n          ret = { t: \"n\", v: dc / 86400 + 35430, z: table_fmt[14] };\n      }\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = { t: \"s\", v: rts.v };\n          if (rts.l)\n            ret.l = { Target: rts.l };\n        } else\n          throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n  }\n  if (zidx > -1)\n    numbers_format_cell(ret, t | v << 8, flags, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7)\n    ret.v /= 86400;\n  return ret;\n}\nfunction parse_new_storage(buf, lut, opts) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var fields = dv.getUint32(8, true);\n  var doff = 12;\n  var ridx = -1, sidx = -1, zidx = -1, d128 = NaN, ieee = NaN, dc = 0, dt = new Date(Date.UTC(2001, 0, 1)), eidx = -1, fidx = -1;\n  if (fields & 1) {\n    d128 = readDecimal128LE(buf, doff);\n    doff += 16;\n  }\n  if (fields & 2) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (fields & 4) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (fields & 8) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 16) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 480) * 4;\n  if (fields & 512) {\n    fidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 1024) * 4;\n  if (fields & 2048) {\n    eidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  var ret;\n  var t = buf[1];\n  switch (t) {\n    case 0:\n      ret = { t: \"z\" };\n      break;\n    case 2:\n      ret = { t: \"n\", v: d128 };\n      break;\n    case 3:\n      ret = { t: \"s\", v: lut.sst[sidx] };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates)\n          ret = { t: \"d\", v: dt };\n        else\n          ret = { t: \"n\", v: dc / 86400 + 35430, z: table_fmt[14] };\n      }\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = { t: \"s\", v: rts.v };\n          if (rts.l)\n            ret.l = { Target: rts.l };\n        } else\n          throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n      }\n      break;\n    case 10:\n      ret = { t: \"n\", v: d128 };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n  }\n  doff += popcnt(fields & 4096) * 4;\n  if (fields & 516096) {\n    if (zidx == -1)\n      zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 524288) {\n    var cmntidx = dv.getUint32(doff, true);\n    doff += 4;\n    if (lut.cmnt[cmntidx])\n      ret.c = iwa_to_s5s_comment(lut.cmnt[cmntidx]);\n  }\n  if (zidx > -1)\n    numbers_format_cell(ret, t | 5 << 8, fields >> 13, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7)\n    ret.v /= 86400;\n  return ret;\n}\nfunction write_new_storage(cell, lut) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, fields = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      if (cell.z && fmt_is_date(cell.z)) {\n        out[1] = 5;\n        dv.setFloat64(l, (numdate(cell.v + 1462).getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n        fields |= 4;\n        l += 8;\n        break;\n      } else {\n        out[1] = 2;\n        writeDecimal128LE(out, l, cell.v);\n        fields |= 1;\n        l += 16;\n      }\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        var s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function(v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1)\n            lut.rsst[irsst = lut.rsst.length] = { v: s, l: cell.l.Target };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 16;\n          l += 4;\n        } else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1)\n            lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 8;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 4;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    lut.cmnt.push(s5s_to_iwa_comment(cell.c));\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 524288;\n    l += 4;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction write_old_storage(cell, lut) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, fields = 0, s = \"\";\n  out[0] = 4;\n  switch (cell.t) {\n    case \"n\":\n      break;\n    case \"b\":\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function(v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1)\n            lut.rsst[irsst = lut.rsst.length] = { v: s, l: cell.l.Target };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 512;\n          l += 4;\n        } else {\n        }\n      }\n      break;\n    case \"d\":\n      break;\n    case \"e\":\n      break;\n    case \"z\":\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 4096;\n    l += 4;\n  }\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      dv.setFloat64(l, cell.v, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n        } else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1)\n            lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 16;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 64;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction parse_cell_storage(buf, lut, opts) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return parse_old_storage(buf, lut, buf[0], opts);\n    case 5:\n      return parse_new_storage(buf, lut, opts);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return varint_to_i32(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  return write_shallow([\n    [],\n    [{ type: 0, data: write_varint49(idx) }]\n  ]);\n}\nfunction numbers_add_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  var orefidx = orefs.indexOf(ref);\n  if (orefidx == -1) {\n    orefs.push(ref);\n    iwa.messages[0].meta[5] = [{ type: 2, data: write_packed_varints(orefs) }];\n  }\n}\nfunction numbers_del_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  iwa.messages[0].meta[5] = [{ type: 2, data: write_packed_varints(orefs.filter(function(r) {\n    return r != ref;\n  })) }];\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function(entry) {\n    var _a, _b;\n    var le = parse_shallow(entry.data);\n    if (!le[1])\n      return;\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001)\n            throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          var richtext = { v: tswpsa[3].map(function(x) {\n            return u8str(x.data);\n          }).join(\"\") };\n          data[key] = richtext;\n          sfields:\n            if ((_a = tswpsa == null ? void 0 : tswpsa[11]) == null ? void 0 : _a[0]) {\n              var smartfields = (_b = parse_shallow(tswpsa[11][0].data)) == null ? void 0 : _b[1];\n              if (!smartfields)\n                break sfields;\n              smartfields.forEach(function(sf) {\n                var _a2, _b2, _c;\n                var attr = parse_shallow(sf.data);\n                if ((_a2 = attr[2]) == null ? void 0 : _a2[0]) {\n                  var obj = M[parse_TSP_Reference((_b2 = attr[2]) == null ? void 0 : _b2[0].data)][0];\n                  var objtype = varint_to_i32(obj.meta[1][0].data);\n                  switch (objtype) {\n                    case 2032:\n                      var hlink = parse_shallow(obj.data);\n                      if (((_c = hlink == null ? void 0 : hlink[2]) == null ? void 0 : _c[0]) && !richtext.l)\n                        richtext.l = u8str(hlink[2][0].data);\n                      break;\n                    case 2039:\n                      break;\n                    default:\n                      console.log(\"unrecognized ObjectAttribute type \".concat(objtype));\n                  }\n                }\n              });\n            }\n        }\n        break;\n      case 2:\n        data[key] = parse_shallow(le[6][0].data);\n        break;\n      case 3:\n        data[key] = parse_shallow(le[5][0].data);\n        break;\n      case 10:\n        {\n          var cs = M[parse_TSP_Reference(le[10][0].data)][0];\n          data[key] = parse_TSD_CommentStorageArchive(M, cs.data);\n        }\n        break;\n      default:\n        throw type;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else\n    throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535)\n      offsets.push([C, off]);\n  }\n  if (offsets.length != cnt)\n    throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C)\n    cells[offsets[C][0]] = used_storage[subarray](offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1)\n    cells[offsets[offsets.length - 1][0]] = used_storage[subarray](offsets[offsets.length - 1][1] * width);\n  return { R: R, cells: cells };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = -1;\n  if ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) {\n    if (varint_to_i32(pb[7][0].data) >>> 0)\n      storage = 1;\n    else\n      storage = 0;\n  }\n  var ri = mappa(pb[5], function(u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function(acc, x) {\n      if (!acc[x.R])\n        acc[x.R] = [];\n      x.cells.forEach(function(cell, C) {\n        if (acc[x.R][C])\n          throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TSD_CommentStorageArchive(M, data) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  var out = { t: \"\", a: \"\" };\n  var csp = parse_shallow(data);\n  if ((_b = (_a = csp == null ? void 0 : csp[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data)\n    out.t = u8str((_d = (_c = csp == null ? void 0 : csp[1]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) || \"\";\n  if ((_f = (_e = csp == null ? void 0 : csp[3]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data) {\n    var as = M[parse_TSP_Reference((_h = (_g = csp == null ? void 0 : csp[3]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data)][0];\n    var asp = parse_shallow(as.data);\n    if ((_j = (_i = asp[1]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data)\n      out.a = u8str(asp[1][0].data);\n  }\n  if (csp == null ? void 0 : csp[4]) {\n    out.replies = [];\n    csp[4].forEach(function(pi) {\n      var cs = M[parse_TSP_Reference(pi.data)][0];\n      out.replies.push(parse_TSD_CommentStorageArchive(M, cs.data));\n    });\n  }\n  return out;\n}\nfunction iwa_to_s5s_comment(iwa) {\n  var out = [];\n  out.push({ t: iwa.t || \"\", a: iwa.a, T: iwa.replies && iwa.replies.length > 0 });\n  if (iwa.replies)\n    iwa.replies.forEach(function(reply) {\n      out.push({ t: reply.t || \"\", a: reply.a, T: true });\n    });\n  return out;\n}\nfunction s5s_to_iwa_comment(s5s) {\n  var out = { a: \"\", t: \"\", replies: [] };\n  for (var i = 0; i < s5s.length; ++i) {\n    if (i == 0) {\n      out.a = s5s[i].a;\n      out.t = s5s[i].t;\n    } else {\n      out.replies.push({ a: s5s[i].a, t: s5s[i].t });\n    }\n  }\n  return out;\n}\nfunction parse_TST_TableModelArchive(M, root, ws, opts) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  var pb = parse_shallow(root.data);\n  var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0)\n    throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0)\n    throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var dense = ws[\"!data\"] != null, dws = ws;\n  var store = parse_shallow(pb[4][0].data);\n  var lut = numbers_lut_new();\n  if ((_a = store[4]) == null ? void 0 : _a[0])\n    lut.sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  if ((_b = store[6]) == null ? void 0 : _b[0])\n    lut.fmla = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[6][0].data)][0]);\n  if ((_c = store[11]) == null ? void 0 : _c[0])\n    lut.ofmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[11][0].data)][0]);\n  if ((_d = store[12]) == null ? void 0 : _d[0])\n    lut.ferr = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[12][0].data)][0]);\n  if ((_e = store[17]) == null ? void 0 : _e[0])\n    lut.rsst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]);\n  if ((_f = store[19]) == null ? void 0 : _f[0])\n    lut.cmnt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[19][0].data)][0]);\n  if ((_g = store[22]) == null ? void 0 : _g[0])\n    lut.nfmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[22][0].data)][0]);\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  if (!((_h = store[9]) == null ? void 0 : _h[0]))\n    throw \"NUMBERS file missing row tree\";\n  var rtt = parse_shallow(store[9][0].data)[1].map(function(p) {\n    return parse_shallow(p.data);\n  });\n  rtt.forEach(function(kv) {\n    _R = varint_to_i32(kv[1][0].data);\n    var tidx = varint_to_i32(kv[2][0].data);\n    var t = tile[1][tidx];\n    if (!t)\n      throw \"NUMBERS missing tile \" + tidx;\n    var tl = parse_shallow(t.data);\n    var ref2 = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype2 = varint_to_i32(ref2.meta[1][0].data);\n    if (mtype2 != 6002)\n      throw new Error(\"6001 unexpected reference to \".concat(mtype2));\n    var _tile = parse_TST_Tile(M, ref2);\n    _tile.data.forEach(function(row, R) {\n      row.forEach(function(buf, C) {\n        var res = parse_cell_storage(buf, lut, opts);\n        if (res) {\n          if (dense) {\n            if (!dws[\"!data\"][_R + R])\n              dws[\"!data\"][_R + R] = [];\n            dws[\"!data\"][_R + R][C] = res;\n          } else {\n            ws[encode_col(C) + encode_row(_R + R)] = res;\n          }\n        }\n      });\n    });\n    _R += _tile.nrows;\n  });\n  if ((_i = store[13]) == null ? void 0 : _i[0]) {\n    var ref = M[parse_TSP_Reference(store[13][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6144)\n      throw new Error(\"Expected merge type 6144, found \".concat(mtype));\n    ws[\"!merges\"] = (_j = parse_shallow(ref.data)) == null ? void 0 : _j[1].map(function(pi) {\n      var merge = parse_shallow(pi.data);\n      var origin = u8_to_dataview(parse_shallow(merge[1][0].data)[1][0].data), size = u8_to_dataview(parse_shallow(merge[2][0].data)[1][0].data);\n      return {\n        s: { r: origin.getUint16(0, true), c: origin.getUint16(2, true) },\n        e: {\n          r: origin.getUint16(0, true) + size.getUint16(0, true) - 1,\n          c: origin.getUint16(2, true) + size.getUint16(2, true) - 1\n        }\n      };\n    });\n  }\n}\nfunction parse_TST_TableInfoArchive(M, root, opts) {\n  var pb = parse_shallow(root.data);\n  var out = { \"!ref\": \"A1\" };\n  if (opts == null ? void 0 : opts.dense)\n    out[\"!data\"] = [];\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001)\n    throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out, opts);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root, opts) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3)\n        out.sheets.push(parse_TST_TableInfoArchive(M, m, opts));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root, opts) {\n  var _a;\n  var out = book_new();\n  out.Workbook = { WBProps: { date1904: true } };\n  var pb = parse_shallow(root.data);\n  if ((_a = pb[2]) == null ? void 0 : _a[0])\n    throw new Error(\"Keynote presentations are not supported\");\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m, opts);\n        root2.sheets.forEach(function(sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0)\n    throw new Error(\"Empty NUMBERS file\");\n  out.bookType = \"numbers\";\n  return out;\n}\nfunction parse_numbers_iwa(cfb, opts) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var M = {}, indices = [];\n  cfb.FullPaths.forEach(function(p) {\n    if (p.match(/\\.iwpv2/))\n      throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function(s) {\n    if (!s.name.match(/\\.iwa$/))\n      return;\n    if (s.content[0] != 0)\n      return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function(packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length)\n    throw new Error(\"File has no messages\");\n  if (((_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0].meta) == null ? void 0 : _b[1]) == null ? void 0 : _c[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1e4)\n    throw new Error(\"Pages documents are not supported\");\n  var docroot = ((_g = (_f = (_e = (_d = M == null ? void 0 : M[1]) == null ? void 0 : _d[0]) == null ? void 0 : _e.meta) == null ? void 0 : _f[1]) == null ? void 0 : _g[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot)\n    indices.forEach(function(idx) {\n      M[idx].forEach(function(iwam) {\n        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n        if (mtype == 1) {\n          if (!docroot)\n            docroot = iwam;\n          else\n            throw new Error(\"Document has multiple roots\");\n        }\n      });\n    });\n  if (!docroot)\n    throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot, opts);\n}\nfunction write_TST_TileRowInfo(data, lut, wide) {\n  var _a, _b, _c;\n  var tri = [\n    [],\n    [{ type: 0, data: write_varint49(0) }],\n    [{ type: 0, data: write_varint49(0) }],\n    [{ type: 2, data: new Uint8Array([]) }],\n    [{ type: 2, data: new Uint8Array(Array.from({ length: 510 }, function() {\n      return 255;\n    })) }],\n    [{ type: 0, data: write_varint49(5) }],\n    [{ type: 2, data: new Uint8Array([]) }],\n    [{ type: 2, data: new Uint8Array(Array.from({ length: 510 }, function() {\n      return 255;\n    })) }],\n    [{ type: 0, data: write_varint49(1) }]\n  ];\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0]))\n    throw \"Mutation only works on post-BNC storages!\";\n  var cnt = 0;\n  if (tri[7][0].data.length < 2 * data.length) {\n    var new_7 = new Uint8Array(2 * data.length);\n    new_7.set(tri[7][0].data);\n    tri[7][0].data = new_7;\n  }\n  if (tri[4][0].data.length < 2 * data.length) {\n    var new_4 = new Uint8Array(2 * data.length);\n    new_4.set(tri[4][0].data);\n    tri[4][0].data = new_4;\n  }\n  var dv = u8_to_dataview(tri[7][0].data), last_offset = 0, cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data), _last_offset = 0, _cell_storage = [];\n  var width = wide ? 4 : 1;\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null || data[C].t == \"z\" && !((_c = data[C].c) == null ? void 0 : _c.length) || data[C].t == \"e\") {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset / width, true);\n    _dv.setUint16(C * 2, _last_offset / width, true);\n    var celload, _celload;\n    switch (data[C].t) {\n      case \"d\":\n        if (data[C].v instanceof Date) {\n          celload = write_new_storage(data[C], lut);\n          _celload = write_old_storage(data[C], lut);\n          break;\n        }\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      case \"s\":\n      case \"n\":\n      case \"b\":\n      case \"z\":\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    {\n      _cell_storage.push(_celload);\n      _last_offset += _celload.length;\n    }\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  tri[5][0].data = write_varint49(5);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  tri[8] = [{ type: 0, data: write_varint49(wide ? 1 : 0) }];\n  return tri;\n}\nfunction write_iwam(type, payload) {\n  return {\n    meta: [\n      [],\n      [{ type: 0, data: write_varint49(type) }]\n    ],\n    data: payload\n  };\n}\nfunction get_unique_msgid(dep, dependents) {\n  if (!dependents.last)\n    dependents.last = 927262;\n  for (var i = dependents.last; i < 2e6; ++i)\n    if (!dependents[i]) {\n      dependents[dependents.last = i] = dep;\n      return i;\n    }\n  throw new Error(\"Too many messages\");\n}\nfunction build_numbers_deps(cfb) {\n  var dependents = {};\n  var indices = [];\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (fi.type != 2)\n      return;\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    if (fi.content[0] != 0)\n      return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function(packet) {\n      indices.push(packet.id);\n      dependents[packet.id] = { deps: [], location: fp, type: varint_to_i32(packet.messages[0].meta[1][0].data) };\n    });\n  });\n  cfb.FileIndex.forEach(function(fi) {\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    if (fi.content[0] != 0)\n      return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function(ia) {\n      ia.messages.forEach(function(mess) {\n        [5, 6].forEach(function(f) {\n          if (!mess.meta[f])\n            return;\n          mess.meta[f].forEach(function(x) {\n            dependents[ia.id].deps.push(varint_to_i32(x.data));\n          });\n        });\n      });\n    });\n  });\n  return dependents;\n}\nfunction write_TSP_Color_RGB(r, g, b) {\n  return write_shallow([\n    [],\n    [{ type: 0, data: write_varint49(1) }],\n    [],\n    [{ type: 5, data: new Uint8Array(Float32Array.from([r / 255]).buffer) }],\n    [{ type: 5, data: new Uint8Array(Float32Array.from([g / 255]).buffer) }],\n    [{ type: 5, data: new Uint8Array(Float32Array.from([b / 255]).buffer) }],\n    [{ type: 5, data: new Uint8Array(Float32Array.from([1]).buffer) }],\n    [],\n    [],\n    [],\n    [],\n    [],\n    [{ type: 0, data: write_varint49(1) }]\n  ]);\n}\nfunction get_author_color(n) {\n  switch (n) {\n    case 0:\n      return write_TSP_Color_RGB(99, 222, 171);\n    case 1:\n      return write_TSP_Color_RGB(162, 197, 240);\n    case 2:\n      return write_TSP_Color_RGB(255, 189, 189);\n  }\n  return write_TSP_Color_RGB(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers)\n    throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var cfb = CFB.read(opts.numbers, { type: \"base64\" });\n  var deps = build_numbers_deps(cfb);\n  var docroot = numbers_iwa_find(cfb, deps, 1);\n  if (docroot == null)\n    throw \"Could not find message \".concat(1, \" in Numbers template\");\n  var sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n  if (sheetrefs.length > 1)\n    throw new Error(\"Template NUMBERS file must have exactly one sheet\");\n  wb.SheetNames.forEach(function(name, idx) {\n    if (idx >= 1) {\n      numbers_add_ws(cfb, deps, idx + 1);\n      docroot = numbers_iwa_find(cfb, deps, 1);\n      sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n    }\n    write_numbers_ws(cfb, deps, wb.Sheets[name], name, idx, sheetrefs[idx]);\n  });\n  return cfb;\n}\nfunction numbers_iwa_doit(cfb, deps, id, cb) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry)\n    throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function(packet) {\n    return packet.id == id;\n  });\n  cb(ainfo, x);\n  entry.content = compress_iwa_file(write_iwa_file(x));\n  entry.size = entry.content.length;\n}\nfunction numbers_iwa_find(cfb, deps, id) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry)\n    throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function(packet) {\n    return packet.id == id;\n  });\n  return ainfo;\n}\nfunction numbers_add_meta(mlist, newid, newloc) {\n  mlist[3].push({ type: 2, data: write_shallow([\n    [],\n    [{ type: 0, data: write_varint49(newid) }],\n    [{ type: 2, data: stru8(newloc.replace(/-[\\s\\S]*$/, \"\")) }],\n    [{ type: 2, data: stru8(newloc) }],\n    [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n    [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n    [],\n    [],\n    [],\n    [],\n    [{ type: 0, data: write_varint49(0) }],\n    [],\n    [{ type: 0, data: write_varint49(0) }]\n  ]) });\n  mlist[1] = [{ type: 0, data: write_varint49(Math.max(newid + 1, varint_to_i32(mlist[1][0].data))) }];\n}\nfunction numbers_add_msg(cfb, type, msg, path, deps, id) {\n  if (!id)\n    id = get_unique_msgid({ deps: [], location: \"\", type: type }, deps);\n  var loc = \"\".concat(path, \"-\").concat(id, \".iwa\");\n  deps[id].location = \"Root Entry\" + loc;\n  CFB.utils.cfb_add(cfb, loc, compress_iwa_file(write_iwa_file([{\n    id: id,\n    messages: [write_iwam(type, write_shallow(msg))]\n  }])));\n  var newloc = loc.replace(/^[\\/]/, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  numbers_iwa_doit(cfb, deps, 2, function(ai) {\n    var mlist = parse_shallow(ai.messages[0].data);\n    numbers_add_meta(mlist, id || 0, newloc);\n    ai.messages[0].data = write_shallow(mlist);\n  });\n  return id;\n}\nfunction numbers_meta_add_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function(m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0])\n      return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc)\n      return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6])\n    parent[6] = [];\n  (Array.isArray(dep) ? dep : [dep]).forEach(function(dep2) {\n    parent[6].push({\n      type: 2,\n      data: write_shallow([\n        [],\n        [{ type: 0, data: write_varint49(dep2) }]\n      ])\n    });\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_meta_del_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function(m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0])\n      return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc)\n      return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6])\n    parent[6] = [];\n  parent[6] = parent[6].filter(function(m) {\n    return varint_to_i32(parse_shallow(m.data)[1][0].data) != dep;\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_add_ws(cfb, deps, wsidx) {\n  var sheetref = -1, newsheetref = -1;\n  var remap = {};\n  numbers_iwa_doit(cfb, deps, 1, function(docroot, arch) {\n    var doc = parse_shallow(docroot.messages[0].data);\n    sheetref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n    newsheetref = get_unique_msgid({ deps: [1], location: deps[sheetref].location, type: 2 }, deps);\n    remap[sheetref] = newsheetref;\n    numbers_add_oref(docroot, newsheetref);\n    doc[1].push({ type: 2, data: write_TSP_Reference(newsheetref) });\n    var sheet = numbers_iwa_find(cfb, deps, sheetref);\n    sheet.id = newsheetref;\n    if (deps[1].location == deps[newsheetref].location)\n      arch.push(sheet);\n    else\n      numbers_iwa_doit(cfb, deps, newsheetref, function(_, x) {\n        return x.push(sheet);\n      });\n    docroot.messages[0].data = write_shallow(doc);\n  });\n  var tiaref = -1;\n  numbers_iwa_doit(cfb, deps, newsheetref, function(sheetroot, arch) {\n    var sa = parse_shallow(sheetroot.messages[0].data);\n    for (var i = 3; i <= 69; ++i)\n      delete sa[i];\n    var drawables = mappa(sa[2], parse_TSP_Reference);\n    drawables.forEach(function(n) {\n      return numbers_del_oref(sheetroot, n);\n    });\n    tiaref = get_unique_msgid({ deps: [newsheetref], location: deps[drawables[0]].location, type: deps[drawables[0]].type }, deps);\n    numbers_add_oref(sheetroot, tiaref);\n    remap[drawables[0]] = tiaref;\n    sa[2] = [{ type: 2, data: write_TSP_Reference(tiaref) }];\n    var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n    tia.id = tiaref;\n    if (deps[drawables[0]].location == deps[newsheetref].location)\n      arch.push(tia);\n    else {\n      numbers_iwa_doit(cfb, deps, 2, function(ai) {\n        var mlist = parse_shallow(ai.messages[0].data);\n        numbers_meta_add_dep(mlist, deps, newsheetref, tiaref);\n        ai.messages[0].data = write_shallow(mlist);\n      });\n      numbers_iwa_doit(cfb, deps, tiaref, function(_, x) {\n        return x.push(tia);\n      });\n    }\n    sheetroot.messages[0].data = write_shallow(sa);\n  });\n  var tmaref = -1;\n  numbers_iwa_doit(cfb, deps, tiaref, function(tiaroot, arch) {\n    var tia = parse_shallow(tiaroot.messages[0].data);\n    var da = parse_shallow(tia[1][0].data);\n    for (var i = 3; i <= 69; ++i)\n      delete da[i];\n    var dap = parse_TSP_Reference(da[2][0].data);\n    da[2][0].data = write_TSP_Reference(remap[dap]);\n    tia[1][0].data = write_shallow(da);\n    var oldtmaref = parse_TSP_Reference(tia[2][0].data);\n    numbers_del_oref(tiaroot, oldtmaref);\n    tmaref = get_unique_msgid({ deps: [tiaref], location: deps[oldtmaref].location, type: deps[oldtmaref].type }, deps);\n    numbers_add_oref(tiaroot, tmaref);\n    remap[oldtmaref] = tmaref;\n    tia[2][0].data = write_TSP_Reference(tmaref);\n    var tma = numbers_iwa_find(cfb, deps, oldtmaref);\n    tma.id = tmaref;\n    if (deps[tiaref].location == deps[tmaref].location)\n      arch.push(tma);\n    else\n      numbers_iwa_doit(cfb, deps, tmaref, function(_, x) {\n        return x.push(tma);\n      });\n    tiaroot.messages[0].data = write_shallow(tia);\n  });\n  numbers_iwa_doit(cfb, deps, tmaref, function(tmaroot, arch) {\n    var _a, _b;\n    var tma = parse_shallow(tmaroot.messages[0].data);\n    var uuid = u8str(tma[1][0].data), new_uuid = uuid.replace(/-[A-Z0-9]*/, \"-\".concat((\"0000\" + wsidx.toString(16)).slice(-4)));\n    tma[1][0].data = stru8(new_uuid);\n    [12, 13, 29, 31, 32, 33, 39, 44, 47, 81, 82, 84].forEach(function(n) {\n      return delete tma[n];\n    });\n    if (tma[45]) {\n      var srrta = parse_shallow(tma[45][0].data);\n      var ref = parse_TSP_Reference(srrta[1][0].data);\n      numbers_del_oref(tmaroot, ref);\n      delete tma[45];\n    }\n    if (tma[70]) {\n      var hsoa = parse_shallow(tma[70][0].data);\n      (_a = hsoa[2]) == null ? void 0 : _a.forEach(function(item) {\n        var hsa = parse_shallow(item.data);\n        [2, 3].map(function(n) {\n          return hsa[n][0];\n        }).forEach(function(hseadata) {\n          var hsea = parse_shallow(hseadata.data);\n          if (!hsea[8])\n            return;\n          var ref2 = parse_TSP_Reference(hsea[8][0].data);\n          numbers_del_oref(tmaroot, ref2);\n        });\n      });\n      delete tma[70];\n    }\n    [\n      46,\n      30,\n      34,\n      35,\n      36,\n      38,\n      48,\n      49,\n      60,\n      61,\n      62,\n      63,\n      64,\n      71,\n      72,\n      73,\n      74,\n      75,\n      85,\n      86,\n      87,\n      88,\n      89\n    ].forEach(function(n) {\n      if (!tma[n])\n        return;\n      var ref2 = parse_TSP_Reference(tma[n][0].data);\n      delete tma[n];\n      numbers_del_oref(tmaroot, ref2);\n    });\n    var store = parse_shallow(tma[4][0].data);\n    {\n      [2, 4, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22].forEach(function(n) {\n        var _a2;\n        if (!((_a2 = store[n]) == null ? void 0 : _a2[0]))\n          return;\n        var oldref = parse_TSP_Reference(store[n][0].data);\n        var newref = get_unique_msgid({ deps: [tmaref], location: deps[oldref].location, type: deps[oldref].type }, deps);\n        numbers_del_oref(tmaroot, oldref);\n        numbers_add_oref(tmaroot, newref);\n        remap[oldref] = newref;\n        var msg = numbers_iwa_find(cfb, deps, oldref);\n        msg.id = newref;\n        if (deps[oldref].location == deps[tmaref].location)\n          arch.push(msg);\n        else {\n          deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n          if (deps[newref].location == deps[oldref].location)\n            deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n          CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n          var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_add_meta(mlist, newref, newloc);\n            numbers_meta_add_dep(mlist, deps, tmaref, newref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        }\n        store[n][0].data = write_TSP_Reference(newref);\n      });\n      var row_headers = parse_shallow(store[1][0].data);\n      {\n        (_b = row_headers[2]) == null ? void 0 : _b.forEach(function(tspref) {\n          var oldref = parse_TSP_Reference(tspref.data);\n          var newref = get_unique_msgid({ deps: [tmaref], location: deps[oldref].location, type: deps[oldref].type }, deps);\n          numbers_del_oref(tmaroot, oldref);\n          numbers_add_oref(tmaroot, newref);\n          remap[oldref] = newref;\n          var msg = numbers_iwa_find(cfb, deps, oldref);\n          msg.id = newref;\n          if (deps[oldref].location == deps[tmaref].location) {\n            arch.push(msg);\n          } else {\n            deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n            if (deps[newref].location == deps[oldref].location)\n              deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n            CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n            var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n            numbers_iwa_doit(cfb, deps, 2, function(ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              numbers_add_meta(mlist, newref, newloc);\n              numbers_meta_add_dep(mlist, deps, tmaref, newref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tspref.data = write_TSP_Reference(newref);\n        });\n      }\n      store[1][0].data = write_shallow(row_headers);\n      var tiles = parse_shallow(store[3][0].data);\n      {\n        tiles[1].forEach(function(t) {\n          var tst = parse_shallow(t.data);\n          var oldtileref = parse_TSP_Reference(tst[2][0].data);\n          var newtileref = remap[oldtileref];\n          if (!remap[oldtileref]) {\n            newtileref = get_unique_msgid({ deps: [tmaref], location: \"\", type: deps[oldtileref].type }, deps);\n            deps[newtileref].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileref, \".iwa\");\n            remap[oldtileref] = newtileref;\n            var oldtile = numbers_iwa_find(cfb, deps, oldtileref);\n            oldtile.id = newtileref;\n            numbers_del_oref(tmaroot, oldtileref);\n            numbers_add_oref(tmaroot, newtileref);\n            CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileref, \".iwa\"), compress_iwa_file(write_iwa_file([oldtile])));\n            numbers_iwa_doit(cfb, deps, 2, function(ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              mlist[3].push({ type: 2, data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(newtileref) }],\n                [{ type: 2, data: stru8(\"Tables/Tile\") }],\n                [{ type: 2, data: stru8(\"Tables/Tile-\".concat(newtileref)) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [],\n                [],\n                [],\n                [],\n                [{ type: 0, data: write_varint49(0) }],\n                [],\n                [{ type: 0, data: write_varint49(0) }]\n              ]) });\n              mlist[1] = [{ type: 0, data: write_varint49(Math.max(newtileref + 1, varint_to_i32(mlist[1][0].data))) }];\n              numbers_meta_add_dep(mlist, deps, tmaref, newtileref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tst[2][0].data = write_TSP_Reference(newtileref);\n          t.data = write_shallow(tst);\n        });\n      }\n      store[3][0].data = write_shallow(tiles);\n    }\n    tma[4][0].data = write_shallow(store);\n    tmaroot.messages[0].data = write_shallow(tma);\n  });\n}\nfunction write_numbers_ws(cfb, deps, ws, wsname, sheetidx, rootref) {\n  var drawables = [];\n  numbers_iwa_doit(cfb, deps, rootref, function(docroot) {\n    var sheetref = parse_shallow(docroot.messages[0].data);\n    {\n      sheetref[1] = [{ type: 2, data: stru8(wsname) }];\n      drawables = mappa(sheetref[2], parse_TSP_Reference);\n    }\n    docroot.messages[0].data = write_shallow(sheetref);\n  });\n  var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n  var tmaref = parse_TSP_Reference(parse_shallow(tia.messages[0].data)[2][0].data);\n  numbers_iwa_doit(cfb, deps, tmaref, function(docroot, x) {\n    return write_numbers_tma(cfb, deps, ws, docroot, x, tmaref);\n  });\n}\nvar USE_WIDE_ROWS = true;\nfunction write_numbers_tma(cfb, deps, ws, tmaroot, tmafile, tmaref) {\n  if (!ws[\"!ref\"])\n    throw new Error(\"Cannot export empty sheet to NUMBERS\");\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 999) {\n    trunc = true;\n    range.e.c = 999;\n  }\n  if (range.e.r > 999999) {\n    trunc = true;\n    range.e.r = 999999;\n  }\n  if (trunc)\n    console.error(\"Truncating to \".concat(encode_range(range)));\n  var data = [];\n  if (ws[\"!data\"])\n    data = ws[\"!data\"];\n  else {\n    var colstr = [];\n    for (var _C = 0; _C <= range.e.c; ++_C)\n      colstr[_C] = encode_col(_C);\n    for (var R_ = 0; R_ <= range.e.r; ++R_) {\n      data[R_] = [];\n      var _R = \"\" + (R_ + 1);\n      for (_C = 0; _C <= range.e.c; ++_C) {\n        var _cell = ws[colstr[_C] + _R];\n        if (!_cell)\n          continue;\n        data[R_][_C] = _cell;\n      }\n    }\n  }\n  var LUT = {\n    cmnt: [{ a: \"~54ee77S~\", t: \"... the people who are crazy enough to think they can change the world, are the ones who do.\" }],\n    ferr: [],\n    fmla: [],\n    nfmt: [],\n    ofmt: [],\n    rsst: [{ v: \"~54ee77S~\", l: \"https://sheetjs.com/\" }],\n    sst: [\"~Sh33tJ5~\"]\n  };\n  var pb = parse_shallow(tmaroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      var row_header_ref = parse_TSP_Reference(parse_shallow(store[1][0].data)[2][0].data);\n      numbers_iwa_doit(cfb, deps, row_header_ref, function(rowhead, _x) {\n        var _a;\n        var base_bucket = parse_shallow(rowhead.messages[0].data);\n        if ((_a = base_bucket == null ? void 0 : base_bucket[2]) == null ? void 0 : _a[0])\n          for (var R2 = 0; R2 < data.length; ++R2) {\n            var _bucket = parse_shallow(base_bucket[2][0].data);\n            _bucket[1][0].data = write_varint49(R2);\n            _bucket[4][0].data = write_varint49(data[R2].length);\n            base_bucket[2][R2] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n          }\n        rowhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      numbers_iwa_doit(cfb, deps, col_header_ref, function(colhead, _x) {\n        var base_bucket = parse_shallow(colhead.messages[0].data);\n        for (var C = 0; C <= range.e.c; ++C) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        colhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var rbtree = parse_shallow(store[9][0].data);\n      rbtree[1] = [];\n      var tilestore = parse_shallow(store[3][0].data);\n      {\n        var tstride = 256;\n        tilestore[2] = [{ type: 0, data: write_varint49(tstride) }];\n        var tileref = parse_TSP_Reference(parse_shallow(tilestore[1][0].data)[2][0].data);\n        var save_token = function() {\n          var metadata = numbers_iwa_find(cfb, deps, 2);\n          var mlist = parse_shallow(metadata.messages[0].data);\n          var mlst = mlist[3].filter(function(m) {\n            return varint_to_i32(parse_shallow(m.data)[1][0].data) == tileref;\n          });\n          return (mlst == null ? void 0 : mlst.length) ? varint_to_i32(parse_shallow(mlst[0].data)[12][0].data) : 0;\n        }();\n        {\n          CFB.utils.cfb_del(cfb, deps[tileref].location);\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3] = mlist[3].filter(function(m) {\n              return varint_to_i32(parse_shallow(m.data)[1][0].data) != tileref;\n            });\n            numbers_meta_del_dep(mlist, deps, tmaref, tileref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_del_oref(tmaroot, tileref);\n        }\n        tilestore[1] = [];\n        var ntiles = Math.ceil((range.e.r + 1) / tstride);\n        for (var tidx = 0; tidx < ntiles; ++tidx) {\n          var newtileid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 6002\n          }, deps);\n          deps[newtileid].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileid, \".iwa\");\n          var tiledata = [\n            [],\n            [{ type: 0, data: write_varint49(0) }],\n            [{ type: 0, data: write_varint49(Math.min(range.e.r + 1, (tidx + 1) * tstride)) }],\n            [{ type: 0, data: write_varint49(0) }],\n            [{ type: 0, data: write_varint49(Math.min((tidx + 1) * tstride, range.e.r + 1) - tidx * tstride) }],\n            [],\n            [{ type: 0, data: write_varint49(5) }],\n            [{ type: 0, data: write_varint49(1) }],\n            [{ type: 0, data: write_varint49(USE_WIDE_ROWS ? 1 : 0) }]\n          ];\n          for (var R = tidx * tstride; R <= Math.min(range.e.r, (tidx + 1) * tstride - 1); ++R) {\n            var tilerow = write_TST_TileRowInfo(data[R], LUT, USE_WIDE_ROWS);\n            tilerow[1][0].data = write_varint49(R - tidx * tstride);\n            tiledata[5].push({ data: write_shallow(tilerow), type: 2 });\n          }\n          tilestore[1].push({ type: 2, data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(tidx) }],\n            [{ type: 2, data: write_TSP_Reference(newtileid) }]\n          ]) });\n          var newtile = {\n            id: newtileid,\n            messages: [write_iwam(6002, write_shallow(tiledata))]\n          };\n          var tilecontent = compress_iwa_file(write_iwa_file([newtile]));\n          CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileid, \".iwa\"), tilecontent);\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(newtileid) }],\n              [{ type: 2, data: stru8(\"Tables/Tile\") }],\n              [{ type: 2, data: stru8(\"Tables/Tile-\".concat(newtileid)) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [],\n              [],\n              [],\n              [],\n              [{ type: 0, data: write_varint49(0) }],\n              [],\n              [{ type: 0, data: write_varint49(save_token) }]\n            ]) });\n            mlist[1] = [{ type: 0, data: write_varint49(Math.max(newtileid + 1, varint_to_i32(mlist[1][0].data))) }];\n            numbers_meta_add_dep(mlist, deps, tmaref, newtileid);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_add_oref(tmaroot, newtileid);\n          rbtree[1].push({ type: 2, data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(tidx * tstride) }],\n            [{ type: 0, data: write_varint49(tidx) }]\n          ]) });\n        }\n      }\n      store[3][0].data = write_shallow(tilestore);\n      store[9][0].data = write_shallow(rbtree);\n      store[10] = [{ type: 2, data: new Uint8Array([]) }];\n      if (ws[\"!merges\"]) {\n        var mergeid = get_unique_msgid({\n          type: 6144,\n          deps: [tmaref],\n          location: deps[tmaref].location\n        }, deps);\n        tmafile.push({\n          id: mergeid,\n          messages: [write_iwam(6144, write_shallow([\n            [],\n            ws[\"!merges\"].map(function(m) {\n              return { type: 2, data: write_shallow([\n                [],\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 5, data: new Uint8Array(new Uint16Array([m.s.r, m.s.c]).buffer) }]\n                ]) }],\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 5, data: new Uint8Array(new Uint16Array([m.e.r - m.s.r + 1, m.e.c - m.s.c + 1]).buffer) }]\n                ]) }]\n              ]) };\n            })\n          ]))]\n        });\n        store[13] = [{ type: 2, data: write_TSP_Reference(mergeid) }];\n        numbers_iwa_doit(cfb, deps, 2, function(ai) {\n          var mlist = parse_shallow(ai.messages[0].data);\n          numbers_meta_add_dep(mlist, deps, tmaref, mergeid);\n          ai.messages[0].data = write_shallow(mlist);\n        });\n        numbers_add_oref(tmaroot, mergeid);\n      } else\n        delete store[13];\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      numbers_iwa_doit(cfb, deps, sstref, function(sstroot) {\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          LUT.sst.forEach(function(str, i) {\n            if (i == 0)\n              return;\n            sstdata[3].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(i) }],\n              [{ type: 0, data: write_varint49(1) }],\n              [{ type: 2, data: stru8(str) }]\n            ]) });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n      });\n      var rsstref = parse_TSP_Reference(store[17][0].data);\n      numbers_iwa_doit(cfb, deps, rsstref, function(rsstroot) {\n        var rsstdata = parse_shallow(rsstroot.messages[0].data);\n        rsstdata[3] = [];\n        var style_indices = [\n          904980,\n          903835,\n          903815,\n          903845\n        ];\n        LUT.rsst.forEach(function(rsst, i) {\n          if (i == 0)\n            return;\n          var tswpsa = [\n            [],\n            [{ type: 0, data: new Uint8Array([5]) }],\n            [],\n            [{ type: 2, data: stru8(rsst.v) }]\n          ];\n          tswpsa[10] = [{ type: 0, data: new Uint8Array([1]) }];\n          tswpsa[19] = [{ type: 2, data: new Uint8Array([10, 6, 8, 0, 18, 2, 101, 110]) }];\n          tswpsa[5] = [{ type: 2, data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 155, 149, 55]) }];\n          tswpsa[2] = [{ type: 2, data: new Uint8Array([8, 148, 158, 55]) }];\n          tswpsa[6] = [{ type: 2, data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0]) }];\n          tswpsa[7] = [{ type: 2, data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 135, 149, 55]) }];\n          tswpsa[8] = [{ type: 2, data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 165, 149, 55]) }];\n          tswpsa[14] = [{ type: 2, data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0]) }];\n          tswpsa[24] = [{ type: 2, data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0]) }];\n          var tswpsaid = get_unique_msgid({ deps: [], location: \"\", type: 2001 }, deps);\n          var tswpsarefs = [];\n          if (rsst.l) {\n            var newhlinkid = numbers_add_msg(cfb, 2032, [\n              [],\n              [],\n              [{ type: 2, data: stru8(rsst.l) }]\n            ], \"/Index/Tables/DataList\", deps);\n            tswpsa[11] = [];\n            var smartfield = [[], []];\n            if (!smartfield[1])\n              smartfield[1] = [];\n            smartfield[1].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(0) }],\n              [{ type: 2, data: write_TSP_Reference(newhlinkid) }]\n            ]) });\n            tswpsa[11][0] = { type: 2, data: write_shallow(smartfield) };\n            tswpsarefs.push(newhlinkid);\n          }\n          numbers_add_msg(cfb, 2001, tswpsa, \"/Index/Tables/DataList\", deps, tswpsaid);\n          numbers_iwa_doit(cfb, deps, tswpsaid, function(iwa) {\n            style_indices.forEach(function(ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n            tswpsarefs.forEach(function(ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n          });\n          var rtpaid = numbers_add_msg(cfb, 6218, [\n            [],\n            [{ type: 2, data: write_TSP_Reference(tswpsaid) }],\n            [],\n            [{ type: 2, data: new Uint8Array([13, 255, 255, 255, 0, 18, 10, 16, 255, 255, 1, 24, 255, 255, 255, 255, 7]) }]\n          ], \"/Index/Tables/DataList\", deps);\n          numbers_iwa_doit(cfb, deps, rtpaid, function(iwa) {\n            return numbers_add_oref(iwa, tswpsaid);\n          });\n          rsstdata[3].push({ type: 2, data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(i) }],\n            [{ type: 0, data: write_varint49(1) }],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [{ type: 2, data: write_TSP_Reference(rtpaid) }]\n          ]) });\n          numbers_add_oref(rsstroot, rtpaid);\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_meta_add_dep(mlist, deps, rsstref, rtpaid);\n            numbers_meta_add_dep(mlist, deps, rtpaid, tswpsaid);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, tswpsarefs);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, style_indices);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        });\n        rsstroot.messages[0].data = write_shallow(rsstdata);\n      });\n      if (LUT.cmnt.length > 1) {\n        var cmntref = parse_TSP_Reference(store[19][0].data);\n        var authors = {}, iauthor = 0;\n        numbers_iwa_doit(cfb, deps, cmntref, function(cmntroot) {\n          var cmntdata = parse_shallow(cmntroot.messages[0].data);\n          {\n            cmntdata[3] = [];\n            LUT.cmnt.forEach(function(cc, i) {\n              if (i == 0)\n                return;\n              var replies = [];\n              if (cc.replies)\n                cc.replies.forEach(function(c) {\n                  if (!authors[c.a || \"\"])\n                    authors[c.a || \"\"] = numbers_add_msg(cfb, 212, [\n                      [],\n                      [{ type: 2, data: stru8(c.a || \"\") }],\n                      [{ type: 2, data: get_author_color(++iauthor) }],\n                      [],\n                      [{ type: 0, data: write_varint49(0) }]\n                    ], \"/Index/Tables/DataList\", deps);\n                  var aaaid2 = authors[c.a || \"\"];\n                  var csaid2 = numbers_add_msg(cfb, 3056, [\n                    [],\n                    [{ type: 2, data: stru8(c.t || \"\") }],\n                    [{ type: 2, data: write_shallow([\n                      [],\n                      [{ type: 1, data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65]) }]\n                    ]) }],\n                    [{ type: 2, data: write_TSP_Reference(aaaid2) }]\n                  ], \"/Index/Tables/DataList\", deps);\n                  numbers_iwa_doit(cfb, deps, csaid2, function(iwa) {\n                    return numbers_add_oref(iwa, aaaid2);\n                  });\n                  replies.push(csaid2);\n                  numbers_iwa_doit(cfb, deps, 2, function(ai) {\n                    var mlist = parse_shallow(ai.messages[0].data);\n                    numbers_meta_add_dep(mlist, deps, csaid2, aaaid2);\n                    ai.messages[0].data = write_shallow(mlist);\n                  });\n                });\n              if (!authors[cc.a || \"\"])\n                authors[cc.a || \"\"] = numbers_add_msg(cfb, 212, [\n                  [],\n                  [{ type: 2, data: stru8(cc.a || \"\") }],\n                  [{ type: 2, data: get_author_color(++iauthor) }],\n                  [],\n                  [{ type: 0, data: write_varint49(0) }]\n                ], \"/Index/Tables/DataList\", deps);\n              var aaaid = authors[cc.a || \"\"];\n              var csaid = numbers_add_msg(cfb, 3056, [\n                [],\n                [{ type: 2, data: stru8(cc.t || \"\") }],\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 1, data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65]) }]\n                ]) }],\n                [{ type: 2, data: write_TSP_Reference(aaaid) }],\n                replies.map(function(r) {\n                  return { type: 2, data: write_TSP_Reference(r) };\n                }),\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 0, data: write_varint49(i) }],\n                  [{ type: 0, data: write_varint49(0) }]\n                ]) }]\n              ], \"/Index/Tables/DataList\", deps);\n              numbers_iwa_doit(cfb, deps, csaid, function(iwa) {\n                numbers_add_oref(iwa, aaaid);\n                replies.forEach(function(r) {\n                  return numbers_add_oref(iwa, r);\n                });\n              });\n              cmntdata[3].push({ type: 2, data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(i) }],\n                [{ type: 0, data: write_varint49(1) }],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [{ type: 2, data: write_TSP_Reference(csaid) }]\n              ]) });\n              numbers_add_oref(cmntroot, csaid);\n              numbers_iwa_doit(cfb, deps, 2, function(ai) {\n                var mlist = parse_shallow(ai.messages[0].data);\n                numbers_meta_add_dep(mlist, deps, cmntref, csaid);\n                numbers_meta_add_dep(mlist, deps, csaid, aaaid);\n                if (replies.length)\n                  numbers_meta_add_dep(mlist, deps, csaid, replies);\n                ai.messages[0].data = write_shallow(mlist);\n              });\n            });\n          }\n          cmntdata[2][0].data = write_varint49(LUT.cmnt.length + 1);\n          cmntroot.messages[0].data = write_shallow(cmntdata);\n        });\n      }\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  tmaroot.messages[0].data = write_shallow(pb);\n}\nfunction fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nfunction fix_read_opts(opts) {\nfix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\n\nfunction fix_write_opts(opts) {\nfix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\nfunction get_sheet_type(n/*:string*/)/*:string*/ {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction parse_sheet_legacy_drawing(sheet, type, zip, path, idx, opts, wb, comments) {\n\tif(!sheet || !sheet['!legdrawel']) return;\n\tvar dfile = resolve_path(sheet['!legdrawel'].Target, path);\n\tvar draw = getzipstr(zip, dfile, true);\n\tif(draw) parse_vml(utf8read(draw), sheet, comments||[]);\n}\n\nfunction safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!drawel']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!drawel'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tdefault: throw new Error(\"Unrecognized sheet type \" + stype);\n\t\t}\n\t\tsheets[sheet] = _ws;\n\n\t\t/* scan rels for comments and threaded comments */\n\t\tvar comments = [], tcomments = [];\n\t\tif(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {\n\t\t\tvar dfile = \"\";\n\t\t\tif(sheetRels[sheet][n].Type == RELS.CMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\tcomments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n\t\t\t\tif(!comments || !comments.length) return;\n\t\t\t\tsheet_insert_comments(_ws, comments, false);\n\t\t\t}\n\t\t\tif(sheetRels[sheet][n].Type == RELS.TCMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\ttcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n\t\t\t}\n\t\t});\n\t\tif(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n\t\tparse_sheet_legacy_drawing(_ws, stype, zip, path, idx, opts, wb, comments);\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tmake_ssf();\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) {\n\t\tif(typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n\t\tif(typeof parse_numbers_iwa != \"undefined\") {\n\t\t\tif(zip.FileIndex) return parse_numbers_iwa(zip, opts);\n\t\t\tvar _zip = CFB.utils.cfb_new();\n\t\t\tzipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });\n\t\t\treturn parse_numbers_iwa(_zip, opts);\n\t\t}\n\t\tthrow new Error('Unsupported NUMBERS file');\n\t}\n\tif(!safegetzipfile(zip, '[Content_Types].xml')) {\n\t\tif(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n\t\tif(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n\t\tvar index_zip = CFB.find(zip, 'Index.zip');\n\t\tif(index_zip) {\n\t\t\topts = dup(opts);\n\t\t\tdelete opts.type;\n\t\t\tif(typeof index_zip.content == \"string\") opts.type = \"binary\";\n\t\t\t// TODO: Bun buffer bug\n\t\t\tif(typeof Bun !== \"undefined\" && Buffer.isBuffer(index_zip.content)) return readSync(new Uint8Array(index_zip.content), opts);\n\t\t\treturn readSync(index_zip.content, opts);\n\t\t}\n\t\tthrow new Error('Unsupported ZIP file');\n\t}\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({}/*:any*/);\n\tvar styles = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme_xml(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\", opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\ttry {\n\t\t\tvar rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n\t\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n\t\t} catch(e) {}\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({}/*:any*/);\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({}/*:any*/);\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n\n\tif((dir.metadata || []).length >= 1) {\n\t\t/* TODO: MDX and other types of metadata */\n\t\topts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);\n\t}\n\n\tif((dir.people || []).length >= 1) {\n\t\topts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);\n\t}\n\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\twsloop: for(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/[\\S\\s]*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tif(opts && opts.sheets != null) switch(typeof opts.sheets) {\n\t\t\tcase \"number\": if(i != opts.sheets) continue wsloop; break;\n\t\t\tcase \"string\": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;\n\t\t\tdefault: if(Array.isArray && Array.isArray(opts.sheets)) {\n\t\t\t\tvar snjseen = false;\n\t\t\t\tfor(var snj = 0; snj != opts.sheets.length; ++snj) {\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen=1;\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n\t\t\t\t}\n\t\t\t\tif(!snjseen) continue wsloop;\n\t\t\t}\n\t\t}\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: dup(table_fmt)\n\t}/*:any*/);\n\tif(opts && opts.bookFiles) {\n\t\tif(zip.files) {\n\t\t\tout.keys = entries;\n\t\t\tout.files = zip.files;\n\t\t} else {\n\t\t\tout.keys = [];\n\t\t\tout.files = {};\n\t\t\tzip.FullPaths.forEach(function(p, idx) {\n\t\t\t\tp = p.replace(/^Root Entry[\\/]/, \"\");\n\t\t\t\tout.keys.push(p);\n\t\t\t\tout.files[p] = zip.FileIndex[idx];\n\t\t\t});\n\t\t}\n\t}\n\tif(opts && opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\t// TODO: pass back content types metadata for xlsm/xlsx resolution\n\tout.bookType = xlsb ? \"xlsb\" : \"xlsx\";\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\n/*:: declare var decrypt_agile:any; */\n\tif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\n/*:: declare var decrypt_std76:any; */\n\tif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip_xlsb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"bin\";\n\tvar vbafmt = true;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tvar people = [\"SheetJ5\"];\n\topts.tcid = 0;\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_bin(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar needtc = false;\n\t\t\t\tcomments.forEach(function(carr) {\n\t\t\t\t\tcarr[1].forEach(function(c) { if(c.T == true) needtc = true; });\n\t\t\t\t});\n\t\t\t\tif(needtc) {\n\t\t\t\t\tcf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n\t\t\t\t\tzip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n\t\t\t\t\tct.threadedcomments.push(cf);\n\t\t\t\t\tadd_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n\t\t\t\t}\n\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_bin(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_bin(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_bin(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tvar ww = write_theme(wb.Themes, opts);\n\tzip_add_file(zip, f, ww);\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_bin(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_bin());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tif(people.length > 1) {\n\t\tf = \"xl/persons/person.xml\";\n\t\tzip_add_file(zip, f, write_people_xml(people, opts));\n\t\tct.people.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n\t}\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction write_zip_xlsx(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tvar people = [\"SheetJ5\"];\n\topts.tcid = 0;\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar needtc = false;\n\t\t\t\tcomments.forEach(function(carr) {\n\t\t\t\t\tcarr[1].forEach(function(c) { if(c.T == true) needtc = true; });\n\t\t\t\t});\n\t\t\t\tif(needtc) {\n\t\t\t\t\tcf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n\t\t\t\t\tzip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n\t\t\t\t\tct.threadedcomments.push(cf);\n\t\t\t\t\tadd_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n\t\t\t\t}\n\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_xml(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_xml(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_xml(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_xml());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tif(people.length > 1) {\n\t\tf = \"xl/persons/person.xml\";\n\t\tzip_add_file(zip, f, write_people_xml(people, opts));\n\t\tct.people.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n\t}\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tcase 'base64': x = Base64_decode(f.slice(0,12)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\n\nfunction read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tzip = zip_read(d, o);\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64_decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\to.type = \"binary\";\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64_decode(d);\n\tif(typeof ArrayBuffer !== \"undefined\" && data instanceof ArrayBuffer) d = new Uint8Array(data);\n\td = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(1200, d.slice(2), 'str') : (\n\t\t(has_buf && Buffer.isBuffer(data)) ? data.slice(2).toString(\"utf16le\") :\n\t\t(typeof Uint8Array !== \"undefined\" && d instanceof Uint8Array) ? (\n\t\t\ttypeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\").decode(d.slice(2)) : utf16lereadu(d.slice(2))\n\t\t) : utf16leread(d.slice(2))\n\t);\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data/*:string*/)/*:string*/ {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treset_cp();\n\tvar o = opts||{};\n\tif(o.codepage && typeof $cptable === \"undefined\") console.error(\"Codepage tables are not loaded.  Non-ASCII characters may not give expected results\");\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n\tif(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n\tvar d = data, n = [0,0,0,0], str = false;\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\"; }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;\n\t\tcase 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49:\n\t\t\tif(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n\t\t\tif(n[1] === 0x44) return read_wb_ID(d, o);\n\t\t\tbreak;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF:\n\t\t\tif(n[1] === 0xFE) { return read_utf16(d, o); }\n\t\t\telse if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\tbreak;\n\t\tcase 0x00:\n\t\t\tif(n[1] === 0x00) {\n\t\t\t\tif(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\t\tif(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return rtf_to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t\tcase 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\"); break;\n\t\tcase 0x08: if(n[1] === 0xE7) throw new Error(\"Unsupported Multiplan 1.x file!\"); break;\n\t\tcase 0x0C:\n\t\t\tif(n[1] === 0xEC) throw new Error(\"Unsupported Multiplan 2.x file!\");\n\t\t\tif(n[1] === 0xED) throw new Error(\"Unsupported Multiplan 3.x file!\");\n\t\t\tbreak;\n\t}\n\tif(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb/*:CFBContainer*/, o/*:WriteOpts*/)/*:any*/ {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\nfunction write_zip(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tswitch(opts.bookType) {\n\t\tcase \"ods\": return write_ods(wb, opts);\n\t\tcase \"numbers\": return write_numbers_iwa(wb, opts);\n\t\tcase \"xlsb\": return write_zip_xlsb(wb, opts);\n\t\tdefault: return write_zip_xlsx(wb, opts);\n\t}\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip_xlsx(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z/*:any*/, o/*:?WriteOpts*/)/*:any*/ {\n\tvar oopts = {};\n\tvar ftype = has_buf ? \"nodebuffer\" : (typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\");\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = ftype;\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = ftype; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.FullPaths ? CFB.write(z, {fileType:\"zip\", type: /*::(*/{\"nodebuffer\": \"buffer\", \"string\": \"binary\"}/*:: :any)*/[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);\n\tif(typeof Deno !== \"undefined\") {\n\t\tif(typeof out == \"string\") {\n\t\t\tif(o.type == \"binary\" || o.type == \"base64\") return out;\n\t\t\tout = new Uint8Array(s2ab(out));\n\t\t}\n\t}\n/*jshint -W083 */\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n/*jshint +W083 */\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(/*::(*/out/*:: :any)*/) : out;\n}\n\nfunction write_cfb_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = opts||{};\n\tvar cfb/*:CFBContainer*/ = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out/*:string*/, opts/*:WriteOpts*/, bom/*:?string*/)/*:any*/ {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse if(typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out/*:string*/, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode_pass(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSyncXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSyncXLSX(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\treturn write_zip_typeXLSX(wb, o);\n}\n\nfunction writeSync(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSync(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\tvar idx = 0;\n\tif(o.sheet) {\n\t\tif(typeof o.sheet == \"number\") idx = o.sheet;\n\t\telse idx = wb.SheetNames.indexOf(o.sheet);\n\t\tif(!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + (typeof o.sheet));\n\t}\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'txt': return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'csv': return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'dbf': return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'prn': return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'rtf': return write_string_type(sheet_to_rtf(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'eth': return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'wk1': return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'numbers':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o/*:WriteFileOpts*/) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileSyncXLSX(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSyncXLSX(wb, o);\n}\n\n\nfunction writeFileAsync(filename/*:string*/, wb/*:Workbook*/, opts/*:?WriteFileOpts*/, cb/*:?(e?:ErrnoError)=>void*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts/*:any*/);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n\tvar isempty = true, dense = (sheet[\"!data\"] != null);\n\tvar row/*:any*/ = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[\"!data\"][R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? (sheet[\"!data\"][R]||[])[C] : sheet[cols[C] + rr];\n\t\tif(val == null || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = (v == 0 ? null : void 0); break;\n\t\t\tcase 's': case 'b':\n\t\t\tcase 'n': if(!val.z || !fmt_is_date(val.z)) break;\n\t\t\tv = numdate(v); // TODO: date1904 setting should also be stored in worksheet object\n\t\t\tif(typeof v == \"number\") break;\n\t\t\t/* falls through */\n\t\t\tcase 'd': if(!(o && (o.UTC||(o.raw === false)))) v = utc_to_local(new Date(v)); break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(val.t == \"e\" && v === null) row[hdr[C]] = null;\n\t\t\t\telse if(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = (val.t === 'n' && typeof o.rawNumbers === 'boolean' ? o.rawNumbers : raw) ? v : format_cell(val, v, o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\telse if(o.header == null) header = 0;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar out/*:Array<any>*/ = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = sheet[\"!data\"] != null;\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {\n\tvar isempty = true;\n\tvar row/*:Array<string>*/ = [], txt = \"\", rr = encode_row(R);\n\tvar dense = sheet[\"!data\"] != null;\n\tvar datarow = dense && sheet[\"!data\"][R] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = dense ? datarow[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+(o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.strip) while(row[row.length - 1] === \"\") --row.length;\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar row = \"\", cols/*:Array<string>*/ = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar w = 0;\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(row || (o.blankrows !== false)) out.push((w++ ? RS : \"\") + row);\n\t}\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof $cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = $cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols/*:Array<string>*/ = [], C;\n\tvar cmds/*:Array<string>*/ = [];\n\tvar dense = sheet[\"!data\"] != null;\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[\"!data\"][R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? (_ws[\"!data\"] != null) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar offset = +!o.skipHeader;\n\tvar ws/*:Worksheet*/ = _ws || ({});\n\tif(!_ws && dense) ws[\"!data\"] = [];\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t} else {\n\t\tif(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }\n\t}\n\tvar hdr/*:Array<string>*/ = o.header || [], C = 0;\n\tvar ROW = [];\n\tjs.forEach(function (JS, R/*:number*/) {\n\t\tif(dense && !ws[\"!data\"][_R + R + offset]) ws[\"!data\"][_R + R + offset] = [];\n\t\tif(dense) ROW = ws[\"!data\"][_R + R + offset];\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tvar ref = dense ? \"\" : (encode_col(_C + C) + encode_row(_R + R + offset));\n\t\t\tvar cell/*:Cell*/ = dense ? ROW[_C + C] : ws[ref];\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tif(dense) ROW[_C + C] = v;\n\t\t\t\telse ws[ref] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.UTC) v = local_to_utc(v);\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = (cell != null && cell.z && fmt_is_date(cell.z)) ? cell.z : (o.dateNF || table_fmt[14]);\n\t\t\t\t}\n\t\t\t\telse if(v === null && o.nullError) { t = 'e'; v = 0; }\n\t\t\t\tif(!cell) {\n\t\t\t\t\tif(!dense) ws[ref] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\t\telse ROW[_C + C] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\t} else {\n\t\t\t\t\tcell.t = t; cell.v = v;\n\t\t\t\t\tdelete cell.w; delete cell.R;\n\t\t\t\t\tif(z) cell.z = z;\n\t\t\t\t}\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(dense && !ws[\"!data\"][_R]) ws[\"!data\"][_R] = [];\n\tif(offset) for(C = 0; C < hdr.length; ++C) {\n\t\tif(dense) ws[\"!data\"][_R][C + _C] = {t:'s', v:hdr[C]};\n\t\telse ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\t}\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") {\n\t\tif(ws[\"!data\"] != null) {\n\t\t\tvar RC = decode_cell(R);\n\t\t\tif(!ws[\"!data\"][RC.r]) ws[\"!data\"][RC.r] = [];\n\t\t\treturn ws[\"!data\"][RC.r][RC.c] || (ws[\"!data\"][RC.r][RC.c] = {t:'z'});\n\t\t}\n\t\treturn ws[R] || (ws[R] = {t:'z'});\n\t}\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_col(C||0) + encode_row(R));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank or single-sheet workbook object */\nfunction book_new(ws/*:?Worksheet*/, wsname/*:?string*/)/*:Workbook*/ {\n\tvar wb = { SheetNames: [], Sheets: {} };\n\tif(ws) book_append_sheet(wb, ws, wsname || \"Sheet1\");\n\treturn wb;\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/, roll/*:?boolean*/)/*:string*/ {\n\tvar i = 1;\n\tif(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n\tif(roll && wb.SheetNames.indexOf(name) >= 0 && name.length < 32) {\n\t\tvar m = name.match(/\\d+$/); // at this point, name length is capped at 32\n\t\ti = m && +m[0] || 0;\n\t\tvar root = m && name.slice(0, m.index) || name;\n\t\tfor(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;\n\t}\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n\treturn name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {\n\tif(!wb.Workbook) wb.Workbook = {};\n\tif(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tif(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell/*:Cell*/, fmt/*:string|number*/) {\n\tcell.z = fmt;\n\treturn cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target }/*:Hyperlink*/);\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n}\nfunction cell_set_internal_link(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return cell_set_hyperlink(cell, \"#\" + range, tooltip); }\n\n/* add to cell comments */\nfunction cell_add_comment(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) {\n\t\t\tcell.f = formula;\n\t\t\tif(dynamic) cell.D = true;\n\t\t}\n\t}\n\tvar wsr = decode_range(ws[\"!ref\"]);\n\tif(wsr.s.r > rng.s.r) wsr.s.r = rng.s.r;\n\tif(wsr.s.c > rng.s.c) wsr.s.c = rng.s.c;\n\tif(wsr.e.r < rng.e.r) wsr.e.r = rng.e.r;\n\tif(wsr.e.c < rng.e.c) wsr.e.c = rng.e.c;\n\tws[\"!ref\"] = encode_range(wsr);\n\treturn ws;\n}\n\nvar utils/*:any*/ = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tsheet_new: sheet_new,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\tsheet_add_dom: sheet_add_dom,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: sheet_to_html,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json,\n\tsheet_get_cell: ws_get_cell_stub,\n\tbook_new: book_new,\n\tbook_append_sheet: book_append_sheet,\n\tbook_set_sheet_visibility: book_set_sheet_visibility,\n\tcell_set_number_format: cell_set_number_format,\n\tcell_set_hyperlink: cell_set_hyperlink,\n\tcell_set_internal_link: cell_set_internal_link,\n\tcell_add_comment: cell_add_comment,\n\tsheet_set_array_formula: sheet_set_array_formula,\n\tconsts: {\n\t\tSHEET_VISIBLE: 0,\n\t\tSHEET_HIDDEN: 1,\n\t\tSHEET_VERY_HIDDEN: 2\n\t}\n};\n\nvar _Readable;\nfunction set_readable(R) { _Readable = R; }\n\nfunction write_csv_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable();\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar row/*:?string*/ = \"\", cols/*:Array<string>*/ = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar R = r.s.r;\n\tvar BOM = false, w = 0;\n\tstream._read = function() {\n\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n\t\twhile(R <= r.e.r) {\n\t\t\t++R;\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n\t\t\tif(row != null) {\n\t\t\t\tif(row || (o.blankrows !== false)) return stream.push((w++ ? RS : \"\") + row);\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nfunction write_html_stream(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*/) {\n\tvar stream = _Readable();\n\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tstream.push(header);\n\tvar r = decode_range(ws['!ref']);\n\tstream.push(make_html_preamble(ws, r, o));\n\tvar R = r.s.r;\n\tvar end = false;\n\tstream._read = function() {\n\t\tif(R > r.e.r) {\n\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\n\t\t\treturn stream.push(null);\n\t\t}\n\t\twhile(R <= r.e.r) {\n\t\t\tstream.push(make_html_row(ws, r, R, o));\n\t\t\t++R;\n\t\t\tbreak;\n\t\t}\n\t};\n\treturn stream;\n}\n\nfunction write_json_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable({objectMode:true});\n\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar counter = 0;\n\tvar dense = sheet[\"!data\"] != null;\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tR = r.s.r + offset;\n\tstream._read = function() {\n\t\twhile(R <= r.e.r) {\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, o);\n\t\t\t++R;\n\t\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n\t\t\t\tstream.push(row.row);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nvar __stream = {\n\tto_json: write_json_stream,\n\tto_html: write_html_stream,\n\tto_csv: write_csv_stream,\n\tset_readable: set_readable\n};\nexport const version = XLSX.version;\nexport {\n\tparse_xlscfb,\n\tparse_zip,\n\treadSync as read,\n\treadFileSync as readFile,\n\treadFileSync,\n\twriteSync as write,\n\twriteFileSync as writeFile,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteSyncXLSX as writeXLSX,\n\twriteFileSyncXLSX as writeFileXLSX,\n\tutils,\n\tset_fs,\n\tset_cptable,\n\t__stream as stream,\n\tSSF,\n\tCFB\n};\nexport default {\n\tparse_xlscfb,\n\tparse_zip,\n\tread: readSync,\n\treadFile: readFileSync,\n\treadFileSync,\n\twrite: writeSync,\n\twriteFile: writeFileSync,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteXLSX: writeSyncXLSX,\n\twriteFileXLSX: writeFileSyncXLSX,\n\tutils,\n\tset_fs,\n\tset_cptable,\n\tstream: __stream,\n\tSSF,\n\tCFB\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../es2015/.internal/bundled/xlsx/xlsx.mjs\n// module id = 3BtD\n// module chunks = bf3e","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js\n// module id = 6I2M\n// module chunks = 71c9 bf3e","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js\n// module id = Ul5o\n// module chunks = 71c9 bf3e","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/process/browser.js\n// module id = Xm2t\n// module chunks = 0471 bf3e","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js\n// module id = ZUfS\n// module chunks = 71c9 bf3e"],"sourceRoot":""}