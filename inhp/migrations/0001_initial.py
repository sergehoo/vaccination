# Generated by Django 4.2.20 on 2025-03-19 22:58

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CentreVaccination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('adresse', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DistrictSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geojson', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Maladie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_patient', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('prenoms', models.CharField(max_length=255)),
                ('date_naissance', models.DateField()),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=10)),
                ('situation_matrimoniale', models.CharField(blank=True, max_length=50, null=True)),
                ('nombre_enfant', models.IntegerField(blank=True, default=0, null=True)),
                ('nationalite', models.CharField(max_length=100)),
                ('type_piece', models.CharField(max_length=100)),
                ('num_piece', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('telephone1', models.CharField(blank=True, max_length=50, null=True)),
                ('telephone2', models.CharField(blank=True, max_length=50, null=True)),
                ('commune', models.CharField(max_length=255)),
                ('quartier', models.CharField(max_length=255)),
                ('niveau_instruction', models.CharField(blank=True, max_length=100, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('consentement_parental', models.BooleanField(default=False)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif')], default='actif', max_length=50)),
                ('code_otp', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('centre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='inhp.centrevaccination')),
                ('centre_actuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients_actuels', to='inhp.centrevaccination')),
            ],
        ),
        migrations.CreateModel(
            name='PolesRegionaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeServiceSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=500, null=True)),
                ('acronyme', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('role', models.CharField(choices=[('agent_saisie', 'Agent de Saisie'), ('superviseur', 'Superviseur'), ('responsable', 'Responsable'), ('patient', 'Patient')], default='agent_saisie', max_length=20)),
                ('access_level', models.CharField(choices=[('centre', 'Centre de Vaccination'), ('district', 'District Sanitaire'), ('region', 'Région Sanitaire'), ('pole', 'Pôle Régional'), ('national', 'National')], default='centre', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('centre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs_centre', to='inhp.centrevaccination')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs_district', to='inhp.districtsanitaire')),
                ('groups', models.ManyToManyField(blank=True, related_name='utilisateur_groups', to='auth.group')),
                ('pole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs_pole', to='inhp.polesregionaux')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs_regions', to='inhp.healthregion')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='utilisateur_permissions', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vaccin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(db_index=True, max_length=255, unique=True)),
                ('fabricant', models.CharField(blank=True, max_length=255, null=True)),
                ('type_vaccin', models.CharField(choices=[('ARNm', 'ARN messager'), ('inactif', 'Virus Inactivé'), ('attenue', 'Virus Atténué'), ('sous_unitaire', 'Sous-unitaire Protéique'), ('vecteur_viral', 'Vecteur Viral')], max_length=50)),
                ('doses_requises', models.PositiveIntegerField(default=1)),
                ('intervalle_doses', models.PositiveIntegerField(blank=True, help_text='Intervalle en jours entre les doses', null=True)),
                ('pays_origine', models.CharField(blank=True, max_length=100, null=True)),
                ('statut_approbation', models.BooleanField(default=True, help_text='Le vaccin est-il approuvé ?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maladie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccinsmaladie', to='inhp.maladie')),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_vaccination', models.DateField()),
                ('lot', models.CharField(blank=True, max_length=100, null=True)),
                ('dose', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccinations', to='inhp.centrevaccination')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inhp.utilisateur')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_vaccinations', to='inhp.patient')),
                ('vaccin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccins', to='inhp.vaccin')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inhp.utilisateur'),
        ),
        migrations.AddField(
            model_name='healthregion',
            name='poles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regions', to='inhp.polesregionaux'),
        ),
        migrations.AddField(
            model_name='districtsanitaire',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='inhp.healthregion'),
        ),
        migrations.AddField(
            model_name='centrevaccination',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='centres', to='inhp.districtsanitaire'),
        ),
        migrations.AddField(
            model_name='centrevaccination',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inhp.typeservicesanitaire'),
        ),
    ]
